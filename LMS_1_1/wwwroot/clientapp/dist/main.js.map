{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/AddPartipant/add-partipant.component.css","webpack:///./app/AddPartipant/add-partipant.component.html","webpack:///./app/AddPartipant/add-partipant.component.ts","webpack:///./app/AddPartipant/add-partipant.module.ts","webpack:///./app/AddPartipant/partipant.service.ts","webpack:///./app/Courses/course-delete/course-delete.component.css","webpack:///./app/Courses/course-delete/course-delete.component.html","webpack:///./app/Courses/course-delete/course-delete.component.ts","webpack:///./app/Courses/course-detail/course-detail.component.css","webpack:///./app/Courses/course-detail/course-detail.component.html","webpack:///./app/Courses/course-detail/course-detail.component.ts","webpack:///./app/Courses/course-edit/course-edit.component.css","webpack:///./app/Courses/course-edit/course-edit.component.html","webpack:///./app/Courses/course-edit/course-edit.component.ts","webpack:///./app/Courses/course-list/course-list.component.css","webpack:///./app/Courses/course-list/course-list.component.html","webpack:///./app/Courses/course-list/course-list.component.ts","webpack:///./app/Courses/course.service.ts","webpack:///./app/Courses/courses.module.ts","webpack:///./app/Courses/create-course/create-course.component.css","webpack:///./app/Courses/create-course/create-course.component.html","webpack:///./app/Courses/create-course/create-course.component.ts","webpack:///./app/Courses/detail_list/detail_list.component.html","webpack:///./app/Courses/detail_list/detail_list.component.ts","webpack:///./app/Login/AddStudentToCourse/add_student_to_course.component.css","webpack:///./app/Login/AddStudentToCourse/add_student_to_course.component.html","webpack:///./app/Login/AddStudentToCourse/add_student_to_course.component.ts","webpack:///./app/Login/ConfirmRegistedUser/confirm-registed-user.component.css","webpack:///./app/Login/ConfirmRegistedUser/confirm-registed-user.component.html","webpack:///./app/Login/ConfirmRegistedUser/confirm-registed-user.component.ts","webpack:///./app/Login/DeleteUser/deleteuser.component.css","webpack:///./app/Login/DeleteUser/deleteuser.component.html","webpack:///./app/Login/DeleteUser/deleteuser.component.ts","webpack:///./app/Login/EditUser/edituser.component.css","webpack:///./app/Login/EditUser/edituser.component.html","webpack:///./app/Login/EditUser/edituser.component.ts","webpack:///./app/Login/Login/login.component.css","webpack:///./app/Login/Login/login.component.html","webpack:///./app/Login/Login/login.component.ts","webpack:///./app/Login/LoginPartial/loginpartial.component.css","webpack:///./app/Login/LoginPartial/loginpartial.component.html","webpack:///./app/Login/LoginPartial/loginpartial.component.ts","webpack:///./app/Login/ManageUsers/manageusers.component.css","webpack:///./app/Login/ManageUsers/manageusers.component.html","webpack:///./app/Login/ManageUsers/manageusers.component.ts","webpack:///./app/Login/Register/register.component.css","webpack:///./app/Login/Register/register.component.html","webpack:///./app/Login/Register/register.component.ts","webpack:///./app/Login/Register/registeruser.ts","webpack:///./app/Login/login-message-handler.service.ts","webpack:///./app/Login/login.module.ts","webpack:///./app/Login/login.ts","webpack:///./app/Modules/Activity_list/actitity_list.component.html","webpack:///./app/Modules/Activity_list/actitity_list.component.ts","webpack:///./app/Modules/Create/add-module-with-course-id.component.css","webpack:///./app/Modules/Create/add-module-with-course-id.component.html","webpack:///./app/Modules/Create/add-module-with-course-id.component.ts","webpack:///./app/Modules/Details/details.component.css","webpack:///./app/Modules/Details/details.component.html","webpack:///./app/Modules/Details/details.component.ts","webpack:///./app/Modules/modules.module.ts","webpack:///./app/Navbar/navbar.component.css","webpack:///./app/Navbar/navbar.component.html","webpack:///./app/Navbar/navbar.component.ts","webpack:///./app/Navbar/navbar.module.ts","webpack:///./app/PartipantList/partipant-list.component.css","webpack:///./app/PartipantList/partipant-list.component.html","webpack:///./app/PartipantList/partipant-list.component.ts","webpack:///./app/Shared/is-authenticated.guard.ts","webpack:///./app/Shared/is-teacher.guard.ts","webpack:///./app/Shared/shared.module.ts","webpack:///./app/app.component.css","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/auth/auth.service.ts","webpack:///./app/auth/tokenData.ts","webpack:///./app/documents/document.service.ts","webpack:///./app/documents/upload-detail/upload-detail.component.css","webpack:///./app/documents/upload-detail/upload-detail.component.html","webpack:///./app/documents/upload-detail/upload-detail.component.ts","webpack:///./app/documents/upload/upload.component.css","webpack:///./app/documents/upload/upload.component.html","webpack:///./app/documents/upload/upload.component.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0FkZFBhcnRpcGFudC9hZGQtcGFydGlwYW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div  >\\r\\n  <div style=\\\"text-align:center\\\"  >\\r\\n       <span *ngIf=\\\"pageTitle\\\">Add/Remove students for {{pageTitle}}</span>\\r\\n  </div>\\r\\n  <div  class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        \\r\\n          <div>Filtera</div>\\r\\n        <div >\\r\\n            <input type='text'  [(ngModel)]='listFilter'/>\\r\\n        </div>\\r\\n        </div>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            &nbsp;\\r\\n          </div>\\r\\n        </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n  \\r\\n          <div class=\\\"table-responsive tableContainer\\\">\\r\\n            <label>Choose among these</label>\\r\\n\\r\\n\\r\\n\\r\\n            <table class=\\\"table scrollTable table-hover\\\"  cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"  >\\r\\n\\r\\n                <thead class=\\\"fixedHeader\\\">\\r\\n                  <tr id=\\\"from_ChooseFrom\\\">\\r\\n                    <th width=\\\"50%\\\">First Name</th>\\r\\n                    <th width=\\\"50%\\\">Last Name</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody id=\\\"Bodyn_ChooseFrom\\\" class=\\\"scrollContent\\\" >\\r\\n                      <tr *ngFor='let Choose of ChooseFrom'>\\r\\n                          <td width=\\\"49%\\\" title=\\\"Add\\\" (click)=\\\"chooseStudent(Choose.userid)\\\">{{Choose.firstName}}</td>\\r\\n                          <td width=\\\"49%\\\" title=\\\"Add\\\" (click)=\\\"chooseStudent(Choose.userid)\\\">{{Choose.lastName}}</td>\\r\\n                      </tr>\\r\\n\\r\\n                  </tbody>\\r\\n\\r\\n            </table>\\r\\n      \\r\\n          </div>\\r\\n        \\r\\n      </div>\\r\\n\\r\\n   \\r\\n<div class=\\\"col-sm-6\\\">\\r\\n  \\r\\n    <div class=\\\"table-responsive tableContainer\\\">\\r\\n        <label>Click here to unchoose</label>\\r\\n          <table class=\\\"table scrollTable table-hover\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"  >\\r\\n              <thead class=\\\"fixedHeader\\\">\\r\\n                <tr id=\\\"from_Choosed\\\">\\r\\n                  <th width=\\\"50%\\\">First Name</th>\\r\\n                  <th width=\\\"50%\\\">Last Name</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody id=\\\"Bodyn_Choosed\\\" class=\\\"scrollContent\\\">\\r\\n                    <tr *ngFor='let UnChoose of Choosed'>\\r\\n                        <td width=\\\"49%\\\" title=\\\"Remove\\\" (click)=\\\"unChooseStudent(UnChoose.userid)\\\">{{UnChoose.firstName}}</td>\\r\\n                        <td width=\\\"49%\\\" title=\\\"Remove\\\" (click)=\\\"unChooseStudent(UnChoose.userid)\\\">{{UnChoose.lastName}}</td>\\r\\n                    </tr>\\r\\n\\r\\n              </tbody>\\r\\n          </table>\\r\\n          <button  class=\\\"btn btn-success\\\" (click)=\\\"SaveStudents()\\\">Save</button>\\r\\n    </div>   \\r\\n    \\r\\n     \\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { IPartipant } from './partipant';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PartipantService } from './partipant.service';\r\nimport { throwError, Subject, Subscription } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'add-partipant',\r\n  templateUrl: './add-partipant.component.html',\r\n  styleUrls: ['./add-partipant.component.css']\r\n})\r\nexport class AddPartipantComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  pageTitle: string = \"\";\r\n  BlackList: IPartipant[] =[];\r\nprivate unsubscribe : Subject<void> = new Subject();\r\n\r\n  private _ChooseFrom: IPartipant[] =[];\r\n  get ChooseFrom(): IPartipant[]  {\r\n    return this._ChooseFrom;\r\n  }\r\n  set ChooseFrom(value: IPartipant[]) {\r\n    this._ChooseFrom = value;\r\n\r\n  }\r\n\r\n\r\n  private _Choosed:IPartipant[] =[];\r\n  get Choosed(): IPartipant[]  {\r\n    return this._Choosed;\r\n  }\r\n  set Choosed(value: IPartipant[]) {\r\n    this._Choosed = value;\r\n\r\n  }\r\n\r\n  courseid: string;\r\n\r\n  _listFilter = '';\r\n  get listFilter(): string {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n    this.performFilter(this.listFilter)\r\n  }\r\n\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private  PartipantService: PartipantService,\r\n    private cd: ChangeDetectorRef\r\n  \r\n    ) { }\r\n\r\n  ngOnInit() {\r\n\r\n      this.courseid = this.route.snapshot.paramMap.get('id');\r\n      this.PartipantService.CourseId = this.courseid;\r\n     this.PartipantService.GetStudentsOff()\r\n    .pipe(takeUntil(this.unsubscribe))\r\n   .subscribe\r\n    (\r\n      Choose=> {\r\n        this.ChooseFrom=Choose;\r\n        this.cd.markForCheck();\r\n      }\r\n    \r\n    );\r\n    this.PartipantService.GetStudentsOn()\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe\r\n    (\r\n      Choosed=>\r\n      { \r\n        this.Choosed=Choosed; \r\n        this.PartipantService.Choosed=this.Choosed;\r\n        this.cd.markForCheck();\r\n      }\r\n    );\r\n    this.PartipantService.GetCourseName()\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe\r\n    (\r\n      CourseName => {\r\n        this.pageTitle=CourseName.value.name;\r\n        this.cd.markForCheck();\r\n      }\r\n    );\r\n    \r\n  }\r\n\r\n  public chooseStudent(userid : string) : void\r\n  {\r\n\r\n      const keyin=this.ChooseFrom.findIndex(cu => cu.userid==userid);\r\n      if(keyin == -1) throwError;\r\n      const user=this.ChooseFrom.splice(+keyin,1);\r\n      this.Choosed.push(user[0]);\r\n      this.PartipantService.AddStudent(user[0]);\r\n      if(this.Choosed.length>1)\r\n      {\r\n        this.Choosed.sort(function(a,b)\r\n       {\r\n        const FirstNameA=a.firstName.toLocaleUpperCase();\r\n        const LastNameA=a.lastName.toLocaleUpperCase();\r\n        const FirstNameB=b.firstName.toLocaleUpperCase();\r\n        const LastNameB=b.lastName.toLocaleUpperCase();\r\n        if (FirstNameA < FirstNameB)\r\n            return -1;\r\n        if (FirstNameA > FirstNameB)\r\n             return 1;\r\n        if (LastNameA < LastNameB)\r\n             return -1;\r\n        if (LastNameA > LastNameB)\r\n             return 1;\r\n        return 0;\r\n      }\r\n      );\r\n    }\r\n  }\r\n\r\n  public unChooseStudent(userid : string) : void\r\n  {\r\n      const keyin=this.Choosed.findIndex(cu => cu.userid==userid);\r\n      if(keyin == -1) throwError;\r\n      const user=this.Choosed.splice(+keyin,1);\r\n      this.ChooseFrom.push(user[0]);\r\n      this.PartipantService.RemoveStudent(user[0]);\r\n      if(this.ChooseFrom.length>1)\r\n      {\r\n        this.ChooseFrom.sort(function(a,b)\r\n        {\r\n          const FirstNameA=a.firstName.toLocaleUpperCase();\r\n          const LastNameA=a.lastName.toLocaleUpperCase();\r\n          const FirstNameB=b.firstName.toLocaleUpperCase();\r\n          const LastNameB=b.lastName.toLocaleUpperCase();\r\n            if (FirstNameA < FirstNameB)\r\n                return -1;\r\n            if (FirstNameA > FirstNameB)\r\n                return 1;\r\n            if (LastNameA < LastNameB)\r\n                return -1;\r\n            if (LastNameA > LastNameB)\r\n                return 1;\r\n            return 0;\r\n        }\r\n        );\r\n      }\r\n  }\r\n  public SaveStudents()\r\n  {\r\n    this.PartipantService.SaveStudents()\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe(\r\n      status =>\r\n      {\r\n        this.cd.markForCheck();\r\n        this.router.navigate(['/courses', this.courseid])\r\n      }\r\n          \r\n    );\r\n    //;\r\n  }\r\n\r\n  private performFilter(FilterBy: string): void\r\n  {\r\n    let l1=this.BlackList.length, i1:number;\r\n    for(i1=0;i1<l1;i1++)\r\n    { // new filter => reset before applying filter\r\n       let temp=this.BlackList.pop();\r\n       this.ChooseFrom.push(temp);\r\n\r\n    }\r\n    if(FilterBy != \"\")\r\n    {\r\n      let l2= this.ChooseFrom.length, i2:number;\r\n\r\n      for(i2=0;i2<l2;i2++)\r\n      {\r\n        if(this.ChooseFrom[i2].firstName.toLocaleUpperCase().indexOf(FilterBy.toLocaleUpperCase())==-1 &&\r\n        this.ChooseFrom[i2].lastName.toLocaleUpperCase().indexOf(FilterBy.toLocaleUpperCase())==-1\r\n        )\r\n        {\r\n          let user=this.ChooseFrom.splice(+i2,1);\r\n          this.BlackList.push(user[0]); // I Know there is just one hit cause key is scalar\r\n          i2--; // since one is gone...\r\n          l2--;// since one is gone...\r\n        }\r\n      }\r\n\r\n        if(this.ChooseFrom.length>1)\r\n        {\r\n          this.ChooseFrom.sort(function(a,b)\r\n          {\r\n          const FirstNameA=a.firstName.toLocaleUpperCase();\r\n          const LastNameA=a.lastName.toLocaleUpperCase();\r\n          const FirstNameB=b.firstName.toLocaleUpperCase();\r\n          const LastNameB=b.lastName.toLocaleUpperCase();\r\n            if (FirstNameA < FirstNameB)\r\n                return -1;\r\n            if (FirstNameA > FirstNameB)\r\n                return 1;\r\n            if (LastNameA < LastNameB)\r\n                return -1;\r\n            if (LastNameA > LastNameB)\r\n                return 1;\r\n            return 0;\r\n          }\r\n          );\r\n        }\r\n      \r\n    }\r\n  }\r\n\r\n  private FixHeader(From_id: string, To_id: string, Body_from_id: string): void\r\n   {\r\n      let element=document.querySelector(\"#\"+From_id).cloneNode(true);\r\n      let temp=[], i1, i2, el, l1;\r\n      const childs=document.querySelector(\"#\"+From_id).children;\r\n      l1= childs.length;\r\n      for( i1=0; i1<l1; i1++)\r\n      {\r\n        temp[i1]=childs.item(i1).clientWidth;\r\n      };\r\n      if(element.hasChildNodes)\r\n      {\r\n        let elchild=element.firstChild;\r\n        (elchild as HTMLElement).style.width==temp[0];\r\n        let elchild2=elchild.nextSibling;\r\n        for( i1=1; i1<l1; i1++)\r\n        {\r\n          (elchild2 as HTMLElement).style.width=temp[i1];\r\n          //elchild2.childNodes.item[0].clientWidth=temp[i1];\r\n          elchild2=elchild2.nextSibling;\r\n        }\r\n      }\r\n       let tableBody_from_id=( document.querySelector(\"table#\"+Body_from_id) as HTMLElement);\r\n       if(tableBody_from_id != null)\r\n       {\r\n        tableBody_from_id.style.tableLayout=\"fixed\";\r\n       }\r\n    //  ( document.querySelector(\"table#\"+Body_from_id) as HTMLElement).style.tableLayout=\"fixed\";\r\n      let bodytrs=document.querySelectorAll(\"#\"+Body_from_id+\" tr\");\r\n      bodytrs.forEach(function( el2, i2)\r\n      {\r\n        ( document.querySelectorAll(\"#\"+el2.id+\" td\")).forEach(function(el1,i1)\r\n        {\r\n          (el1 as HTMLElement).style.width=temp[i1];\r\n        },el2)\r\n\r\n      }, bodytrs);\r\n      let to_id_elem=document.querySelector(\"#\"+To_id);\r\n      if(to_id_elem.hasChildNodes)\r\n      {\r\n        document.querySelector(\"#\"+To_id).childNodes.forEach(function(el2, i2)\r\n        {\r\n            el2.remove();\r\n        });\r\n      };\r\n      document.querySelector(\"#\"+To_id).append(element);\r\n      (document.querySelector(\"#\"+From_id) as HTMLElement).style.display=\"none\";\r\n      (element as HTMLElement).style.display=\"Block\";\r\n  }\r\n\r\n/*\r\n   private sortfunction(a:IPartipant,b:IPartipant): -1|1|0\r\n   {\r\n    const FirstNameA=a.FirstName.toLocaleUpperCase();\r\n    const LastNameA=a.LastName.toLocaleUpperCase();\r\n    const FirstNameB=b.FirstName.toLocaleUpperCase();\r\n    const LastNameB=b.LastName.toLocaleUpperCase();\r\n    if(FirstNameA<FirstNameB)\r\n      return -1\r\n    if(FirstNameA>FirstNameB)  \r\n      return 1\r\n    if(LastNameA<LastNameB)\r\n      return -1\r\n    if(LastNameA>LastNameB)  \r\n      return 1 \r\n    return 0\r\n  }\r\n  */\r\n ngOnDestroy(): void {\r\n  this.unsubscribe.next();\r\n  this.unsubscribe.complete();\r\n}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddPartipantComponent } from './add-partipant.component';\r\nimport  { RouterModule} from '@angular/router';\r\nimport { IsTeacherGuard } from '../Shared/is-teacher.guard';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddPartipantComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    \r\n    RouterModule.forChild(\r\n      [{path:'AddPartipant/:id' \r\n      ,canActivate: [IsTeacherGuard]\r\n      ,component: AddPartipantComponent }\r\n    ]\r\n    )\r\n  ],\r\n  exports: [\r\n    AddPartipantComponent\r\n  ]\r\n})\r\nexport class AddPartipantModule { }\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { IPartipant,ICourseNameData,ICourseNameSubdata } from './partipant';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\n\r\nimport {Observable, throwError, Subject, BehaviorSubject} from 'rxjs';\r\nimport {catchError, tap, map, takeUntil} from 'rxjs/operators';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { ICourse } from '../Courses/course';\r\nimport { RegisterUser } from '../Login/Register/registeruser';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class PartipantService implements  OnDestroy{\r\n\r\n\r\n    public Choosed: IPartipant[] = [];\r\n\r\n    public CourseId: string=\"\";\r\n    private token: string=\"\";\r\n    private unsubscribe : Subject<void> = new Subject();\r\n    \r\n    private ShowPartipantListSource = new BehaviorSubject<boolean>(false);\r\n    ShowPartipantList = this.ShowPartipantListSource.asObservable();\r\n\r\n    constructor(private http: HttpClient,  private AuthService:AuthService) \r\n    {\r\n        this.AuthService.token\r\n        .pipe(takeUntil(this.unsubscribe))\r\n        .subscribe( i => {\r\n\r\n         this.token=i;\r\n\r\n        }\r\n         );\r\n    }\r\n     \r\npublic SendPartipantList(arg:boolean)\r\n{\r\n    this.ShowPartipantListSource.next(arg);\r\n}\r\n\r\n\r\n    private getAuthHeader() : HttpHeaders\r\n    {\r\n      return  new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token });\r\n    }\r\n\t\r\n\r\n    public GetStudentsOff(): Observable<IPartipant[] | undefined>\r\n    {\r\n        let url:string=\"https://localhost:44396/CourseUsers/GetusersOff\";  \r\n        let parmas={\"CourseId\":this.CourseId}; \r\n        return this.http.post<IPartipant[]>(url,parmas,\r\n            {headers: this.getAuthHeader() \r\n    } )\r\n        .pipe(\r\n            tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n        );    \r\n    }\r\n\r\n    public GetCourseName(): Observable<ICourseNameData| undefined>\r\n    {\r\n        let url:string=\"https://localhost:44396/CourseUsers/GetCourseName\";  \r\n        let parmas={\"CourseId\":this.CourseId}; \r\n        return this.http.post<ICourseNameData>(url,parmas\r\n            ,{headers: this.getAuthHeader() \r\n        })\r\n        .pipe(\r\n            tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n        ); \r\n\r\n     }\r\n    public GetStudentsOn(): Observable<IPartipant[] | undefined>\r\n    {\r\n        let url:string=\"https://localhost:44396/CourseUsers/GetusersOn\";  \r\n        let parmas={\"CourseId\":this.CourseId};   \r\n        return this.http.post<IPartipant[]>(url,parmas\r\n            ,{headers: this.getAuthHeader() \r\n    })\r\n        .pipe(\r\n           /* map(\r\n            (response:IPartipant[])=>\r\n        {this.Choosed=response;\r\n        }\r\n        ),*/\r\n            tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n        );  \r\n    }\r\n\r\n    public GetUsers()\r\n    {\r\n        let url:string=\"https://localhost:44396/CourseUsers/GetUsers\";  \r\n \r\n        return this.http.get<RegisterUser[]>(url,\r\n        {headers: this.getAuthHeader() \r\n    })\r\n        .pipe(tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError));\r\n\r\n    } \r\n\r\n\r\n    public SaveStudents()\r\n    {\r\n        let url:string=\"https://localhost:44396/CourseUsers/AddStudentsToCourse\";  \r\n        let Userids: string[] =[];\r\n        for(const part of this.Choosed )\r\n        {\r\n            Userids.push(part.userid);\r\n        }\r\n        //let parmas={\"CourseId\":this.CourseId,Userids};    \r\n        return this.http.post(url,{\"CourseId\":this.CourseId,Userids},\r\n        {headers: this.getAuthHeader() \r\n    })\r\n        .pipe(tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError));\r\n\r\n    } \r\n\r\n    public AddStudent(user: IPartipant ):void\r\n    {\r\n        let item: IPartipant = this.Choosed.find(i => i.userid == user.userid  );\r\n        \r\n        if (!item) \r\n        {\r\n            this.Choosed.push(user);\r\n        }\r\n    \r\n    }\r\n\r\n    public RemoveStudent(user: IPartipant):void\r\n    {\r\n        let item: IPartipant = this.Choosed.find(i => i.userid == user.userid  );\r\n        let index = this.Choosed.indexOf(item);\r\n        if(item)\r\n        {\r\n            \r\n            this.Choosed.splice(index,1);\r\n        }\r\n    }\r\n\r\n\r\n    public GetCoursesOff(userid?: string): Observable<ICourse[] | undefined>\r\n    {\r\n        let url:string=\"https://localhost:44396/CourseUsers/GetCoursesOff\";  \r\n        let parmas={\"UserId\":userid}; \r\n        return this.http.post<ICourse[]>(url,parmas,\r\n            {headers: this.getAuthHeader() \r\n    } )\r\n        .pipe(\r\n            tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n        );    \r\n    }\r\n\r\n\r\n    public GetCoursesOn(userid?: string): Observable<ICourse[] | undefined>\r\n    {\r\n        let url:string=\"https://localhost:44396/CourseUsers/GetCoursesOn\";  \r\n        let parmas={\"UserId\":userid};   \r\n        return this.http.post<ICourse[]>(url,parmas\r\n            ,{headers: this.getAuthHeader() \r\n    })\r\n    .pipe(\r\n            /* map(\r\n            (response:IPartipant[])=>\r\n        {this.Choosed=response;\r\n        }\r\n        ),*/\r\n            tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n        );  \r\n    }\r\n\r\n    public GetUserName(userid: string): Observable<ICourseNameData| undefined>\r\n    {\r\n        let url:string=\"https://localhost:44396/CourseUsers/GetUserName\";  \r\n        let parmas={\"UserId\":userid}; \r\n        return this.http.post<ICourseNameData>(url,parmas\r\n            ,{headers: this.getAuthHeader() \r\n        })\r\n        .pipe( \r\n            tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n        ); \r\n\r\n     }\r\n\r\n     public SaveCourses(userid: string, Choosed: ICourse[] )\r\n     {\r\n         let url:string=\"https://localhost:44396/CourseUsers/AddCoursesToStudent\";  \r\n         let courseids: string[] =[];\r\n         for(const part of Choosed )\r\n         {\r\n            courseids.push(part.id.toString());\r\n         }\r\n         //let parmas={\"CourseId\":this.CourseId,Userids};    \r\n         return this.http.post(url,{\"UserId\":userid,courseids},\r\n         {headers: this.getAuthHeader() \r\n     })\r\n         .pipe(tap(data => console.log('All: ' + JSON.stringify(data))),\r\n         catchError(this.handleError));\r\n \r\n     } \r\n \r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n          // The backend returned an unsuccessful response code.\r\n          // The response body may contain clues as to what went wrong,\r\n          errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n      }\r\n\r\n      ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0NvdXJzZXMvY291cnNlLWRlbGV0ZS9jb3Vyc2UtZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>Delete</h1>\\r\\n\\r\\n<h3>Are you sure you want to delete this?</h3>\\r\\n<div>\\r\\n    <h4>Course</h4>\\r\\n    <hr />\\r\\n    <dl class=\\\"row\\\">\\r\\n        <dt class=\\\"col-sm-2\\\">\\r\\n            Course\\r\\n        </dt>\\r\\n        <dd class=\\\"col-sm-10\\\">\\r\\n            {{course.name}}\\r\\n        </dd>\\r\\n        <dt class=\\\"col-sm-2\\\">\\r\\n            Start Date\\r\\n        </dt>\\r\\n        <dd class=\\\"col-sm-10\\\">\\r\\n            {{course.startDate |date: 'yyyy-MM-dd'}}\\r\\n        </dd>\\r\\n        <dt class=\\\"col-sm-2\\\">\\r\\n            Description\\r\\n        </dt>\\r\\n        <dd class=\\\"col-sm-10\\\">\\r\\n            {{course.description}}\\r\\n        </dd>\\r\\n    </dl>\\r\\n\\r\\n    <form #mycourse=\\\"ngForm\\\" (ngSubmit)=\\\"ConfirmedDelete()\\\">\\r\\n        <input type=\\\"hidden\\\" />\\r\\n        <input type=\\\"submit\\\" value=\\\"Delete\\\" class=\\\"btn btn-danger\\\" /> |\\r\\n        <a [routerLink]=\\\"['/courses']\\\" >Back to List</a>\\r\\n    </form>\\r\\n</div>\\r\\n<h4>NOTICE! All documents and activities connected to this course will be deleted.</h4>\"","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ICourse } from '../course';\r\nimport { CourseService } from '../course.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-course-delete',\r\n  templateUrl: './course-delete.component.html',\r\n  styleUrls: ['./course-delete.component.css']\r\n})\r\nexport class CourseDeleteComponent implements OnInit, OnDestroy  {\r\n\r\n    course: ICourse;\r\n    errorMsg: string;\r\n    private unsubscribe : Subject<void> = new Subject();\r\n\r\n    constructor(private route: ActivatedRoute, private CourseService: CourseService, private router: Router\r\n        ,private cd: ChangeDetectorRef) { }\r\n\r\n    ngOnInit() {\r\n        let id = this.route.snapshot.paramMap.get(\"id\");\r\n        this.CourseService.getCourseById(id)\r\n        .pipe(takeUntil(this.unsubscribe))\r\n        .subscribe(\r\n            tcourse => { \r\n                this.course = tcourse;\r\n                this.cd.markForCheck();\r\n            },\r\n            error => { this.errorMsg = <any>error; });\r\n    }\r\n\r\n    ConfirmedDelete() {\r\n        this.CourseService.DeleteCourse(this.course.id)\r\n        .pipe(takeUntil(this.unsubscribe))\r\n        .subscribe( c => {\r\n            this.cd.markForCheck();\r\n            this.router.navigate(['/courses']);\r\n        });\r\n        \r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n    }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0NvdXJzZXMvY291cnNlLWRldGFpbC9jb3Vyc2UtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"course\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"card\\\" style=\\\"width: 19rem;\\\">\\r\\n                <img class=\\\"card-img-top\\\" [src]=\\\"course.courseImgPath==null?'':course.courseImgPath\\\" alt=\\\"Card image cap\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <h3 class=\\\"card-title\\\">{{course.name}}</h3>\\r\\n                    <h5 class=\\\"card-title\\\">{{course.startDate |date: 'yyyy-MM-dd'}}</h5>\\r\\n                    <p class=\\\"card-text\\\"> {{course.description}}</p>\\r\\n\\r\\n\\r\\n                    <a href=\\\"javascript:void(0);\\\" (click)=\\\"toggelPartipantList()\\\">{{showpartipantlistmsg}}  partipantlist</a>\\r\\n                    <app-partipant-list [courseid]='course.id'></app-partipant-list>\\r\\n\\r\\n                    <div class=\\\"card-body\\\" *ngIf=\\\"isTeacher\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-6\\\">\\r\\n                                <!-- <a [routerLink]=\\\"['/Modules/AddModuleWithCourseId', course.id]\\\">Add Module</a> -->\\r\\n                                <a asp-controller=\\\"Modules\\\" asp-action=\\\"CreateWithCourseid\\\" asp-route-id=\\\"@Model.Id\\\" class=\\\"card-link\\\">Add Module</a>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-6\\\">\\r\\n                                <a [routerLink]=\\\"['/AddPartipant', course.id]\\\">Add Participant</a>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                </div>\\r\\n\\r\\n\\r\\n              \\r\\n            </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <detail_list [courseid]=\\\"course.id\\\"></detail_list>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n                <div>\\r\\n                    <upload-detail [DocOwnerId]=\\\"course.id\\\"></upload-detail>\\r\\n                </div>\\r\\n                <doc-upload [DocOwnerId]=\\\"course.id\\\" [DocOwnerTypeId]=\\\"1\\\" [DocumentTypeId]=\\\"2\\\"></doc-upload>\\r\\n\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\"","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { ICourse, course } from '../course';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CourseService } from '../course.service';\r\nimport { Guid } from 'guid-typescript';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { PartipantService } from 'ClientApp/app/AddPartipant/partipant.service';\r\n\r\n@Component({\r\n \r\n  templateUrl: './course-detail.component.html',\r\n  styleUrls: ['./course-detail.component.css']\r\n})\r\nexport class CourseDetailComponent implements OnInit, OnDestroy  {\r\n\r\n    course: ICourse;\r\n    errorMessage: string;\r\n    isTeacher: boolean=false;\r\n    showpartipantlist:boolean=false;\r\n  showpartipantlistmsg: string=\"Show\";\r\n\r\n    private unsubscribe : Subject<void> = new Subject();\r\n    constructor(private route: ActivatedRoute, private CourseService: CourseService, private AuthService : AuthService\r\n      ,private cd: ChangeDetectorRef\r\n      ,private partipantservice:PartipantService\r\n      ) { }\r\n\r\n    ngOnInit(): void {\r\n      this.isTeacher=this.AuthService.isTeacher;\r\n        /*this.AuthService.isTeacher\r\n        .pipe(takeUntil(this.unsubscribe))\r\n        .subscribe( i =>\r\n          { \r\n            this.isTeacher=i;\r\n            this.cd.markForCheck(); \r\n          });*/\r\n        let id: string = this.route.snapshot.paramMap.get('id');\r\n        this.CourseService.getCourseAndModulebyId(id)\r\n        .pipe(takeUntil(this.unsubscribe))\r\n        .subscribe(\r\n                course => {\r\n                    this.course = course;\r\n                    this.cd.markForCheck();\r\n                },\r\n                error => this.errorMessage = <any>error\r\n            );\r\n  }\r\n\r\n   public toggelPartipantList()\r\n   {\r\n      if(this.showpartipantlist)\r\n      {\r\n          this.showpartipantlist=false;\r\n          this.showpartipantlistmsg=\"Show\";\r\n          \r\n      }\r\n      else\r\n      {\r\n        this.showpartipantlist=true;\r\n        this.showpartipantlistmsg=\"Hide\";\r\n      }\r\n      this.partipantservice.SendPartipantList(this.showpartipantlist);\r\n   }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0NvdXJzZXMvY291cnNlLWVkaXQvY291cnNlLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Edit</h1>\\r\\n\\r\\n<h4>Course</h4>\\r\\n<hr />\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <form #mycourse=\\\"ngForm\\\" (ngSubmit)=\\\"UpdateCourse()\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"cname\\\" class=\\\"control-label\\\">Course Name</label>\\r\\n                    <input type=\\\"text\\\" required [(ngModel)]=\\\"editCourse.name\\\" name=\\\"cname\\\" class=\\\"form-control\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"startDate\\\" class=\\\"control-label\\\">Start Date</label>\\r\\n                    <input required type=\\\"datetime-local\\\" [(ngModel)]=\\\"editCourse.startDate\\\" name=\\\"startDate\\\" class=\\\"form-control\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"Description\\\" class=\\\"control-label\\\">Description</label>\\r\\n                    <!--<textarea [(ngModel)]=\\\"editCourse.description\\\" name=\\\"description\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"5\\\"/>-->\\r\\n                    <input [(ngModel)]=\\\"editCourse.description\\\" name=\\\"description\\\" class=\\\"form-control\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <b>File:  </b>\\r\\n                    <label for=\\\"courseImgPath\\\" class=\\\"control-label\\\" >{{editCourse.courseImgPath}}</label>\\r\\n                    <input type=\\\"file\\\" #fileInput [(ngModel)]=\\\"editCourse.courseImgPath\\\" name=\\\"courseImgPath\\\" class=\\\"form-control\\\" id=\\\"selectedFile\\\" style=\\\"display: none;\\\" />\\r\\n                    <div style=\\\"padding-left:20px\\\"></div>\\r\\n                    <input type=\\\"button\\\" value=\\\" Select a file \\\" onclick=\\\"document.getElementById('selectedFile').click();\\\" class=\\\"btn-secondary\\\" />\\r\\n                    <!--<input type=\\\"file\\\" name=\\\"coursePath\\\" class=\\\"form-control\\\" />-->\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"submit\\\" value=\\\"Save\\\" class=\\\"btn btn-primary\\\" />\\r\\n                </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n    <a [routerLink]=\\\"['/courses']\\\">Back to List</a>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ICourse } from '../course';\r\nimport { CourseService } from '../course.service';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Guid } from 'guid-typescript';\r\n\r\n@Component({\r\n  selector: 'app-course-edit',\r\n  templateUrl: './course-edit.component.html',\r\n  styleUrls: ['./course-edit.component.css']\r\n})\r\nexport class CourseEditComponent implements OnInit {\r\n    editCourse: ICourse;\r\n    errorMsg: string;\r\n    @ViewChild(\"fileInput\") fileInputVariable: any;\r\n    isTeacher: boolean;\r\n\r\n    constructor(private route: ActivatedRoute, private router: Router, private CourseService: CourseService, private AuthService: AuthService) { }\r\n\r\n    ngOnInit() {\r\n        let id = this.route.snapshot.paramMap.get(\"id\");\r\n        this.CourseService.getCourseById(id).subscribe(\r\n            tcourse => { \r\n                this.editCourse = tcourse;\r\n            },\r\n            error => { this.errorMsg = <any>error; });\r\n        //this.editCourse.courseImgPath = \"..\\\\assets\\\\img\\\\\" + this.editCourse.courseImgPath;\r\n    } \r\n\r\n    UpdateCourse() {\r\n        let fileToUpload = (this.fileInputVariable.nativeElement.files.length == 0) ?\r\n            (new File([new Blob()], this.editCourse.courseImgPath)) : this.fileInputVariable.nativeElement.files[0];\r\n\r\n        let formData = new FormData();\r\n        formData.append('criD', this.editCourse.id.toString());\r\n        formData.append('Name', this.editCourse.name);\r\n        formData.append('StartDate', this.editCourse.startDate.toString());\r\n        formData.append('Description', this.editCourse.description);\r\n        formData.append('FileData', fileToUpload);\r\n\r\n        this.CourseService.EditCourse(this.editCourse.id, formData).subscribe();\r\n        this.router.navigate(['/courses']);\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0NvdXJzZXMvY291cnNlLWxpc3QvY291cnNlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n<div class=\\\"row\\\" style=\\\"margin-bottom:15px;\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/courses/create']\\\" *ngIf=\\\"isTeacher\\\"> Create Course</a>\\r\\n    </div>\\r\\n</div>\\r\\n    <div class=\\\"row\\\" *ngIf='courses && courses.length'>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\" *ngFor='let course of courses'>\\r\\n\\r\\n            <div class=\\\"card\\\" style=\\\"width: 19rem;\\\">\\r\\n\\r\\n\\r\\n                <a [routerLink]=\\\"['/courses', course.id]\\\">\\r\\n                    <img class=\\\"card-img-top\\\" width=\\\"80px\\\" height=\\\"300px\\\"  [src]=\\\"course.courseImgPath==null?'':course.courseImgPath\\\" alt=\\\"Card image cap\\\" />\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <h3 class=\\\"card-title\\\">{{course.name}}</h3>\\r\\n\\r\\n                        <h5 class=\\\"card-title\\\">{{course.startDate |date: 'yyyy-MM-dd'}}</h5>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </a>\\r\\n                <div class=\\\"card-body\\\" *ngIf=\\\"isTeacher\\\">\\r\\n                    <a class=\\\"card-link\\\" [routerLink]=\\\"['/courses/edit', course.id]\\\">Edit Course</a>\\r\\n                    <a class=\\\"card-link\\\" [routerLink]=\\\"['/courses/delete', course.id]\\\">Delete Course</a>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\"","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { Data } from '@angular/router';\r\nimport { ICourse } from '../course';\r\nimport { CourseService } from '../course.service';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'course-list',\r\n    templateUrl: './course-list.component.html',\r\n    styleUrls: ['./course-list.component.css']\r\n})\r\nexport class CourseListComponent implements OnInit, OnDestroy  {\r\n\r\n    private unsubscribe : Subject<void> = new Subject();\r\n    courses: ICourse[] = [];\r\n    errorMessage: string;\r\n    isTeacher: boolean=false;\r\n   // private userId: string;\r\n    constructor(private CourseService: CourseService, private AuthService : AuthService\r\n        ,private cd: ChangeDetectorRef) {\r\n     //   this.AuthService.userid.subscribe( i => this.userId=i);\r\n    }\r\n\r\n     \r\n    ngOnInit(): void {\r\n        this.isTeacher=this.AuthService.isTeacher;\r\n       /* this.AuthService.isTeacher\r\n        .pipe(takeUntil(this.unsubscribe))\r\n        .subscribe( i =>\r\n            { \r\n                this.isTeacher=i;\r\n                this.cd.markForCheck();\r\n            }\r\n        );*/\r\n\r\n        this.CourseService.getCourses()\r\n        .pipe(takeUntil(this.unsubscribe))\r\n        .subscribe(\r\n            courses => {\r\n                this.courses = courses;\r\n                this.cd.markForCheck();\r\n            },\r\n            error => this.errorMessage = <any>error\r\n        );   \r\n    }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }  \r\n}\r\n","﻿import { Injectable, OnDestroy } from '@angular/core';\r\n\r\nimport { ICourse,course, IModule, IActivity2 } from './course';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError, BehaviorSubject, Subject } from 'rxjs';\r\n\r\nimport { tap, catchError, map, takeUntil } from 'rxjs/operators';\r\nimport { Guid } from 'guid-typescript';\r\nimport { Data } from '@angular/router';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n\r\n@Injectable(\r\n    {\r\n        providedIn: 'root'\r\n    })\r\n\r\nexport class CourseService implements  OnDestroy {\r\n    private courseUrl = \"https://localhost:44396/api/courses1\";\r\n    private token: string=\"\";\r\n    private unsubscribe : Subject<void> = new Subject();\r\n\r\n\r\n    \r\n    private getAuthHeader() : HttpHeaders\r\n    {\r\n      return  new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token });\r\n    }\r\n\r\n    constructor(private http: HttpClient,  private AuthService:AuthService) {\r\n        this.AuthService.token\r\n        .pipe(takeUntil(this.unsubscribe))\r\n        .subscribe( i => this.token=i);\r\n    }\r\n    getCourses(): Observable<ICourse[]> {\r\n        return this.http.get<ICourse[]>(this.courseUrl+\"/foruser\",\r\n        {headers: this.getAuthHeader() \r\n}).pipe(\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n            );\r\n    }\r\n    getCourseById(id: string): Observable<ICourse> {\r\n        return this.http.get<ICourse>(this.courseUrl +\"/\"+id,\r\n        {headers: this.getAuthHeader()  \r\n}).pipe(\r\n\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    getCourseAllById(id: string): Observable<ICourse> {\r\n        return this.http.get<ICourse>(this.courseUrl +\"/All?id=\" +id,\r\n        {headers: this.getAuthHeader() \r\n}).pipe(\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    getCourseAndModulebyId(courseid: string) : Observable<ICourse>\r\n    {\r\n        return this.http.get<ICourse>(this.courseUrl +\"/CAndM?id=\" +courseid,\r\n        {headers: this.getAuthHeader() \r\n}).pipe(\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n\r\n    }\r\n\r\n    getActivitybymodulId(Moduleid: string) : Observable<IActivity2[]>\r\n    {\r\n        return this.http.get<IActivity2[]>(this.courseUrl +\"/AfromMid?id=\" +Moduleid,\r\n        {headers: this.getAuthHeader() \r\n}).pipe(\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n\r\n    }\r\n    getModulAndActivitybyId(Moduleid: string) : Observable<IModule>\r\n    {\r\n        return this.http.get<IModule>(this.courseUrl +\"/MAndAfromMid?id=\" +Moduleid,\r\n        {headers: this.getAuthHeader() \r\n}).pipe(\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n\r\n    }\r\n\r\n\r\n    createCourse(course: any) {\r\n\r\n        return this.http.post(this.courseUrl,  course,\r\n            {headers: this.getAuthHeader() \r\n    }).pipe(\r\n            tap(result => JSON.stringify(result)),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    //Delete a course by a given guid.\r\n    DeleteCourse(id: Guid) {\r\n        let urlString = this.courseUrl +\"/\"+ id;\r\n        return this.http.delete(urlString,\r\n            {headers: this.getAuthHeader() \r\n        })\r\n        .pipe(\r\n            tap(result=>JSON.stringify(result)),catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    //Edit a course with a given guid.\r\n    EditCourse(id: Guid, editCourse: any) {\r\n        //console.log(\"COURSE FORM EDIT COURSE\" + editCourse);\r\n        let urlString = this.courseUrl + \"/\" + id;\r\n        return this.http.put(urlString, editCourse,\r\n            {\r\n                headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token })\r\n            })\r\n            .pipe(\r\n                tap(result => JSON.stringify(result)), catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n      }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CourseListComponent } from './course-list/course-list.component';\r\nimport { CourseDetailComponent } from './course-detail/course-detail.component';\r\nimport { CreateCourseComponent } from './create-course/create-course.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PartipantListComponent } from '../PartipantList/partipant-list.component';\r\nimport { detailList } from './detail_list/detail_list.component';\r\nimport { UploadComponent } from '../documents/upload/upload.component';\r\nimport { UploadDetailComponent } from '../documents/upload-detail/upload-detail.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CourseDeleteComponent } from './course-delete/course-delete.component';\r\nimport { CourseEditComponent } from './course-edit/course-edit.component';\r\n\r\nimport { SharedModule } from '../Shared/shared.module';\r\nimport { IsAuthenticatedGuard } from '../Shared/is-authenticated.guard';\r\nimport { IsTeacherGuard } from '../Shared/is-teacher.guard';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CourseListComponent,\r\n        CourseDetailComponent,\r\n        CreateCourseComponent,\r\n        PartipantListComponent,\r\n        CourseDeleteComponent,\r\n        CourseEditComponent,\r\n        detailList,\r\n        UploadComponent,\r\n        UploadDetailComponent\r\n\r\n    ],\r\n  imports: [\r\n      CommonModule,\r\n      FormsModule,\r\n      ReactiveFormsModule,\r\n    \r\n      SharedModule,\r\n      RouterModule.forChild(\r\n          [{\r\n              path: 'courses' \r\n              ,canActivate: [IsAuthenticatedGuard]\r\n              ,component: CourseListComponent\r\n          },\r\n              {\r\n                  path: 'courses/create'\r\n                  ,canActivate: [IsTeacherGuard] \r\n                 , component: CreateCourseComponent\r\n              },\r\n              {\r\n\r\n                  path: 'courses/:id'\r\n                  ,canActivate: [IsAuthenticatedGuard]\r\n                  , component: CourseDetailComponent\r\n              },\r\n              {\r\n                  path: 'courses/delete/:id'\r\n                  ,canActivate: [IsTeacherGuard] \r\n                  , component: CourseDeleteComponent\r\n              },\r\n              {\r\n                  path: 'courses/edit/:id'\r\n                  ,canActivate: [IsTeacherGuard] \r\n                  , component: CourseEditComponent\r\n\r\n              }\r\n          ]\r\n      )\r\n  ]\r\n})\r\nexport class CoursesModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0NvdXJzZXMvY3JlYXRlLWNvdXJzZS9jcmVhdGUtY291cnNlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"showMsg\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        <p class=\\\"alert alert-success\\\">\\r\\n            <strong>Registration Success!</strong> \\r\\n\\r\\n        </p>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <form #mycourse=\\\"ngForm\\\" (ngSubmit)=\\\"register(mycourse.value)\\\">\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\" class=\\\"control-label\\\">Name</label>\\r\\n                <input (ngModel)=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" />\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"startDate\\\" class=\\\"control-label\\\">StartDate</label>\\r\\n                <input type=\\\"date\\\" (ngModel)=\\\"startDate\\\"\\r\\n                       name=\\\"startDate\\\" class=\\\"form-control\\\" />\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"control-label\\\">Description</label>\\r\\n\\r\\n                <textarea (ngModel)=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"5\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"fileData\\\" class=\\\"control-label\\\">File</label>\\r\\n                <input type=\\\"file\\\" #fileInput (ngModel)=\\\"fileData\\\" name=\\\"fileData\\\" class=\\\"form-control\\\" />\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"submit\\\" value=\\\"Create\\\" class=\\\"btn btn-primary\\\" />\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { ICourse } from '../course';\r\nimport { ActivatedRoute, Data, Router} from '@angular/router';\r\n\r\nimport { CourseService } from '../course.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ViewChild } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-create-course',\r\n  templateUrl: './create-course.component.html',\r\n  styleUrls: ['./create-course.component.css']\r\n})\r\nexport class CreateCourseComponent implements OnInit, OnDestroy  {\r\n  private unsubscribe : Subject<void> = new Subject();\r\n    course: ICourse;\r\n    errorMessage: string;\r\n    courseForm: FormGroup;\r\n    @ViewChild(\"fileInput\") fileInputVariable: any;\r\n    showMsg: boolean = false;\r\n    constructor(private route: ActivatedRoute, private CourseService: CourseService\r\n      , private router: Router,  private cd: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n    }\r\n    \r\n    \r\n    \r\n\r\n    register(formValues) {\r\n\r\n       \r\n     \r\n        let fileToUpload = this.fileInputVariable.nativeElement.files[0];\r\n        let formData = new FormData();\r\n       \r\n        formData.append('Name', formValues.name);\r\n        formData.append('StartDate', formValues.startDate);\r\n        formData.append('Description', formValues.description);\r\n        formData.append('FileData', fileToUpload);\r\n        console.log(formData);\r\n        this.CourseService.createCourse(formData)\r\n        .pipe(takeUntil(this.unsubscribe))\r\n        .subscribe(\r\n            (result) => {\r\n                this.showMsg = true;\r\n                this.router.navigate(['/courses'])\r\n                \r\n                console.log(result);\r\n                console.log(\"Created a Course\");\r\n\r\n                this.cd.markForCheck();\r\n            },\r\n            error => this.errorMessage = <any>error\r\n        );\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n      this.unsubscribe.next();\r\n      this.unsubscribe.complete();\r\n    }\r\n    \r\n}\r\n","module.exports = \"<div *ngIf=\\\"course && course.modules && course.modules.length>0\\\">\\r\\n    <div id=\\\"accordion\\\" >\\r\\n\\r\\n        <!--string name = Regex.Replace(@module.Name, @\\\"[\\\\W_]+\\\", string.Empty);-->\\r\\n        <div class=\\\"card\\\" *ngFor=\\\"let module of course.modules\\\">\\r\\n            <div class=\\\"card-header\\\" [id]=\\\"module.id\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                \\r\\n                    <div class=\\\"btn btn-link collapsed col-6\\\"\\r\\n                        [attr.data-target]=\\\"'#'+ module.name2\\\"\\r\\n                        [attr.aria-controls]=\\\"module.name2\\\"\\r\\n                        data-toggle=\\\"collapse\\\"\\r\\n                        [attr.aria-expanded]=\\\"false\\\"\\r\\n                        (click)=\\\"TogggelCollapse(module.id)\\\"\\r\\n                        >\\r\\n                        <h5 class=\\\"mb-0\\\">  \\r\\n                          \\r\\n                            {{ module.name }}\\r\\n                        </h5>\\r\\n                        \\r\\n                     \\r\\n                    </div>\\r\\n                    \\r\\n                \\r\\n                <div class=\\\"col-6 somepadding\\\">\\r\\n                        <h5 class=\\\"mb-0\\\"> \\r\\n                        <a [routerLink]=\\\"['/Modules/', module.id]\\\">Details</a>\\r\\n                    </h5>\\r\\n                     </div>\\r\\n                    </div>\\r\\n            </div>\\r\\n\\r\\n            <div [id]=\\\"module.name2\\\" [class]=\\\"'collapse'+ module.isExpanded\\\" [attr.aria-labelledby]=\\\"module.id\\\" data-parent=\\\"#accordion\\\">\\r\\n                <div class=\\\"card-body\\\" *ngIf=\\\"module.activities && module.activities.length >0\\\">\\r\\n                    <h4>Activities</h4>\\r\\n                    <ul class=\\\"timeline\\\">\\r\\n\\r\\n                        <li *ngFor=\\\"let activity of module.activities\\\">\\r\\n                            <a asp-controller=\\\"LMSActivities\\\" asp-action=\\\"Details\\\" [attr.asp-route-id]=\\\"activity.id\\\">{{activity.name}}</a>\\r\\n                            <span class=\\\"float-right\\\"> {{activity.startDate |date: 'yyyy-MM-dd hh:mm:ss'}}</span>\\r\\n                            <p>{{activity.description}}\\r\\n                            <br>{{activity.activityType}}</p>\\r\\n                            <div *ngIf=\\\"isTeacher\\\">\\r\\n                                <a asp-controller=\\\"LMSActivities\\\" asp-action=\\\"Edit\\\" [attr.asp-route-id]=\\\"activity.id\\\">Edit Activity</a>&nbsp;|&nbsp;\\r\\n                                <a asp-controller=\\\"LMSActivities\\\" asp-action=\\\"Delete\\\" [attr.asp-route-id]=\\\"activity.id\\\">Delete Activity</a>\\r\\n                            </div>\\r\\n                        </li>\\r\\n\\r\\n                    </ul>\\r\\n                    <div *ngIf=\\\"isTeacher\\\">\\r\\n                        Add Activity\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n     </div>\\r\\n\\r\\n</div>\"","﻿import { Component, OnInit, Input, OnDestroy, ChangeDetectorRef } from \"@angular/core\";\r\nimport { ICourse, course } from '../course';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CourseService } from '../course.service';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: \"detail_list\",\r\n    templateUrl: \"detail_list.component.html\",\r\n    styleUrls:[]\r\n})\r\n\r\nexport class detailList implements OnInit, OnDestroy {\r\n\r\n     course: ICourse;\r\n     errorMessage: string;\r\n     @Input()   courseid: string;\r\n     private unsubscribe : Subject<void> = new Subject();\r\n\r\n   private savesubs: Array<[string,Subscription]>= new Array<[string,Subscription]>();\r\n     isTeacher: boolean;\r\n    constructor(private route: ActivatedRoute,\r\n        private CourseService: CourseService\r\n        , private AuthService : AuthService\r\n        ,private cd: ChangeDetectorRef\r\n        ) \r\n        { }\r\n    \r\n    ngOnInit() {\r\n        this.isTeacher=this.AuthService.isTeacher;\r\n        /*this.AuthService.isTeacher\r\n        .pipe(takeUntil(this.unsubscribe))\r\n        .subscribe( i =>{\r\n             this.isTeacher=i;\r\n             this.cd.markForCheck();\r\n        }\r\n        );*/\r\n\r\n\r\n        this.CourseService.getCourseAndModulebyId(this.courseid)\r\n        .pipe(takeUntil(this.unsubscribe))\r\n        .subscribe(\r\n                course => {\r\n                    this.course = course;\r\n                    this.cd.markForCheck();\r\n                },\r\n                error => this.errorMessage = <any>error\r\n            );\r\n    }\r\n\r\n    public TogggelCollapse(mid: string): void\r\n    {\r\n         if(this.course.modules.find(m => m.id.toString()==mid).isExpanded ==\" show\")\r\n        {\r\n              this.course.modules.find(m => m.id.toString()==mid).isExpanded=\"\";\r\n              if (this.savesubs.find( t => t[0]==mid))\r\n              {\r\n\r\n                  this.savesubs.find( t => t[0]==mid)[1].unsubscribe();\r\n                  this.savesubs.splice(this.savesubs.indexOf(this.savesubs.find( t => t[0]==mid)),1);\r\n              }\r\n\r\n        }\r\n         else\r\n        {\r\n           this.course.modules.find(m => m.id.toString()==mid).isExpanded=\" show\";\r\n           let temp=this.CourseService.getActivitybymodulId(mid)\r\n           .pipe(takeUntil(this.unsubscribe))\r\n           .subscribe(\r\n                    activities=>\r\n                    {\r\n                        this.course.modules.find(m => m.id.toString()==mid).activities=activities;\r\n                        this.cd.markForCheck();\r\n                    },\r\n                    error => this.errorMessage = <any>error\r\n                );\r\n            if (this.savesubs.find( t => t[0]==mid))\r\n            {\r\n                this.savesubs.find( t => t[0]==mid)[1]=temp;\r\n            }\r\n            else\r\n            {\r\n                this.savesubs.push([mid,temp])  ;\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n      }\r\n   \r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0xvZ2luL0FkZFN0dWRlbnRUb0NvdXJzZS9hZGRfc3R1ZGVudF90b19jb3Vyc2UuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n<div  *ngIf=\\\"!isTeacher\\\">\\r\\n<div style=\\\"text-align:center\\\"  >\\r\\n     <span *ngIf=\\\"pageTitle\\\">Add/Remove courses for {{pageTitle}}</span>\\r\\n</div>\\r\\n<div  class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      \\r\\n        <div>Filtera</div>\\r\\n      <div >\\r\\n          <input type='text'  [(ngModel)]='listFilter'/>\\r\\n      </div>\\r\\n      </div>\\r\\n        <div class=\\\"col-sm-6\\\">\\r\\n          &nbsp;\\r\\n        </div>\\r\\n      </div>\\r\\n  <div class=\\\"row\\\">\\r\\n      \\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n\\r\\n        <div class=\\\"table-responsive tableContainer\\\">\\r\\n          <label>Choose among these</label>\\r\\n\\r\\n\\r\\n\\r\\n          <table class=\\\"table scrollTable table-hover\\\"  cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"  >\\r\\n\\r\\n              <thead class=\\\"fixedHeader\\\">\\r\\n                <tr id=\\\"from_ChooseFrom\\\">\\r\\n                  <th width=\\\"100%\\\">Name</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody id=\\\"Bodyn_ChooseFrom\\\" class=\\\"scrollContent\\\" >\\r\\n                    <tr *ngFor='let Choose of ChooseFrom'>\\r\\n                        <td width=\\\"98%\\\" [title]=\\\"'Add '+ Choose.description\\\" (click)=\\\"chooseCourse(Choose.id)\\\">{{Choose.name}}</td>\\r\\n                    </tr>\\r\\n\\r\\n                </tbody>\\r\\n\\r\\n          </table>\\r\\n    \\r\\n        </div>\\r\\n      \\r\\n    </div>\\r\\n\\r\\n \\r\\n<div class=\\\"col-sm-6\\\">\\r\\n<div>\\r\\n  <div class=\\\"table-responsive tableContainer\\\">\\r\\n      <label>Click here to unchoose</label>\\r\\n        <table class=\\\"table scrollTable table-hover\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"  >\\r\\n            <thead class=\\\"fixedHeader\\\">\\r\\n              <tr id=\\\"from_Choosed\\\">\\r\\n                <th width=\\\"100%\\\">Name</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody id=\\\"Bodyn_Choosed\\\" class=\\\"scrollContent\\\">\\r\\n                  <tr *ngFor='let UnChoose of Choosed'>\\r\\n                      <td width=\\\"98%\\\" [title]=\\\"'Remove '+ UnChoose.description\\\" (click)=\\\"unChooseCourse(UnChoose.id)\\\">{{UnChoose.name}}</td>\\r\\n                  </tr>\\r\\n\\r\\n            </tbody>\\r\\n        </table>\\r\\n      </div> \\r\\n        <button *ngIf=\\\"userid && userid!=' '\\\" class=\\\"btn btn-success\\\" (click)=\\\"SaveCourses()\\\">Save</button>\\r\\n        <button *ngIf=\\\"!CoursesChoosed && (!userid || userid==' ')\\\" class=\\\"btn btn-success\\\" (click)=\\\"ChooseCourses()\\\">Lock Choosed</button>\\r\\n        <button *ngIf=\\\"CoursesChoosed && (!userid || userid==' ')\\\" class=\\\"btn btn-success\\\" (click)=\\\"ChooseCourses()\\\">Unlock choosed</button>\\r\\n      </div>\\r\\n  \\r\\n   \\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { ICourse } from 'ClientApp/app/Courses/course';\r\nimport { PartipantService } from 'ClientApp/app/AddPartipant/partipant.service';\r\nimport { Router } from '@angular/router';\r\nimport { throwError, Subject, Subscription } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { LoginMessageHandlerService } from '../login-message-handler.service';\r\n\r\n@Component({\r\n  selector: 'add_student_to_course',\r\n  templateUrl: './add_student_to_course.component.html',\r\n  styleUrls: ['./add_student_to_course.component.css']\r\n})\r\nexport class AddStudentToCourseComponent implements OnInit, OnDestroy  {\r\n  private test:string =\"\";\r\n\r\n  private unsubscribe : Subject<void> = new Subject();\r\n\r\n  pageTitle: string = \"\";\r\n  BlackList: ICourse[] =[];\r\n  private _ChooseFrom: ICourse[] =[];\r\n  Saveoff: Subscription= null;\r\n  SaveOn: Subscription= null;\r\n  Saveusername: Subscription=null;\r\n  isTeacher: boolean=false;\r\n  CoursesChoosed: boolean=false;\r\n  get ChooseFrom(): ICourse[]  {\r\n    return this._ChooseFrom;\r\n  }\r\n  set ChooseFrom(value: ICourse[]) {\r\n    this._ChooseFrom = value;\r\n\r\n  }\r\n\r\n\r\n  private _Choosed:ICourse[] =[];\r\n  get Choosed(): ICourse[]  {\r\n    return this._Choosed;\r\n  }\r\n  set Choosed(value: ICourse[]) {\r\n    this._Choosed = value;\r\n\r\n  }\r\n\r\n  userid: string=null;\r\n\r\n  _listFilter = '';\r\n  get listFilter(): string {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n   // this.performFilter(this.listFilter)\r\n  }\r\n\r\n  constructor(private PartipantService: PartipantService, private route:Router\r\n    ,private cd: ChangeDetectorRef\r\n    ,private messhandler: LoginMessageHandlerService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n   // this.userid= this.route.snapshot.paramMap.get('id');\r\n   // getfrom save on regsiteruser\r\n\r\n   this.messhandler.Isteacher\r\n   .pipe(takeUntil(this.unsubscribe))\r\n   .subscribe(\r\n     status => {\r\n       this.isTeacher=status\r\n       this.cd.markForCheck();\r\n     }\r\n   )\r\n\r\n    this.messhandler.userid\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe\r\n    (\r\n      (resp: string) =>\r\n      {\r\n       \r\n          if(resp != null && resp != \"\")\r\n          {\r\n            this.userid=resp;\r\n            if(!this.isTeacher && this.CoursesChoosed)\r\n            {\r\n                this.SaveCourses();\r\n            }\r\n            else\r\n            {\r\n             \r\n              if(this.Saveoff != null)\r\n              {\r\n                this.Saveoff.unsubscribe;\r\n              }\r\n              this.Saveoff=this.PartipantService.GetCoursesOff(this.userid)\r\n              .pipe(takeUntil(this.unsubscribe))\r\n              .subscribe\r\n              (\r\n                Choose=> { \r\n                  this.ChooseFrom=Choose;\r\n                  this.cd.markForCheck();\r\n                } \r\n              );\r\n\r\n              if(this.SaveOn != null)\r\n              {\r\n                this.SaveOn.unsubscribe;\r\n              }\r\n              this.SaveOn=this.PartipantService.GetCoursesOn(this.userid)\r\n              .pipe(takeUntil(this.unsubscribe))\r\n              .subscribe\r\n              (\r\n                Choosed=>{\r\n                  this.Choosed=Choosed;\r\n                  this.cd.markForCheck();\r\n                }\r\n              );\r\n              if(this.Saveusername != null)\r\n              {\r\n                this.Saveusername.unsubscribe();\r\n              }\r\n              this.Saveusername=this.PartipantService.GetUserName(this.userid)\r\n              .pipe(takeUntil(this.unsubscribe))\r\n              .subscribe\r\n              (\r\n                UserName => {\r\n                  if(UserName != null)\r\n                  {\r\n                    this.pageTitle=UserName.value.name;\r\n                  }\r\n                  this.cd.markForCheck();\r\n                }\r\n              );\r\n              this.cd.markForCheck();\r\n            }\r\n          }\r\n      }\r\n    )\r\n    this.Saveoff=this.PartipantService.GetCoursesOff(this.userid)\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe\r\n    (\r\n      Choose=> { \r\n        this.ChooseFrom=Choose;\r\n        this.cd.markForCheck();\r\n      } \r\n    );\r\n    this.SaveOn=this.PartipantService.GetCoursesOn(this.userid)\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe\r\n    (\r\n      Choosed=>{\r\n        this.Choosed=Choosed;\r\n        this.cd.markForCheck();\r\n      }\r\n    );\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  public chooseCourse(corseid : string) : void\r\n  {\r\n\r\n    if(!this.CoursesChoosed)\r\n    {\r\n      const keyin=this.ChooseFrom.findIndex(cu => cu.id.toString()==corseid );\r\n      if(keyin == -1) throwError;\r\n      const course=this.ChooseFrom.splice(+keyin,1);\r\n      this.Choosed.push(course[0]);\r\n      if(this.Choosed.length>1)\r\n      {\r\n        this.Choosed.sort(function(a,b)\r\n       {\r\n        const FirstNameA=a.name.toLocaleUpperCase();\r\n        const FirstNameB=b.name.toLocaleUpperCase();\r\n        if (FirstNameA < FirstNameB)\r\n            return -1;\r\n        if (FirstNameA > FirstNameB)\r\n             return 1;\r\n        return 0;\r\n      }\r\n      );\r\n    }\r\n  }\r\n  }\r\n\r\n  public unChooseCourse(corseid : string) : void\r\n  {\r\n    if(!this.CoursesChoosed)\r\n    {\r\n      const keyin=this.Choosed.findIndex(cu => cu.id.toString()==corseid);\r\n      if(keyin == -1) throwError;\r\n      const course=this.Choosed.splice(+keyin,1);\r\n      this.ChooseFrom.push(course[0]);\r\n      if(this.ChooseFrom.length>1)\r\n      {\r\n        this.Choosed.sort(function(a,b)\r\n       {\r\n        const FirstNameA=a.name.toLocaleUpperCase();\r\n        const FirstNameB=b.name.toLocaleUpperCase();\r\n        if (FirstNameA < FirstNameB)\r\n            return -1;\r\n        if (FirstNameA > FirstNameB)\r\n             return 1;\r\n        return 0;\r\n      }\r\n        );\r\n      }\r\n    }\r\n  }\r\n  public SaveCourses()\r\n  {\r\n\r\n    this.PartipantService.SaveCourses(this.userid, this._Choosed)\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe(\r\n      success =>\r\n      {\r\n        let savedcourses: string=\"\";\r\n        let workstart=false;\r\n        for(let work of this._Choosed)\r\n        {\r\n          savedcourses=savedcourses+(workstart?\", \":\"\")+ work.name;\r\n          workstart=true;\r\n        }\r\n\r\n        this.messhandler.SendHasSavedCoures(true);\r\n        this.messhandler.SendCourseSaved(savedcourses);\r\n\r\n        this.cd.markForCheck();\r\n      }\r\n\r\n    );\r\n    //this.router.navigate(['/courses', this.courseid]);\r\n  }\r\n\r\n  public ChooseCourses()\r\n  {\r\n      this.CoursesChoosed = ! this.CoursesChoosed ;\r\n       this.messhandler.SendHasChoosedCourses(this.CoursesChoosed);\r\n  }\r\n\r\n  private performFilter(FilterBy: string): void\r\n  {\r\n    let l1=this.BlackList.length, i1:number;\r\n    for(i1=0;i1<l1;i1++)\r\n    { // new filter => reset before applying filter\r\n       let temp=this.BlackList.pop();\r\n       this.ChooseFrom.push(temp);\r\n\r\n    }\r\n    if(FilterBy != \"\")\r\n    {\r\n      let l2= this.ChooseFrom.length, i2:number;\r\n\r\n      for(i2=0;i2<l2;i2++)\r\n      {\r\n        if(this.ChooseFrom[i2].name.toLocaleUpperCase().indexOf(FilterBy.toLocaleUpperCase())==-1 \r\n        )\r\n        {\r\n          let user=this.ChooseFrom.splice(+i2,1);\r\n          this.BlackList.push(user[0]); // I Know there is just one hit cause key is scalar\r\n          i2--; // since one is gone...\r\n          l2--;// since one is gone...\r\n        }\r\n      }\r\n\r\n        if(this.ChooseFrom.length>1)\r\n        {\r\n          this.Choosed.sort(function(a,b)\r\n          {\r\n           const FirstNameA=a.name.toLocaleUpperCase();\r\n           const FirstNameB=b.name.toLocaleUpperCase();\r\n           if (FirstNameA < FirstNameB)\r\n               return -1;\r\n           if (FirstNameA > FirstNameB)\r\n                return 1;\r\n           return 0;\r\n         }\r\n           );\r\n        }\r\n      \r\n    }\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0xvZ2luL0NvbmZpcm1SZWdpc3RlZFVzZXIvY29uZmlybS1yZWdpc3RlZC11c2VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4 offset-md-2\\\">\\r\\n  <div *ngIf=\\\"message\\\">{{message}}</div>\\r\\n\\r\\n      \\r\\n  <a routerLink=\\\"/Account/Register\\\" class=\\\"btn btn-default\\\" >Register another user</a>\\r\\n  <a routerLink=\\\"/courses\\\" class=\\\"btn btn-default\\\" >Go back</a>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import { Component, OnInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginMessageHandlerService } from '../login-message-handler.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-confirm-registed-user',\r\n  templateUrl: './confirm-registed-user.component.html',\r\n  styleUrls: ['./confirm-registed-user.component.css']\r\n})\r\nexport class ConfirmRegistedUserComponent implements OnInit,OnDestroy {\r\n\r\n  private unsubscribe : Subject<void> = new Subject();\r\n\r\n  message: string=\"\";\r\n\r\n  constructor(private route:Router\r\n    ,private cd: ChangeDetectorRef\r\n    ,private messhandler: LoginMessageHandlerService) { }\r\n\r\n  ngOnInit() {\r\n    this.messhandler.Confirm\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe(\r\n      status => {\r\n        this.message=status;\r\n        this.messhandler.CourseSaved \r\n        .pipe(takeUntil(this.unsubscribe))\r\n        .subscribe(\r\n           courses =>\r\n           {\r\n            if(courses && courses.length>0)\r\n            {\r\n              this.message = this.message + \" On \" +courses;\r\n            }\r\n          }\r\n        );\r\n        this.messhandler.SendUserId(\"\");\r\n        this.cd.markForCheck();\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.messhandler.SendCourseSaved(\"\");\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0xvZ2luL0RlbGV0ZVVzZXIvZGVsZXRldXNlci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  deleteuser works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-deleteuser',\r\n  templateUrl: './deleteuser.component.html',\r\n  styleUrls: ['./deleteuser.component.css']\r\n})\r\nexport class DeleteuserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0xvZ2luL0VkaXRVc2VyL2VkaXR1c2VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  edituser works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-edituser',\r\n  templateUrl: './edituser.component.html',\r\n  styleUrls: ['./edituser.component.css']\r\n})\r\nexport class EdituserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0xvZ2luL0xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4 offset-md-4\\\">\\r\\n    <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n    <form (submit)=\\\"onLogin()\\\" #theForm=\\\"ngForm\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"user.username\\\">Username</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.userName\\\" #username=\\\"ngModel\\\" required />\\r\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"user.userName.touched && user.userName.invalid && user.userName.errors.required\\\" >Username is required!</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"user.password\\\">Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"passWord\\\" [(ngModel)]=\\\"user.passWord\\\" required #password=\\\"ngModel\\\" />\\r\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"user.passWord.touched && user.passWord.invalid && user.passWord.errors.required\\\">Password is required!</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <input for=\\\"user.rememberMe\\\" type=\\\"checkbox\\\" name=\\\"rememberMe\\\" [(ngModel)]=\\\"user.rememberMe\\\" class=\\\"form-check-input\\\" />\\r\\n          <label for=\\\"user.rememberMe\\\" class=\\\"form-check-label\\\" >Remember Me?</label>\\r\\n        </div>\\r\\n        <span asp-validation-for=\\\"RememberMe\\\" class=\\\"text-warning\\\"></span>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"theForm.invalid\\\" />\\r\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { InnerSubscriber } from 'rxjs/internal/InnerSubscriber';\r\nimport { User } from '../login';\r\nimport { AuthService } from '../../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { LoginMessageHandlerService } from '../login-message-handler.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy  {\r\n\r\n  private unsubscribe : Subject<void> = new Subject();\r\n   user:User = new User();\r\n   errorMessage: string = \"\";\r\n\r\n  constructor(private db: AuthService\r\n    , private router: Router\r\n    ,private cd: ChangeDetectorRef\r\n    ,private messhandler: LoginMessageHandlerService\r\n    ) { \r\n\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.user.userName=\"\";\r\n    this.user.passWord=\"\";\r\n    this.user.rememberMe=false;\r\n  }\r\n  onLogin() {\r\n    this.errorMessage = \"\";\r\n    this.db.login(this.user)\r\n    .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(success => {\r\n        if (success) \r\n        {\r\n          this.messhandler.SendCurrUserAuth(this.db.isAuthenticated);\r\n          this.messhandler.SendCurrUserTeacher(this.db.isTeacher);\r\n          this.router.navigate([\"courses\"]); \r\n        }\r\n        this.cd.markForCheck(); \r\n      },\r\n         err => this.errorMessage = \"Failed to login\");\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0xvZ2luL0xvZ2luUGFydGlhbC9sb2dpbnBhcnRpYWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<ul class=\\\"navbar-nav\\\">\\r\\n <div *ngIf=\\\"isAuthenticated; else LoggedOut\\\">\\r\\n      <li class=\\\"nav-item\\\" >\\r\\n          <a [routerLink]=\\\"['/Account/Manage']\\\">\\r\\n              Hello\\r\\n              \\r\\n                  <span>{{firstName}} {{lastName}}</span>\\r\\n              \\r\\n          </a>\\r\\n      </li>\\r\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"isTeacher\\\">\\r\\n              <a [routerLink]=\\\"['/Account/Register']\\\">Register</a>\\r\\n            </li>\\r\\n              <li class=\\\"nav-item\\\" *ngIf=\\\"isTeacher\\\">  \\r\\n              <a [routerLink]=\\\"['/Account/ManageUsers']\\\">Manage Users</a>\\r\\n          </li>\\r\\n      \\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a href=\\\"/#\\\" (click)=\\\"logout()\\\">Logout</a>\\r\\n\\r\\n      </li>\\r\\n    </div>\\r\\n\\r\\n<ng-template #LoggedOut>\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a [routerLink]=\\\"['/Account/Login']\\\">Login</a>\\r\\n      </li>\\r\\n\\r\\n</ng-template>\\r\\n</ul>\"","import { Component, OnInit, OnDestroy, ChangeDetectorRef} from '@angular/core';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { LoginMessageHandlerService } from '../login-message-handler.service';\r\n\r\n@Component({\r\n  selector: 'loginpartial',\r\n  templateUrl: './loginpartial.component.html',\r\n  styleUrls: ['./loginpartial.component.css']\r\n})\r\nexport class LoginpartialComponent implements OnInit, OnDestroy {\r\n  private unsubscribe : Subject<void> = new Subject();\r\n  isAuthenticated: boolean\r\n  isTeacher: boolean\r\n  firstName: string;\r\n  lastName: string;\r\n  constructor(private AuthService:AuthService,private router: Router\r\n    ,private cd: ChangeDetectorRef\r\n    ,private messhandler: LoginMessageHandlerService\r\n    ) { }\r\n\r\n  ngOnInit() {\r\n\r\n   /* this.isAuthenticated=this.AuthService.isAuthenticated;\r\n    this.isTeacher=this.AuthService.isTeacher;\r\n*/  \r\n    this.messhandler.CurrUserAuth\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe( status =>\r\n      {\r\n        this.isAuthenticated=status;\r\n        this.cd.markForCheck(); \r\n      }\r\n    );\r\n    this.messhandler.CurrUserTeacher\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe( status =>\r\n      {\r\n        this.isTeacher=status;\r\n        this.cd.markForCheck(); \r\n      }\r\n    );\r\n   // this.AuthService.isAuthenticated.subscribe( i => this.isAuthenticated=i);\r\n    //this.AuthService.isTeacher.subscribe(i => this.isTeacher=i);\r\n    this.AuthService.firstName\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe((fn: string) =>\r\n    { \r\n      this.firstName=fn;\r\n      this.cd.markForCheck(); \r\n    }\r\n      );\r\n    this.AuthService.lastName\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe((ln: string) =>\r\n    {\r\n       this.lastName=ln;\r\n       this.cd.markForCheck(); \r\n    }\r\n       );\r\n  }\r\n\r\n\r\n\r\n  public logout()\r\n  {\r\n    this.AuthService.logout();\r\n    this.router.navigate(['/Account/Login']);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0xvZ2luL01hbmFnZVVzZXJzL21hbmFnZXVzZXJzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4 offset-md-2\\\">\\r\\n        <div class=\\\"table-responsive tableContainer\\\">\\r\\n            <label>Manage users</label>\\r\\n            <table class=\\\"table  table-hover w-auto\\\"  cellpadding=\\\"0\\\" cellspacing=\\\"0\\\"   >\\r\\n\\r\\n                <thead >\\r\\n                  <tr>\\r\\n                    <th>First Name</th>\\r\\n                    <th>Last Name</th>\\r\\n                    <th style=\\\"min-width: 5em\\\">Role</th>\\r\\n                    <th style=\\\"min-width: 30em\\\">Edit | Delete  | Choose</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody  >\\r\\n                      <tr *ngFor='let user of users'>\\r\\n                          <td>{{user.firstName}}</td>\\r\\n                          <td>{{user.lastName}}</td>\\r\\n                          <td style=\\\"min-width: 5em\\\" >{{user.role}}</td>\\r\\n                          <td style=\\\"min-width: 30em\\\"  >\\r\\n                              <a [routerLink]=\\\"['/Edit', user.id]\\\">edit</a>|\\r\\n                              <a [routerLink]=\\\"['/Delete', user.id]\\\">delete</a>|\\r\\n                              <a href=\\\"javascript:void(0);\\\" (click)=\\\"ChooseUser(user.id)\\\">choose</a>\\r\\n                          </td>\\r\\n                      </tr>\\r\\n  \\r\\n                  </tbody>\\r\\n  \\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"offset-md-1 col-md-4\\\">\\r\\n        <add_student_to_course></add_student_to_course>\\r\\n    </div>\\r\\n</div> \"","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { PartipantService } from 'ClientApp/app/AddPartipant/partipant.service';\r\nimport { Router } from '@angular/router';\r\nimport { LoginMessageHandlerService } from '../login-message-handler.service';\r\nimport { RegisterUser } from '../Register/registeruser';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-manageusers',\r\n  templateUrl: './manageusers.component.html',\r\n  styleUrls: ['./manageusers.component.css']\r\n})\r\nexport class ManageusersComponent implements OnInit , OnDestroy{\r\n\r\n  private unsubscribe : Subject<void> = new Subject();\r\n\r\n  public users: RegisterUser[]=[];\r\n  constructor(private PartipantService: PartipantService, private route:Router\r\n    ,private cd: ChangeDetectorRef\r\n    ,private messhandler: LoginMessageHandlerService) { }\r\n\r\n  ngOnInit() {\r\n    this.messhandler.SendIsteacher(true);\r\n    this.PartipantService.GetUsers()\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe(\r\n      status => {\r\n        this.users=status;\r\n        this.cd.markForCheck();\r\n      }\r\n    )\r\n  }\r\n\r\n  public ChooseUser(id)\r\n  {\r\n    if(this.users.find(u => u.id==id).role!=\"Teacher\")\r\n    {\r\n      this.messhandler.SendIsteacher(false);\r\n      this.messhandler.SendUserId(id);\r\n    }\r\n    else\r\n    {\r\n      this.messhandler.SendIsteacher(true);\r\n    }\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0xvZ2luL1JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4 offset-md-2\\\">\\r\\n        <h4>Create a new account.</h4>\\r\\n      <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n      <form (submit)=\\\"onRegister(theForm)\\\" #theForm=\\\"ngForm\\\" novalidate>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"user.email\\\">Email</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" #email=\\\"ngModel\\\" required />\\r\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"user.email.touched && user.email.invalid && user.email.errors.required\\\" >Email is required!</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"user.firstName\\\">First Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\" #firstName=\\\"ngModel\\\" required />\\r\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"user.firstName.touched && user.firstName.invalid && user.firstName.errors.required\\\" >First Name is required!</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"user.lastName\\\">Last Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\" #lastName=\\\"ngModel\\\" required />\\r\\n                  <div class=\\\"text-danger\\\" *ngIf=\\\"user.lastName.touched && user.lastName.invalid && user.lastName.errors.required\\\" >Last Name is required!</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"user.password\\\">Password</label>\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" required #password=\\\"ngModel\\\" />\\r\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"user.password.touched && user.password.invalid && user.password.errors.required\\\">Password is required!</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"user.confirmpassword\\\">Confirm Password</label>\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirmpassword\\\" [(ngModel)]=\\\"user.confirmpassword\\\" required #confirmpassword=\\\"ngModel\\\" />\\r\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"user.confirmpassword.touched && user.confirmpassword.invalid && user.confirmpassword.errors.required\\\">Confirm Password is required!</div>\\r\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"user.confirmpassword.touched && user.password.touched && user.confirmpassword!=user.password\\\">The password and the confirm password needs to be alike</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">  \\r\\n              <label for=\\\"user.role\\\">Role</label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"role\\\" [(ngModel)]=\\\"user.role\\\" name=\\\"role\\\" required #role=\\\"ngModel\\\" (change)=\\\"OnToggleRole()\\\">\\r\\n                  <option value=\\\"Student\\\" selected>Student</option>\\r\\n                  <option value=\\\"Teacher\\\">Teacher</option>\\r\\n              </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Register\\\" [disabled]=\\\"theForm.invalid || saveduser\\\" />\\r\\n              <a [routerLink]=\\\"['/courses']\\\" class=\\\"btn btn-default\\\" *ngIf=\\\"!saveduser\\\">Cancel</a>\\r\\n          </div>    \\r\\n        </form>\\r\\n         <div *ngIf=\\\"returnmessage\\\">{{returnmessage}}</div>\\r\\n  </div>\\r\\n  <div class=\\\"offset-md-1 col-md-4\\\">\\r\\n      <add_student_to_course></add_student_to_course>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { IRegisterUser,RegisterUser } from './registeruser';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { LoginMessageHandlerService } from '../login-message-handler.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy  {\r\n\r\n  private unsubscribe : Subject<void> = new Subject();\r\n  private user:RegisterUser= new RegisterUser();\r\n  private errorMessage: string;\r\n // private theForm: FormGroup;\r\n  private HasChoosedCourse: boolean = false;\r\n  private returnmessage:string =null;\r\n\r\n  private saveduser: boolean=false;\r\n  constructor(private db: AuthService\r\n    , private cd: ChangeDetectorRef\r\n    ,private messhandler: LoginMessageHandlerService\r\n    ,private router: Router\r\n   ) { }\r\n\r\n  ngOnInit() {\r\n    this.messhandler.HasChoosedCourses\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe(\r\n      status => {\r\n        this.HasChoosedCourse=status;\r\n        this.cd.markForCheck();\r\n      }\r\n    )\r\n    this.messhandler.HasSavedCoures\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe(\r\n      status => {\r\n        if(status)\r\n        {\r\n          if(this.saveduser)\r\n          {\r\n            this.messhandler.SendConfirm(this.returnmessage);\r\n            this.router.navigate(['/Account/ConfirmRegistedUser']);\r\n          }\r\n\r\n        }\r\n        this.cd.markForCheck();\r\n      }\r\n    )\r\n  }\r\n\r\n   public OnToggleRole()\r\n   {\r\n\r\n      if(this.user.role==\"Student\")\r\n      {\r\n        this.messhandler.SendIsteacher(false);\r\n      }\r\n      else\r\n      {\r\n        this.messhandler.SendIsteacher(true);\r\n      }\r\n   }\r\n\r\n  public onRegister(TheForm)\r\n  {\r\n    this.errorMessage = \"\";\r\n    this.db.register(this.user)\r\n    .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(success => { \r\n        this.saveduser=true;\r\n        TheForm.form.disable();\r\n        this.cd.markForCheck();\r\n        let msg=\"Created \"+this.user.firstName+\" \"+this.user.lastName+\" with the role \"+this.user.role;\r\n        if(this.user.role==\"Student\")\r\n        {\r\n          // om student medella add\r\n          this.messhandler.SendUserId(success.value.name);\r\n          this.returnmessage=msg;\r\n        }\r\n        else\r\n        {\r\n          this.messhandler.SendConfirm(msg );\r\n            this.router.navigate(['/Account/ConfirmRegistedUser']);\r\n        }\r\n\r\n        return  true; \r\n      },\r\n         err =>  this.errorMessage = <any>err);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n}\r\n","export interface IRegisterUser\r\n{\r\n    email: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    password: string,\r\n    confirmpassword: string,\r\n    role:string\r\n    id?: string\r\n}\r\n\r\nexport class RegisterUser implements IRegisterUser\r\n{\r\n    email: string=\"\";    \r\n    firstName: string=\"\";\r\n    lastName: string=\"\";\r\n    password: string=\"\";\r\n    confirmpassword: string=\"\";\r\n    role: string=\"Student\";  \r\n    id=null;\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginMessageHandlerService {\r\n\r\n  private startstring?:string=\"\";\r\n   // To add And make choose to save\r\n  private useridSource = new BehaviorSubject<string>(this.startstring);\r\n  userid = this.useridSource.asObservable();\r\n\r\n  // to \r\n  private HasChoosedCoursesSource = new BehaviorSubject<boolean>(false);\r\n  HasChoosedCourses = this.HasChoosedCoursesSource.asObservable();\r\n\r\n  private IsteacherSource = new BehaviorSubject<boolean>(false);\r\n  Isteacher = this.IsteacherSource.asObservable();\r\n\r\n   \r\n  private HasSavedCouresSource = new BehaviorSubject<boolean>(false);\r\n  HasSavedCoures = this.HasSavedCouresSource.asObservable();\r\n\r\n\r\n  private CourseSavedSource = new BehaviorSubject<string>(this.startstring);\r\n  CourseSaved = this.CourseSavedSource.asObservable();\r\n\r\n\r\n  private ConfirmSource = new BehaviorSubject<string>(this.startstring);\r\n  Confirm = this.ConfirmSource.asObservable();\r\n\r\n private CurrUserAuthSource = new BehaviorSubject<boolean>(false);\r\n CurrUserAuth = this.CurrUserAuthSource.asObservable();\r\n\r\n private CurrUserTeacherSource = new BehaviorSubject<boolean>(false);\r\n CurrUserTeacher = this.CurrUserTeacherSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  public SendUserId(userid:string) : boolean \r\n  {      \r\n    this.useridSource.next( userid==null?'': userid);\r\n    return true;\r\n  }\r\n\r\n  public SendHasChoosedCourses(status:boolean) : boolean \r\n  {      \r\n    this.HasChoosedCoursesSource.next( status==null?false: status);\r\n    return true;\r\n  }\r\n\r\n  public SendIsteacher(status:boolean) : boolean \r\n  {      \r\n    this.IsteacherSource.next( status==null?false: status);\r\n    return true;\r\n  }\r\n\r\n  public SendHasSavedCoures(status:boolean) : boolean \r\n  {      \r\n    this.HasSavedCouresSource.next( status==null?false: status);\r\n    return true;\r\n  }\r\n\r\n  public SendConfirm(arg: string): boolean {\r\n    this.ConfirmSource.next( arg==null?'': arg);\r\n    return true;\r\n  }\r\n\r\n  public SendCourseSaved(arg?: string): boolean {\r\n    this.CourseSavedSource.next(arg);\r\n    return true;\r\n  }\r\n\r\n  public SendCurrUserAuth(status:boolean) : boolean \r\n  {      \r\n    this.CurrUserAuthSource.next( status==null?false: status);\r\n    return true;\r\n  }\r\n\r\n  public SendCurrUserTeacher(status:boolean) : boolean \r\n  {      \r\n    this.CurrUserTeacherSource.next( status==null?false: status);\r\n    return true;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, NgForm } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport {LoginComponent} from './Login/login.component'\r\nimport { RouterModule } from '@angular/router';\r\nimport { LoginpartialComponent } from './LoginPartial/loginpartial.component';\r\nimport { IsTeacherGuard } from '../Shared/is-teacher.guard';\r\nimport { RegisterComponent } from './Register/register.component';\r\nimport { AddStudentToCourseComponent } from './AddStudentToCourse/add_student_to_course.component';\r\nimport { ConfirmRegistedUserComponent } from './ConfirmRegistedUser/confirm-registed-user.component';\r\nimport { ManageusersComponent } from './ManageUsers/manageusers.component';\r\nimport { IsAuthenticatedGuard } from '../Shared/is-authenticated.guard';\r\nimport { EdituserComponent } from './EditUser/edituser.component';\r\nimport { DeleteuserComponent } from './DeleteUser/deleteuser.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent\r\n  ,LoginpartialComponent\r\n  ,RegisterComponent\r\n  ,AddStudentToCourseComponent\r\n  ,ConfirmRegistedUserComponent \r\n  ,LoginComponent\r\n  ,ManageusersComponent\r\n  ,EdituserComponent\r\n  ,DeleteuserComponent \r\n],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(\r\n      [{\r\n          path: 'Account/Login'\r\n         ,component: LoginComponent\r\n      },\r\n      {\r\n        path: 'Account/Register'\r\n        ,canActivate: [IsTeacherGuard] \r\n       , component: RegisterComponent\r\n      },\r\n      {\r\n        path: 'Account/ConfirmRegistedUser'\r\n        ,canActivate: [IsTeacherGuard] \r\n       , component: ConfirmRegistedUserComponent\r\n      },\r\n      {\r\n        path: 'Account/ManageUsers'\r\n        ,canActivate: [IsTeacherGuard] \r\n       , component: ManageusersComponent\r\n      }\r\n      ]\r\n  )\r\n  ],\r\n  exports: [LoginpartialComponent\r\n  ,LoginComponent\r\n  ]\r\n\r\n\r\n})\r\nexport class LoginModule { }\r\n","export class User\r\n{\r\n    userName: string;\r\n    passWord: string;\r\n    rememberMe: boolean;\r\n}\r\n","module.exports = \"<div *ngIf=\\\"module && module.activities && module.activities.length>0\\\">\\r\\n  <div id=\\\"accordion\\\" >\\r\\n\\r\\n      <!--string name = Regex.Replace(@module.Name, @\\\"[\\\\W_]+\\\", string.Empty);-->\\r\\n      <div class=\\\"card\\\" *ngFor=\\\"let activity of module.activities\\\">\\r\\n          <div class=\\\"card-header\\\" [id]=\\\"module.id\\\">\\r\\n              \\r\\n                  <div class=\\\"btn btn-link collapsed\\\"\\r\\n                      [attr.data-target]=\\\"'#'+ activity.name2\\\"\\r\\n                      [attr.aria-controls]=\\\"activity.name2\\\"\\r\\n                      data-toggle=\\\"collapse\\\"\\r\\n                      [attr.aria-expanded]=\\\"false\\\"\\r\\n                      (click)=\\\"TogggelCollapse(activity.id)\\\"\\r\\n                      >\\r\\n                      <h5 class=\\\"mb-0\\\"> \\r\\n                          {{ activity.name }}\\r\\n                        </h5>\\r\\n                  </div>\\r\\n              \\r\\n          </div>\\r\\n\\r\\n          <div [id]=\\\"activity.name2\\\" [class]=\\\"'collapse'+ activity.isExpanded\\\" [attr.aria-labelledby]=\\\"activity.id\\\" data-parent=\\\"#accordion\\\">\\r\\n              <div class=\\\"card-body\\\" *ngIf=\\\"module.activities && module.activities.length >0\\\">\\r\\n                    <span class=\\\"float-right\\\"> {{activity.startDate |date: 'yyyy-MM-dd HH:mm'}} -{{activity.endDate |date: 'yyyy-MM-dd HH:mm'}}</span>\\r\\n                    <p>{{activity.description}}\\r\\n                    <br>{{activity.activityType}}</p>\\r\\n                  <!-- Place for files under here-->\\r\\n                  <h4>Activities</h4>\\r\\n                  <ul class=\\\"timeline\\\">\\r\\n\\r\\n                      <li *ngFor=\\\"let activity of module.activities\\\">\\r\\n                            \\r\\n                          <a asp-controller=\\\"LMSActivities\\\" asp-action=\\\"Details\\\" [attr.asp-route-id]=\\\"activity.id\\\">{{activity.name}}</a>\\r\\n                          <span class=\\\"float-right\\\"> {{activity.startDate |date: 'yyyy-MM-dd hh:mm:ss'}}</span>\\r\\n                          <p>{{activity.description}}\\r\\n                          <br>{{activity.activityType.name}}</p>\\r\\n                          <div *ngIf=\\\"isTeacher\\\">\\r\\n                              <a asp-controller=\\\"LMSActivities\\\" asp-action=\\\"Edit\\\" [attr.asp-route-id]=\\\"activity.id\\\">Edit Activity</a>&nbsp;|&nbsp;\\r\\n                              <a asp-controller=\\\"LMSActivities\\\" asp-action=\\\"Delete\\\" [attr.asp-route-id]=\\\"activity.id\\\">Delete Activity</a>\\r\\n                          </div>\\r\\n                      </li>\\r\\n\\r\\n                  </ul>\\r\\n                  <div *ngIf=\\\"isTeacher\\\">\\r\\n                      Add Activity\\r\\n                  </div>\\r\\n              </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n\\r\\n</div>\"","import { IModule } from 'ClientApp/app/Courses/course';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CourseService } from 'ClientApp/app/Courses/course.service';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { OnInit, Component, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: \"activity_list\",\r\n    templateUrl: \"actitity_list.component.html\",\r\n    styleUrls:[]\r\n})\r\n\r\nexport class ActitityListComponent implements OnInit, OnDestroy  {\r\n  module: IModule;\r\n  errorMessage: string;\r\n  @Input()   moduleid: string;\r\n\r\n  private unsubscribe : Subject<void> = new Subject();\r\n\r\n  isTeacher: boolean=false;\r\n constructor(private route: ActivatedRoute,\r\n     private CourseService: CourseService\r\n     , private AuthService : AuthService\r\n     ,private cd: ChangeDetectorRef\r\n     ) \r\n     { }\r\n \r\n ngOnInit() {\r\n\r\n    this.isTeacher=this.AuthService.isTeacher;\r\n     //this.AuthService.isTeacher.subscribe( i => this.isTeacher=i);\r\n\r\n     //getModulAndActivitybyId(Moduleid: string) : Observable<IModule>\r\n     this.CourseService.getModulAndActivitybyId(this.moduleid)\r\n     .pipe(takeUntil(this.unsubscribe))\r\n     .subscribe(\r\n      module => {\r\n                 this.module = module;\r\n                 this.cd.markForCheck();\r\n             },\r\n             error => this.errorMessage = <any>error\r\n         );\r\n }\r\n\r\n public TogggelCollapse(aid: string): void\r\n {\r\n      if(this.module.activities.find(m => m.id.toString()==aid).isExpanded ==\" show\")\r\n     {\r\n           this.module.activities.find(m => m.id.toString()==aid).isExpanded=\"\";\r\n           // add here for filelist for activity\r\n         /*  if (this.savesubs.find( t => t[0]==mid))\r\n           {\r\n\r\n               this.savesubs.find( t => t[0]==mid)[1].unsubscribe();\r\n               this.savesubs.splice(this.savesubs.indexOf(this.savesubs.find( t => t[0]==mid)),1);\r\n           }\r\n*/\r\n     }\r\n      else\r\n     {\r\n        this.module.activities.find(m => m.id.toString()==aid).isExpanded=\" show\";\r\n       /* let temp=this.CourseService.getActivitybymodulId(mid).subscribe(\r\n                 activities=>\r\n                 {\r\n                     this.course.modules.find(m => m.id.toString()==mid).activities=activities;\r\n                 },\r\n                 error => this.errorMessage = <any>error\r\n             );\r\n         if (this.savesubs.find( t => t[0]==mid))\r\n         {\r\n             this.savesubs.find( t => t[0]==mid)[1]=temp;\r\n         }\r\n         else\r\n         {\r\n             this.savesubs.push([mid,temp])  ;\r\n         }\r\n         */\r\n     }\r\n }\r\n ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n  \r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL01vZHVsZXMvQ3JlYXRlL2FkZC1tb2R1bGUtd2l0aC1jb3Vyc2UtaWQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Create</h1>\\t\\r\\n\\r\\n <h4>Module on {{courseID}}</h4>\\t\\r\\n<hr />\\t\\r\\n<div class=\\\"row\\\">\\t\\r\\n    <div class=\\\"col-md-4\\\">\\t\\r\\n\\r\\n         <form #createModule=\\\"ngForm\\\"  (ngSubmit)=\\\"Create(createModule.value)\\\">\\t\\r\\n\\r\\n             <input type=\\\"hidden\\\" (ngModel)=\\\"CourseId\\\" name=\\\"CourseId\\\" />\\t\\r\\n\\r\\n             <div class=\\\"form-group\\\">\\t\\r\\n                <label for=\\\"name\\\" class=\\\"control-label\\\">Name</label>\\t\\r\\n                <input (ngModel)=\\\"Module.name\\\" name=\\\"name\\\" id=\\\"name\\\" class=\\\"form-control\\\" />\\t\\r\\n\\r\\n             </div>\\t\\r\\n\\r\\n             <div class=\\\"form-group\\\">\\t\\r\\n                <label for=\\\"startDate\\\" class=\\\"control-label\\\">StartDate</label>\\t\\r\\n                <input  type =\\\"date\\\" (ngModel)=\\\"Module.startDate\\\" name=\\\"startDate\\\"  value=\\\"2018-07-22\\\"\\t\\r\\n                  min=\\\"2018-01-01\\\" max=\\\"2018-12-31\\\" id=\\\"startDate\\\" class=\\\"form-control\\\" />\\t\\r\\n\\r\\n             </div>\\t\\r\\n            <div class=\\\"form-group\\\">\\t\\r\\n                <label for=\\\"endDate\\\" class=\\\"control-label\\\">StartDate</label>\\t\\r\\n                <input  type =\\\"date\\\" (ngModel)=\\\"Module.endDate\\\" name=\\\"endDate\\\"  value=\\\"2018-07-22\\\"\\t\\r\\n                  min=\\\"2018-01-01\\\" max=\\\"2018-12-31\\\" id=\\\"endDate\\\" class=\\\"form-control\\\" />\\t\\r\\n\\r\\n             </div>\\t\\r\\n            <div class=\\\"form-group\\\">\\t\\r\\n                <label for=\\\"description\\\" class=\\\"control-label\\\">Description</label>\\t\\r\\n                <input (ngModel)=\\\"Module.description\\\" name=\\\"description\\\" id=\\\"description\\\" class=\\\"form-control\\\" />\\t\\r\\n\\r\\n             </div>\\t\\r\\n            <div class=\\\"form-group\\\">\\t\\r\\n                <input type=\\\"submit\\\" value=\\\"Create\\\" class=\\\"btn btn-primary\\\" />\\t\\r\\n            </div>\\t\\r\\n        </form>\\t\\r\\n\\r\\n\\r\\n     </div>\\t\\r\\n</div> \"","import { Component, OnInit } from '@angular/core';\r\nimport { IModule } from '../../courses/course';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n @Component({\t\r\n  selector: 'app-add-module-with-course-id',\t\r\n  templateUrl: './add-module-with-course-id.component.html',\t\r\n  styleUrls: ['./add-module-with-course-id.component.css']\t\r\n})\t\r\nexport class AddModuleWithCourseIdComponent implements OnInit {\t\r\n\r\n   Module: IModule;\t\r\n  CourseId: string =\"\";\t\r\n  constructor(private route: ActivatedRoute) { }\t\r\n\r\n   ngOnInit() {\t\r\n    this.CourseId = this.route.snapshot.paramMap.get('id');\t\r\n  }\t\r\n\r\n }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL01vZHVsZXMvRGV0YWlscy9kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"module\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n  \\r\\n      <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"card\\\" style=\\\"width: 19rem;\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                  <h3 class=\\\"card-title\\\">{{module.name}}</h3>\\r\\n                  <h5 class=\\\"card-title\\\">{{module.startDate |date: 'yyyy-MM-dd'}} - {{module.endDate |date: 'yyyy-MM-dd'}}</h5>\\r\\n                  <p class=\\\"card-text\\\"> {{module.description}}</p>\\r\\n  \\r\\n              </div>\\r\\n  \\r\\n       \\r\\n                  <div class=\\\"card-body\\\" >\\r\\n                      <div class=\\\"row\\\" *ngIf=\\\"isTeacher\\\">\\r\\n                          <div class=\\\"col-6\\\">\\r\\n                    <!-- <a [routerLink]=\\\"['/Modules/Edit', module.id]\\\">Activity/a> -->\\r\\n                    <a asp-controller=\\\"Modules\\\" asp-action=\\\"CreateWithCourseid\\\" asp-route-id=\\\"@Model.Id\\\" class=\\\"card-link\\\">Edit module</a>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                      <!--<a [routerLink]=\\\"['/Modules/Delete', module.id]\\\">Delete module</a> -->\\r\\n                      Delete module\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <!-- <a [routerLink]=\\\"['/Activites/AddActivityWithModuleId', .id]\\\">Activity/a> -->\\r\\n                    <a asp-controller=\\\"Modules\\\" asp-action=\\\"CreateWithCourseid\\\" asp-route-id=\\\"@Model.Id\\\" class=\\\"card-link\\\">Add Actitiy</a>\\r\\n                  </div>\\r\\n                </div>\\r\\n                  <div class=\\\"row\\\" >\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                      <a [routerLink]=\\\"['/courses/', module.courseId]\\\">Go back</a>\\r\\n                    </div>\\r\\n                </div>\\r\\n                </div>   \\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n           <activity_list [moduleid]=\\\"module.id\\\"></activity_list>\\r\\n      </div>\\r\\n          <div class=\\\"col-md-2\\\">\\r\\n  \\r\\n          </div>\\r\\n      </div>\\r\\n  \"","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { IModule } from 'ClientApp/app/Courses/course';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CourseService } from 'ClientApp/app/Courses/course.service';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.css']\r\n})\r\nexport class ModulDetailsComponent implements OnInit, OnDestroy  {\r\n\r\n  private unsubscribe : Subject<void> = new Subject();\r\n  module: IModule;\r\n  errorMessage: string;\r\n  isTeacher: boolean;\r\n  constructor(private route: ActivatedRoute, private CourseService: CourseService, private AuthService : AuthService\r\n    , private cd: ChangeDetectorRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.isTeacher=this.AuthService.isTeacher;\r\n     /* this.AuthService.isTeacher\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe( i => this.isTeacher=i);\r\n      */\r\n      let Modulid: string = this.route.snapshot.paramMap.get('id');\r\n      this.CourseService.getModulAndActivitybyId(Modulid)\r\n      .pipe(takeUntil(this.unsubscribe))\r\n      .subscribe(\r\n          modul=> {\r\n                  this.module = modul;\r\n                  this.cd.markForCheck();\r\n              },\r\n              error => this.errorMessage = <any>error\r\n          );     \r\n      }\r\n\r\n      ngOnDestroy(): void {\r\n        this.unsubscribe.next();\r\n        this.unsubscribe.complete();\r\n      }\r\n      \r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddModuleWithCourseIdComponent } from './Create/add-module-with-course-id.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ActitityListComponent } from './Activity_list/actitity_list.component';\r\nimport { IsAuthenticatedGuard } from '../Shared/is-authenticated.guard';\r\nimport { ModulDetailsComponent } from './Details/details.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddModuleWithCourseIdComponent,\r\n    ActitityListComponent,\r\n    ModulDetailsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(\r\n        [\r\n            {\r\n                path: 'Modules/create', component: AddModuleWithCourseIdComponent\r\n            }  , \r\n          {\r\n              path: 'Modules/:id'\r\n              ,canActivate: [IsAuthenticatedGuard]\r\n              ,component: ModulDetailsComponent\r\n          }\r\n        ]\r\n    )\r\n  ]\r\n})\r\nexport class ModulesModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL05hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<header>\\r\\n  <nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n          <a class=\\\"navbar-brand\\\">LMS(Learning Management System)</a>\\r\\n          <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\" aria-controls=\\\"navbarSupportedContent\\\"\\r\\n                  aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n              <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n          </button>\\r\\n          <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\">\\r\\n            <loginpartial></loginpartial>\\r\\n              <ul class=\\\"navbar-nav flex-grow-1\\\">\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                      <a class=\\\"nav-link text-dark\\\" >Home</a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                      <a class=\\\"nav-link text-dark\\\">Privacy</a>\\r\\n                  </li>\\r\\n                  \\r\\n              </ul>\\r\\n          </div>\\r\\n      </div>\\r\\n  </nav>\\r\\n</header>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavbarComponent } from '../Navbar/navbar.component';\r\nimport { LoginModule } from '../Login/login.module';\r\n\r\n@NgModule({\r\n  declarations: [NavbarComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginModule\r\n  ],\r\n  exports: [NavbarComponent]\r\n})\r\nexport class NavbarModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL1BhcnRpcGFudExpc3QvcGFydGlwYW50LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"show && users && users.length>0\\\">\\r\\n  <ul  *ngFor=\\\"let user of users\\\">\\r\\n    <li>{{user.firstName}} {{user.lastName}}</li>\\r\\n  </ul>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IPartipant } from '../AddPartipant/partipant';\r\n\r\nimport { PartipantService } from '../AddPartipant/partipant.service';\r\nimport { Subject, pipe } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-partipant-list',\r\n  templateUrl: './partipant-list.component.html',\r\n  styleUrls: ['./partipant-list.component.css']\r\n})\r\nexport class PartipantListComponent implements OnInit, OnDestroy  {\r\n  private unsubscribe : Subject<void> = new Subject();\r\n   users: IPartipant[];\r\n   @Input()   courseid: string=\"\";\r\n  show: boolean;\r\n\r\n  constructor(private route: ActivatedRoute, private  PartipantService: PartipantService\r\n    ,private cd: ChangeDetectorRef) { }\r\n\r\n  ngOnInit() {\r\n\r\n     this.PartipantService.ShowPartipantList\r\n     .pipe(takeUntil(this.unsubscribe))\r\n     .subscribe( status =>\r\n      {\r\n        this.show=status;\r\n        this.cd.markForCheck();\r\n      }\r\n     );\r\n\r\n    this.PartipantService.CourseId=this.courseid;\r\n    this.PartipantService.GetStudentsOn()\r\n    .pipe(takeUntil(this.unsubscribe))\r\n    .subscribe(\r\n      user=>\r\n      { \r\n        this.users= user; \r\n        this.cd.markForCheck();\r\n      }\r\n    );\r\n  }\r\n  \r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n  \r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { CanActivate, CanLoad, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IsAuthenticatedGuard implements CanActivate, CanLoad {\r\n\r\n  canLoad(route: import(\"@angular/router\").Route, segments: import(\"@angular/router\").UrlSegment[]): boolean \r\n  {\r\n    if(!(this.auth.isAuthenticated))\r\n    {\r\n      this.router.navigate(['/Account/Login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n\r\n\r\n\r\n  constructor(private auth: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean   {\r\n   //  this.auth.isTeacher.subscribe((i:Boolean) => {return i});\r\n   \r\n    if(!(this.auth.isAuthenticated))\r\n    {\r\n      this.router.navigate(['/Account/Login']);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router, CanActivate, CanLoad } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IsTeacherGuard implements CanActivate , CanLoad, OnDestroy {\r\n\r\n\r\n  private unsubscribe : Subject<void> = new Subject();\r\n  canLoad(route: import(\"@angular/router\").Route, segments: import(\"@angular/router\").UrlSegment[]): boolean \r\n  {\r\n    return  this.isTeacher;\r\n  }\r\n  \r\n  isTeacher: boolean= false;\r\n\r\n\r\n  constructor(private auth: AuthService, private router: Router\r\n     ) {\r\n\r\n      this.CheckTeacher();\r\n     }\r\n\r\n private CheckTeacher()\r\n {\r\n  /*this.auth.isTeacher\r\n  .pipe(takeUntil(this.unsubscribe))\r\n  .subscribe((i:boolean) => \r\n  {\r\n    this.isTeacher=i;\r\n    if(!i)\r\n    {\r\n      this.router.navigate(['/Account/Login']);\r\n     \r\n    }\r\n  });*/\r\n  this.isTeacher= this.auth.isTeacher;\r\n\r\n }\r\n\r\n  canActivate(): boolean   {\r\n\r\n return  this.isTeacher;\r\n \r\n   \r\n  }\r\n  \r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n      CommonModule\r\n    ],\r\n    declarations: [\r\n    \r\n  \r\n    ],\r\n    exports: [\r\n      CommonModule,\r\n      FormsModule,\r\n \r\n    ]\r\n  })\r\n  export class SharedModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<navbar></navbar>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Test';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { AddPartipantModule } from './AddPartipant/add-partipant.module';\r\n//import { NoRouteModule } from './NoRoute/no-route.module';\r\n//import { NoRouteComponent } from './NoRoute/no-route.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CoursesModule } from './Courses/courses.module';\r\nimport { NavbarModule } from './Navbar/navbar.module';\r\nimport { LoginModule } from './Login/login.module';\r\nimport { ModulesModule } from './Modules/modules.module';\r\nimport {  LoginComponent} from './Login/Login/login.component';\r\nimport { AngularFontAwesomeModule } from 'angular-font-awesome';\r\n//import { LoginpartialComponent } from './Login/LoginPartial/loginpartial.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n\r\n  ],\r\n    imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    AddPartipantModule,\r\n    CoursesModule,\r\n   \r\n    RouterModule.forRoot([\r\n      {\r\n        path: '', component: LoginComponent\r\n    } ,  \r\n        {\r\n            path: '**', component: LoginComponent\r\n        }\r\n      \r\n    ], {\r\n      enableTracing: false // for debug\r\n    }),\r\n     // NoRouteModule,\r\n      HttpClientModule,\r\n      NavbarModule,\r\n      LoginModule,\r\n      ModulesModule,\r\n      AngularFontAwesomeModule\r\n   \r\n  ],\r\n  providers: [],\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\n//import { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map, takeUntil } from 'rxjs/operators';\r\nimport { User } from '../Login/login';\r\nimport { tokenData } from './tokenData';\r\nimport { Observable, BehaviorSubject, Subject } from 'rxjs';\r\nimport { RegisterUser } from '../Login/Register/registeruser';\r\nimport { ICourseNameData } from '../AddPartipant/partipant';\r\n\r\n@Injectable(\r\n  {\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService implements  OnDestroy \r\n{\r\n\r\n  private unsubscribe : Subject<void> = new Subject();  \r\n  // ...public jwtHelper: JwtHelperService,\r\n\r\n\r\n   private tokenData: tokenData=new tokenData();\r\n\r\nprivate tokenSource = new BehaviorSubject(' ');\r\ntoken = this.tokenSource.asObservable();\r\n\r\nprivate tokenExpirationSource = new BehaviorSubject(new Date());\r\ntokenExpiration = this.tokenExpirationSource.asObservable();\r\n\r\nprivate firstNameSource = new BehaviorSubject(' ');\r\nfirstName = this.firstNameSource.asObservable();\r\n\r\nprivate lastNameSource = new BehaviorSubject(' ');\r\nlastName = this.lastNameSource.asObservable();\r\n\r\n/*\r\nprivate useridSource = new BehaviorSubject(' ');\r\nuserid = this.useridSource.asObservable();\r\n*/\r\n/*private isAuthenticatedSource = new BehaviorSubject<boolean>(false);\r\nprivate _isAuthenticated = this.isAuthenticatedSource.asObservable();*/\r\nget isAuthenticated(): boolean\r\n{\r\n  return this.checkisAuthenticated(this.tokenData.token,this.tokenData.tokenExpiration);\r\n}\r\n\r\n/*private isTeacherSource = new BehaviorSubject<boolean>(false);\r\nprivate _isTeacher = this.isTeacherSource.asObservable();*/\r\n\r\nget isTeacher()\r\n{\r\n  return this.checkisAuthenticated(this.tokenData.token,this.tokenData.tokenExpiration)?this.checkIsTeacher(this.tokenData.isTeacher):false;\r\n}\r\n\r\n\r\nRealisAuthenticated : boolean = false;\r\nRealisTeacher : boolean = false;\r\n\r\nconstructor(private http: HttpClient,\r\n) {\r\n  /*this.isAuthenticated\r\n  .pipe(takeUntil(this.unsubscribe))\r\n  .subscribe( i => {\r\n    this.RealisAuthenticated=i;\r\n//    this.cd.markForCheck();\r\n  });\r\n  this.isTeacher\r\n  .pipe(takeUntil(this.unsubscribe))\r\n  .subscribe(i => {\r\n      this.RealisTeacher=i;\r\n   //   this.cd.markForCheck();\r\n  });*/\r\n  this.token\r\n  .pipe(takeUntil(this.unsubscribe))\r\n  .subscribe(i =>{ \r\n      this.Realtoken=i;\r\n  //    this.cd.markForCheck();\r\n  });\r\n}\r\n/*\r\nngOnInit(): void {\r\n  this.isAuthenticated.subscribe( i => this.RealisAuthenticated=i);\r\n  this.isTeacher.subscribe(i => this.RealisTeacher=i);\r\n}*/\r\n\r\n/*\r\n  get token(): Observable<string> {\r\n    return this.tokenData.token\r\n  }\r\n  \r\n\r\n  get tokenExpiration():Date\r\n  {\r\n    return this.tokenData.tokenExpiration;\r\n  }\r\n\r\n\r\n  get FirstName():string\r\n  {\r\n    return this.tokenData.firstName;\r\n  }\r\n\r\n  get LastName():string\r\n  {\r\n    return this.tokenData.lastName;\r\n  }\r\n  get Userid():string\r\n  {\r\n    return this.tokenData.userid;\r\n  }\r\n  */\r\n private url:string=\"https://localhost:44396\";\r\n\r\n  private _isTeacher:string=\"\";\r\n  private Realtoken: string=\"\";\r\n   \r\n  private getAuthHeader() : HttpHeaders\r\n  {\r\n    return  new HttpHeaders({ \"Authorization\": \"Bearer \" + this.Realtoken });\r\n  }\r\n  \r\n  public login(creds:User) : Observable<boolean> | undefined {\r\n    return this.http.post(this.url+\"/account/createtoken\", creds)\r\n      .pipe(\r\n        map((response: any) => {\r\n          let tokenInfo = response;\r\n         \r\n          this.tokenSource.next(tokenInfo.token==null?'':tokenInfo.token);\r\n          this.tokenExpirationSource.next(tokenInfo.tokenExpiration);\r\n          this.firstNameSource.next(tokenInfo.firstName);\r\n          this.lastNameSource.next(tokenInfo.lastName);\r\n      //    this.useridSource.next(tokenInfo.userid);\r\n         // this.isAuthenticatedSource.next(this.checkisAuthenticated(tokenInfo.token,tokenInfo.tokenExpiration));\r\n        //  this.isTeacherSource.next(this.checkisAuthenticated(tokenInfo.token,tokenInfo.tokenExpiration)?this.checkIsTeacher(tokenInfo.isTeacher):false)\r\n\r\n\r\n          \r\n\r\n          this.tokenData.token = tokenInfo.token;\r\n          this.tokenData.tokenExpiration = tokenInfo.expiration;\r\n          this.tokenData.isTeacher=tokenInfo.isTeacher;\r\n          this.tokenData.firstName=tokenInfo.firstName;\r\n          this.tokenData.lastName=tokenInfo.lastName;\r\n          this.tokenData.userid=tokenInfo.userid;\r\n          return true;\r\n        })\r\n        \r\n        );\r\n  }\r\n\r\n     //  \r\n  /*   public IsAuthenticated(): boolean\r\n     {\r\n       return this.RealisAuthenticated;\r\n     } \r\n\r\n     public IsTeacher(): boolean\r\n     {\r\n       return this.RealisTeacher;\r\n     } \r\n*/\r\n public logout(): void\r\n {\r\n    this.tokenData=new tokenData();\r\n    this.tokenSource.next('');\r\n    this.tokenExpirationSource.next(this.tokenData.tokenExpiration);\r\n    this.firstNameSource.next('');\r\n    this.lastNameSource.next('');\r\n  //  this.isAuthenticatedSource.next(false);\r\n  //  this.isTeacherSource.next(false)\r\n }\r\n\r\n  public register(registeruser: RegisterUser) : Observable<ICourseNameData> | undefined\r\n  {\r\n    return this.http.post(this.url+\"/account/RegisterNewUser\", registeruser\r\n    ,{headers:this.getAuthHeader()}\r\n    )\r\n    .pipe(\r\n      map((response: any) => {\r\n      return response;\r\n    })\r\n    );\r\n    \r\n  }\r\n\r\n\r\n  private checkisAuthenticated(token : string, tokenExpiration : Date ) :boolean {\r\n    return !(token.length == 0 && tokenExpiration > new Date());\r\n  }\r\n\r\n  \r\n   private checkIsTeacher(isTeacher: string): boolean \r\n  {\r\n\r\n      if(isTeacher == \"Teacher\")\r\n          return true;\r\n        return false;\r\n\r\n  }\r\n \r\n  ngOnDestroy(): void {\r\n    this.unsubscribe.next();\r\n    this.unsubscribe.complete();\r\n  }\r\n\r\n}","export class tokenData\r\n{\r\n    token: string = \"\";\r\n    tokenExpiration: Date = new Date();\r\n    isTeacher:string=\"\";\r\n    firstName:string=\"\";\r\n    lastName:string=\"\";\r\n    userid:string=\"\";\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse, HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { throwError, Observable, Subject } from 'rxjs';\r\nimport { IDocument} from './document';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DocumentService {\r\n\r\n    private subject = new Subject<any>();\r\n\r\n    isUploaded(message: boolean) {\r\n        this.subject.next({ message});\r\n    }\r\n    getUplaodtStatus(): Observable<any> {\r\n        return this.subject.asObservable();\r\n    }\r\n\r\n\r\n    private documentUrl = \"https://localhost:44396/api/documents1/\";\r\n\r\n    private httpOptions = {\r\n        headers: new HttpHeaders({\r\n            'Accept': 'text/html, application/xhtml+xml, */*',\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        }),\r\n        responseType: 'blob' as'json'\r\n    };\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getDocumentsByOwnerId(id: string): Observable<IDocument[]> {\r\n        console.log(this.documentUrl);\r\n        return this.http.get<IDocument[]>(this.documentUrl + \"ByOwner?id=\" + id).pipe(\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n    uploadDocument(document: any) {\r\n        return this.http.post(this.documentUrl, document).pipe(\r\n            tap(result => JSON.stringify(result)),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    downloadFile(filePath: string): Observable<Blob> {\r\n        let input = filePath;\r\n\r\n        return this.http.post<Blob>(this.documentUrl + \"DownloadFile?fileName=\" + input, {},\r\n            this.httpOptions).pipe\r\n            (\r\n            tap(\r\n                data => \r\n                    console.log(data)),\r\n                     catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    deleteFileById(id: string) {\r\n        return this.http.delete(this.documentUrl + id).pipe(\r\n            tap(data => console.log(data)),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n}\r\n","module.exports = \".holder{}\\r\\ndiv.holder div.card:nth-child(2n+1) {\\r\\n    background-color: rgb(235, 235, 224);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudEFwcC9hcHAvZG9jdW1lbnRzL3VwbG9hZC1kZXRhaWwvdXBsb2FkLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFFBQVE7QUFDUjtJQUNJLG9DQUFvQztBQUN4QyIsImZpbGUiOiJDbGllbnRBcHAvYXBwL2RvY3VtZW50cy91cGxvYWQtZGV0YWlsL3VwbG9hZC1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob2xkZXJ7fVxyXG5kaXYuaG9sZGVyIGRpdi5jYXJkOm50aC1jaGlsZCgybisxKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjM1LCAyMzUsIDIyNCk7XHJcbn1cclxuIl19 */\"","module.exports = \"\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf='documents && documents.length'>\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n      \\r\\n        <div class=\\\"card\\\">\\r\\n            <h5 class=\\\"card-header\\\">Documents</h5>\\r\\n           \\r\\n\\r\\n            <div class=\\\"holder\\\">\\r\\n                <div class=\\\"card text-center\\\" *ngFor='let document of documents'>\\r\\n\\r\\n                    <div class=\\\"card-header\\\">\\r\\n                        <h5 class=\\\"card-title btn btn-link\\\" (click)=\\\"DownLoadFile(document.path)\\\">{{document.name}}</h5>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <p class=\\\"card-text\\\">{{document.description}}</p>\\r\\n                        <p *ngIf=\\\"isTeacher\\\" class=\\\"card-title btn btn-info\\\" (click)=\\\"DeleteFile(document.id)\\\">Remove</p>\\r\\n                    </div>\\r\\n                    <div class=\\\"card-footer text-muted\\\">\\r\\n                        {{document.uploadDate |date: 'yyyy-MM-dd'}}\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n    </div>\\r\\n\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DocumentService } from '../document.service';\r\nimport { IDocument } from '../document';\r\nimport { saveAs } from 'file-saver';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\n@Component({\r\n  selector: 'upload-detail',\r\n  templateUrl: './upload-detail.component.html',\r\n  styleUrls: ['./upload-detail.component.css']\r\n})\r\nexport class UploadDetailComponent implements OnInit,OnDestroy {\r\n    @Input() DocOwnerId: string;\r\n    documents: IDocument[] = [];\r\n    errorMessage: string;\r\n    subscription: Subscription;\r\n    isTeacher: boolean = false;\r\n\r\n    constructor(private route: ActivatedRoute, private DocumentService: DocumentService, private AuthService: AuthService) {\r\n\r\n\r\n        this.subscription = this.DocumentService.getUplaodtStatus().subscribe(status => {\r\n            if (status) {\r\n                this.loadDocument();\r\n            } \r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isTeacher = this.AuthService.isTeacher;\r\n        this.loadDocument();\r\n    }\r\n\r\n    public  loadDocument() {\r\n        this.DocumentService.getDocumentsByOwnerId(this.DocOwnerId).subscribe(\r\n            documents => {\r\n                this.documents = documents;\r\n            },\r\n            error => this.errorMessage = <any>error\r\n        );\r\n    }\r\n    DownLoadFile(fileName: string) {\r\n        this.DocumentService.downloadFile(fileName)\r\n            .subscribe(\r\n                success => {\r\n                    saveAs(success, fileName);\r\n                },\r\n            error => this.errorMessage = <any>error\r\n            );\r\n    }\r\n\r\n    DeleteFile(id: string) {\r\n        if (window.confirm('Are you sure, you want to delete?')) {\r\n            this.DocumentService.deleteFileById(id)\r\n                .subscribe(\r\n                success => {\r\n                    this.loadDocument();\r\n                },\r\n                      error => this.errorMessage = <any>error\r\n                );\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n}\r\n","module.exports = \".has-error input[type=\\\"text\\\"],\\r\\n.has-error textarea,\\r\\n.has-error input[type=\\\"file\\\"] {\\r\\n    border-color: rgb(216, 12, 12);\\r\\n    color: rgb(230, 14, 14);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudEFwcC9hcHAvZG9jdW1lbnRzL3VwbG9hZC91cGxvYWQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0lBR0ksOEJBQThCO0lBQzlCLHVCQUF1QjtBQUMzQiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL2RvY3VtZW50cy91cGxvYWQvdXBsb2FkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGFzLWVycm9yIGlucHV0W3R5cGU9XCJ0ZXh0XCJdLFxyXG4uaGFzLWVycm9yIHRleHRhcmVhLFxyXG4uaGFzLWVycm9yIGlucHV0W3R5cGU9XCJmaWxlXCJdIHtcclxuICAgIGJvcmRlci1jb2xvcjogcmdiKDIxNiwgMTIsIDEyKTtcclxuICAgIGNvbG9yOiByZ2IoMjMwLCAxNCwgMTQpO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"isTeacher\\\">\\r\\n    <div class=\\\"col-md-12\\\">\\r\\n\\r\\n        <div class=\\\"card\\\">\\r\\n            <h5 class=\\\"card-header\\\">Upload Document</h5>\\r\\n\\r\\n            <div class=\\\"card-body\\\">\\r\\n\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"showMsg\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <p class=\\\"alert alert-success\\\">\\r\\n                            <strong>Upload Success!</strong>\\r\\n\\r\\n                        </p>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n\\r\\n                   \\r\\n                        <form [formGroup]=\\\"uploadForm\\\" (ngSubmit)=\\\"upload()\\\">\\r\\n\\r\\n                            <div *ngIf=\\\"isSubmitted && formControls.name.errors\\\" class=\\\"alert alert-warning\\\">\\r\\n                                <div *ngIf=\\\"formControls.name.errors.required\\\">File name is required</div>\\r\\n                                <div *ngIf=\\\"formControls.name.errors.minlength\\\">File name must be more than 4 characters</div>\\r\\n                                <div *ngIf=\\\"formControls.name.errors.maxlength\\\">File name must be less than 25 characters</div>\\r\\n                            </div>\\r\\n\\r\\n                            <p [ngClass]=\\\"{ 'has-error': isSubmitted && formControls.name.errors }\\\">\\r\\n\\r\\n                                <input type=\\\"text\\\" formControlName=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"File Name\\\" class=\\\"form-control\\\" />\\r\\n\\r\\n                            </p>\\r\\n\\r\\n                            <div *ngIf=\\\"isSubmitted && formControls.description.errors\\\" class=\\\"alert alert-warning\\\">\\r\\n                                <div *ngIf=\\\"formControls.description.errors.required\\\">Description is required</div>\\r\\n                                <div *ngIf=\\\"formControls.description.errors.minlength\\\">Description must be more than 4 characters</div>\\r\\n                                <div *ngIf=\\\"formControls.description.errors.maxlength\\\">Description must be less than 200 characters</div>\\r\\n                            </div>\\r\\n                            <p [ngClass]=\\\"{ 'has-error': isSubmitted && formControls.description.errors }\\\">\\r\\n\\r\\n                                <textarea formControlName=\\\"description\\\" placeholder=\\\"Description\\\" name=\\\"description\\\" class=\\\"form-control\\\"></textarea>\\r\\n\\r\\n                            </p>\\r\\n                            <div *ngIf=\\\"isSubmitted && formControls.fileData.errors\\\" class=\\\"alert alert-warning\\\">\\r\\n                                <div *ngIf=\\\"formControls.fileData.errors.required\\\">File to be upload is required</div>\\r\\n\\r\\n                            </div>\\r\\n                            <p [ngClass]=\\\"{ 'has-error': isSubmitted && formControls.fileData.errors }\\\">\\r\\n\\r\\n                                <input type=\\\"file\\\" #fileInput formControlName=\\\"fileData\\\" name=\\\"fileData\\\" class=\\\"form-control\\\" />\\r\\n\\r\\n                            </p>\\r\\n\\r\\n                            <div class=\\\"form-group\\\">\\r\\n                                <input type=\\\"submit\\\" value=\\\"Upload\\\" class=\\\"btn btn-primary\\\" />\\r\\n                            </div>\\r\\n\\r\\n                        </form>\\r\\n                  </div>\\r\\n                 </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DocumentService } from '../document.service';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { flatten } from '@angular/router/src/utils/collection';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'doc-upload',\r\n  templateUrl: './upload.component.html',\r\n  styleUrls: ['./upload.component.css']\r\n})\r\nexport class UploadComponent implements OnInit {\r\n\r\n    @Input() DocumentTypeId: string;\r\n    @Input() DocOwnerId: string;\r\n    @Input() DocOwnerTypeId: string;\r\n    uploadForm: FormGroup;\r\n    isSubmitted = false;\r\n    isTeacher: boolean = false;\r\n\r\n    errorMessage: string;\r\n    @ViewChild(\"fileInput\") fileInputVariable: any;\r\n    constructor(private route: ActivatedRoute, private DocumentService: DocumentService, private router: Router, private AuthService: AuthService) { }\r\n\r\n    ngOnInit() {\r\n        this.isTeacher = this.AuthService.isTeacher;\r\n       this.uploadForm = new FormGroup({\r\n           name: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]),\r\n           description: new FormControl('', [Validators.required, Validators.minLength(10), Validators.maxLength(200)]),\r\n           fileData: new FormControl('', [Validators.required])\r\n\r\n        });\r\n    }\r\n\r\n    get formControls() { return this.uploadForm.controls; }\r\n   \r\n     \r\n    upload() {\r\n        this.isSubmitted = true;\r\n        if (this.uploadForm.invalid) {\r\n            return;\r\n        }\r\n            let fileToUpload = this.fileInputVariable.nativeElement.files[0];\r\n        let formData = new FormData();\r\n        formData.append('Name', this.uploadForm.value.name);\r\n        formData.append('Description', this.uploadForm.value.description);\r\n        formData.append('UploaderId', \"ce87a5b9-84d1-46c7-951d-f750e16b4eba\");\r\n        formData.append('DocumentTypeId', this.DocumentTypeId);\r\n        formData.append('DocOwnerTypeId', this.DocOwnerTypeId);\r\n        formData.append('DocOwnerId', this.DocOwnerId);\r\n        formData.append('FileData', fileToUpload);\r\n\r\n        this.DocumentService.uploadDocument(formData).subscribe(\r\n            (result) => {\r\n                this.DocumentService.isUploaded(true);\r\n                this.uploadForm.reset();\r\n                this.isSubmitted = false;\r\n            },\r\n            error => this.errorMessage = <any>error\r\n        );\r\n    \r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}