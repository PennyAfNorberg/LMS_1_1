{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./app/AddPartipant/add-partipant.component.css","webpack:///./app/AddPartipant/add-partipant.component.html","webpack:///./app/AddPartipant/add-partipant.component.ts","webpack:///./app/AddPartipant/add-partipant.module.ts","webpack:///./app/AddPartipant/partipant.service.ts","webpack:///./app/Courses/course-delete/course-delete.component.css","webpack:///./app/Courses/course-delete/course-delete.component.html","webpack:///./app/Courses/course-delete/course-delete.component.ts","webpack:///./app/Courses/course-detail/course-detail.component.css","webpack:///./app/Courses/course-detail/course-detail.component.html","webpack:///./app/Courses/course-detail/course-detail.component.ts","webpack:///./app/Courses/course-edit/course-edit.component.css","webpack:///./app/Courses/course-edit/course-edit.component.html","webpack:///./app/Courses/course-edit/course-edit.component.ts","webpack:///./app/Courses/course-list/course-list.component.css","webpack:///./app/Courses/course-list/course-list.component.html","webpack:///./app/Courses/course-list/course-list.component.ts","webpack:///./app/Courses/course.service.ts","webpack:///./app/Courses/courses.module.ts","webpack:///./app/Courses/create-course/create-course.component.css","webpack:///./app/Courses/create-course/create-course.component.html","webpack:///./app/Courses/create-course/create-course.component.ts","webpack:///./app/Courses/detail_list/detail_list.component.html","webpack:///./app/Courses/detail_list/detail_list.component.ts","webpack:///./app/Login/Login/login.component.css","webpack:///./app/Login/Login/login.component.html","webpack:///./app/Login/Login/login.component.ts","webpack:///./app/Login/LoginPartial/loginpartial.component.css","webpack:///./app/Login/LoginPartial/loginpartial.component.html","webpack:///./app/Login/LoginPartial/loginpartial.component.ts","webpack:///./app/Login/Register/register.component.css","webpack:///./app/Login/Register/register.component.html","webpack:///./app/Login/Register/register.component.ts","webpack:///./app/Login/Register/registeruser.ts","webpack:///./app/Login/login.module.ts","webpack:///./app/Login/login.ts","webpack:///./app/Modules/Activity_list/actitity_list.component.html","webpack:///./app/Modules/Activity_list/actitity_list.component.ts","webpack:///./app/Modules/Create/add-module-with-course-id.component.css","webpack:///./app/Modules/Create/add-module-with-course-id.component.html","webpack:///./app/Modules/Create/add-module-with-course-id.component.ts","webpack:///./app/Modules/Details/details.component.css","webpack:///./app/Modules/Details/details.component.html","webpack:///./app/Modules/Details/details.component.ts","webpack:///./app/Modules/modules.module.ts","webpack:///./app/Navbar/navbar.component.css","webpack:///./app/Navbar/navbar.component.html","webpack:///./app/Navbar/navbar.component.ts","webpack:///./app/Navbar/navbar.module.ts","webpack:///./app/NoRoute/no-route.component.css","webpack:///./app/NoRoute/no-route.component.html","webpack:///./app/NoRoute/no-route.component.ts","webpack:///./app/NoRoute/no-route.module.ts","webpack:///./app/PartipantList/partipant-list.component.css","webpack:///./app/PartipantList/partipant-list.component.html","webpack:///./app/PartipantList/partipant-list.component.ts","webpack:///./app/Shared/is-authenticated.guard.ts","webpack:///./app/Shared/is-teacher.guard.ts","webpack:///./app/Shared/shared.module.ts","webpack:///./app/app.component.css","webpack:///./app/app.component.html","webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/auth/auth.service.ts","webpack:///./app/auth/tokenData.ts","webpack:///./environments/environment.ts","webpack:///./main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0FkZFBhcnRpcGFudC9hZGQtcGFydGlwYW50LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div  >\\r\\n  <div style=\\\"text-align:center\\\"  >\\r\\n       <span *ngIf=\\\"pageTitle\\\">Add/Remove students for {{pageTitle}}</span>\\r\\n  </div>\\r\\n  <div  class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n        \\r\\n          <div>Filtera</div>\\r\\n        <div >\\r\\n            <input type='text'  [(ngModel)]='listFilter'/>\\r\\n        </div>\\r\\n        </div>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            &nbsp;\\r\\n          </div>\\r\\n        </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        \\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n  \\r\\n          <div class=\\\"table-responsive tableContainer\\\">\\r\\n            <label>Choose among these</label>\\r\\n\\r\\n\\r\\n\\r\\n            <table class=\\\"table scrollTable table-hover\\\"  cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"  >\\r\\n\\r\\n                <thead class=\\\"fixedHeader\\\">\\r\\n                  <tr id=\\\"from_ChooseFrom\\\">\\r\\n                    <th width=\\\"50%\\\">First Name</th>\\r\\n                    <th width=\\\"50%\\\">Last Name</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody id=\\\"Bodyn_ChooseFrom\\\" class=\\\"scrollContent\\\" >\\r\\n                      <tr *ngFor='let Choose of ChooseFrom'>\\r\\n                          <td width=\\\"49%\\\" name=\\\"Add\\\" (click)=\\\"chooseStudent(Choose.userid)\\\">{{Choose.firstName}}</td>\\r\\n                          <td width=\\\"49%\\\" name=\\\"Add\\\" (click)=\\\"chooseStudent(Choose.userid)\\\">{{Choose.lastName}}</td>\\r\\n                      </tr>\\r\\n\\r\\n                  </tbody>\\r\\n\\r\\n            </table>\\r\\n      \\r\\n          </div>\\r\\n        \\r\\n      </div>\\r\\n\\r\\n   \\r\\n<div class=\\\"col-sm-6\\\">\\r\\n  \\r\\n    <div class=\\\"table-responsive tableContainer\\\">\\r\\n        <label>Click here to unchoose</label>\\r\\n          <table class=\\\"table scrollTable table-hover\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" width=\\\"100%\\\"  >\\r\\n              <thead class=\\\"fixedHeader\\\">\\r\\n                <tr id=\\\"from_Choosed\\\">\\r\\n                  <th width=\\\"50%\\\">First Name</th>\\r\\n                  <th width=\\\"50%\\\">Last Name</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody id=\\\"Bodyn_Choosed\\\" class=\\\"scrollContent\\\">\\r\\n                    <tr *ngFor='let UnChoose of Choosed'>\\r\\n                        <td width=\\\"49%\\\" name=\\\"Remove\\\" (click)=\\\"unChooseStudent(UnChoose.userid)\\\">{{UnChoose.firstName}}</td>\\r\\n                        <td width=\\\"49%\\\" name=\\\"Remove\\\" (click)=\\\"unChooseStudent(UnChoose.userid)\\\">{{UnChoose.lastName}}</td>\\r\\n                    </tr>\\r\\n\\r\\n              </tbody>\\r\\n          </table>\\r\\n          <button  class=\\\"btn btn-success\\\" (click)=\\\"SaveStudents()\\\">Save</button>\\r\\n    </div>   \\r\\n    \\r\\n     \\r\\n    </div>\\r\\n    \\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\nimport { IPartipant } from './partipant';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PartipantService } from './partipant.service';\r\nimport { throwError } from 'rxjs';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'add-partipant',\r\n  templateUrl: './add-partipant.component.html',\r\n  styleUrls: ['./add-partipant.component.css']\r\n})\r\nexport class AddPartipantComponent implements OnInit {\r\nprivate test:string =\"\";\r\n  pageTitle: string = \"\";\r\n  BlackList: IPartipant[] =[];\r\n  private _ChooseFrom: IPartipant[] =[];\r\n  get ChooseFrom(): IPartipant[]  {\r\n    return this._ChooseFrom;\r\n  }\r\n  set ChooseFrom(value: IPartipant[]) {\r\n    this._ChooseFrom = value;\r\n\r\n  }\r\n\r\n\r\n  private _Choosed:IPartipant[] =[];\r\n  get Choosed(): IPartipant[]  {\r\n    return this._Choosed;\r\n  }\r\n  set Choosed(value: IPartipant[]) {\r\n    this._Choosed = value;\r\n\r\n  }\r\n\r\n  courseid: string;\r\n\r\n  _listFilter = '';\r\n  get listFilter(): string {\r\n    return this._listFilter;\r\n  }\r\n  set listFilter(value: string) {\r\n    this._listFilter = value;\r\n    this.performFilter(this.listFilter)\r\n  }\r\n\r\n\r\n  constructor(private route: ActivatedRoute,\r\n    private router: Router,\r\n    private  PartipantService: PartipantService,\r\n    \r\n  \r\n    ) { }\r\n\r\n  ngOnInit() {\r\n\r\n      this.courseid = this.route.snapshot.paramMap.get('id');\r\n      this.PartipantService.CourseId = this.courseid;\r\n    this.PartipantService.GetStudentsOff().subscribe\r\n    (\r\n      Choose=> this.ChooseFrom=Choose\r\n\r\n    \r\n    );\r\n    this.PartipantService.GetStudentsOn().subscribe\r\n    (\r\n      Choosed=>\r\n      { \r\n        this.Choosed=Choosed; \r\n        this.PartipantService.Choosed=this.Choosed;\r\n\r\n      }\r\n    );\r\n    this.PartipantService.GetCourseName().subscribe\r\n    (\r\n      CourseName => this.pageTitle=CourseName.value.name\r\n    );\r\n    \r\n  }\r\n\r\n  public chooseStudent(userid : string) : void\r\n  {\r\n\r\n      const keyin=this.ChooseFrom.findIndex(cu => cu.userid==userid);\r\n      if(keyin == -1) throwError;\r\n      const user=this.ChooseFrom.splice(+keyin,1);\r\n      this.Choosed.push(user[0]);\r\n      this.PartipantService.AddStudent(user[0]);\r\n      if(this.Choosed.length>1)\r\n      {\r\n        this.Choosed.sort(function(a,b)\r\n       {\r\n        const FirstNameA=a.firstName.toLocaleUpperCase();\r\n        const LastNameA=a.lastName.toLocaleUpperCase();\r\n        const FirstNameB=b.firstName.toLocaleUpperCase();\r\n        const LastNameB=b.lastName.toLocaleUpperCase();\r\n        if (FirstNameA < FirstNameB)\r\n            return -1;\r\n        if (FirstNameA > FirstNameB)\r\n             return 1;\r\n        if (LastNameA < LastNameB)\r\n             return -1;\r\n        if (LastNameA > LastNameB)\r\n             return 1;\r\n        return 0;\r\n      }\r\n      );\r\n    }\r\n  }\r\n\r\n  public unChooseStudent(userid : string) : void\r\n  {\r\n      const keyin=this.Choosed.findIndex(cu => cu.userid==userid);\r\n      if(keyin == -1) throwError;\r\n      const user=this.Choosed.splice(+keyin,1);\r\n      this.ChooseFrom.push(user[0]);\r\n      this.PartipantService.RemoveStudent(user[0]);\r\n      if(this.ChooseFrom.length>1)\r\n      {\r\n        this.ChooseFrom.sort(function(a,b)\r\n        {\r\n          const FirstNameA=a.firstName.toLocaleUpperCase();\r\n          const LastNameA=a.lastName.toLocaleUpperCase();\r\n          const FirstNameB=b.firstName.toLocaleUpperCase();\r\n          const LastNameB=b.lastName.toLocaleUpperCase();\r\n            if (FirstNameA < FirstNameB)\r\n                return -1;\r\n            if (FirstNameA > FirstNameB)\r\n                return 1;\r\n            if (LastNameA < LastNameB)\r\n                return -1;\r\n            if (LastNameA > LastNameB)\r\n                return 1;\r\n            return 0;\r\n        }\r\n        );\r\n      }\r\n  }\r\n  public SaveStudents()\r\n  {\r\n    this.PartipantService.SaveStudents().subscribe();\r\n    //this.router.navigate(['/courses', this.courseid]);\r\n  }\r\n\r\n  private performFilter(FilterBy: string): void\r\n  {\r\n    let l1=this.BlackList.length, i1:number;\r\n    for(i1=0;i1<l1;i1++)\r\n    { // new filter => reset before applying filter\r\n       let temp=this.BlackList.pop();\r\n       this.ChooseFrom.push(temp);\r\n\r\n    }\r\n    if(FilterBy != \"\")\r\n    {\r\n      let l2= this.ChooseFrom.length, i2:number;\r\n\r\n      for(i2=0;i2<l2;i2++)\r\n      {\r\n        if(this.ChooseFrom[i2].firstName.toLocaleUpperCase().indexOf(FilterBy.toLocaleUpperCase())==-1 &&\r\n        this.ChooseFrom[i2].lastName.toLocaleUpperCase().indexOf(FilterBy.toLocaleUpperCase())==-1\r\n        )\r\n        {\r\n          let user=this.ChooseFrom.splice(+i2,1);\r\n          this.BlackList.push(user[0]); // I Know there is just one hit cause key is scalar\r\n          i2--; // since one is gone...\r\n          l2--;// since one is gone...\r\n        }\r\n      }\r\n\r\n        if(this.ChooseFrom.length>1)\r\n        {\r\n          this.ChooseFrom.sort(function(a,b)\r\n          {\r\n          const FirstNameA=a.firstName.toLocaleUpperCase();\r\n          const LastNameA=a.lastName.toLocaleUpperCase();\r\n          const FirstNameB=b.firstName.toLocaleUpperCase();\r\n          const LastNameB=b.lastName.toLocaleUpperCase();\r\n            if (FirstNameA < FirstNameB)\r\n                return -1;\r\n            if (FirstNameA > FirstNameB)\r\n                return 1;\r\n            if (LastNameA < LastNameB)\r\n                return -1;\r\n            if (LastNameA > LastNameB)\r\n                return 1;\r\n            return 0;\r\n          }\r\n          );\r\n        }\r\n      \r\n    }\r\n  }\r\n\r\n  private FixHeader(From_id: string, To_id: string, Body_from_id: string): void\r\n   {\r\n      let element=document.querySelector(\"#\"+From_id).cloneNode(true);\r\n      let temp=[], i1, i2, el, l1;\r\n      const childs=document.querySelector(\"#\"+From_id).children;\r\n      l1= childs.length;\r\n      for( i1=0; i1<l1; i1++)\r\n      {\r\n        temp[i1]=childs.item(i1).clientWidth;\r\n      };\r\n      if(element.hasChildNodes)\r\n      {\r\n        let elchild=element.firstChild;\r\n        (elchild as HTMLElement).style.width==temp[0];\r\n        let elchild2=elchild.nextSibling;\r\n        for( i1=1; i1<l1; i1++)\r\n        {\r\n          (elchild2 as HTMLElement).style.width=temp[i1];\r\n          //elchild2.childNodes.item[0].clientWidth=temp[i1];\r\n          elchild2=elchild2.nextSibling;\r\n        }\r\n      }\r\n       let tableBody_from_id=( document.querySelector(\"table#\"+Body_from_id) as HTMLElement);\r\n       if(tableBody_from_id != null)\r\n       {\r\n        tableBody_from_id.style.tableLayout=\"fixed\";\r\n       }\r\n    //  ( document.querySelector(\"table#\"+Body_from_id) as HTMLElement).style.tableLayout=\"fixed\";\r\n      let bodytrs=document.querySelectorAll(\"#\"+Body_from_id+\" tr\");\r\n      bodytrs.forEach(function( el2, i2)\r\n      {\r\n        ( document.querySelectorAll(\"#\"+el2.id+\" td\")).forEach(function(el1,i1)\r\n        {\r\n          (el1 as HTMLElement).style.width=temp[i1];\r\n        },el2)\r\n\r\n      }, bodytrs);\r\n      let to_id_elem=document.querySelector(\"#\"+To_id);\r\n      if(to_id_elem.hasChildNodes)\r\n      {\r\n        document.querySelector(\"#\"+To_id).childNodes.forEach(function(el2, i2)\r\n        {\r\n            el2.remove();\r\n        });\r\n      };\r\n      document.querySelector(\"#\"+To_id).append(element);\r\n      (document.querySelector(\"#\"+From_id) as HTMLElement).style.display=\"none\";\r\n      (element as HTMLElement).style.display=\"Block\";\r\n  }\r\n\r\n/*\r\n   private sortfunction(a:IPartipant,b:IPartipant): -1|1|0\r\n   {\r\n    const FirstNameA=a.FirstName.toLocaleUpperCase();\r\n    const LastNameA=a.LastName.toLocaleUpperCase();\r\n    const FirstNameB=b.FirstName.toLocaleUpperCase();\r\n    const LastNameB=b.LastName.toLocaleUpperCase();\r\n    if(FirstNameA<FirstNameB)\r\n      return -1\r\n    if(FirstNameA>FirstNameB)  \r\n      return 1\r\n    if(LastNameA<LastNameB)\r\n      return -1\r\n    if(LastNameA>LastNameB)  \r\n      return 1 \r\n    return 0\r\n  }\r\n  */\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddPartipantComponent } from './add-partipant.component';\r\nimport  { RouterModule} from '@angular/router';\r\nimport { IsTeacherGuard } from '../Shared/is-teacher.guard';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n  declarations: [AddPartipantComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    \r\n    RouterModule.forChild(\r\n      [{path:'AddPartipant/:id' \r\n      ,canActivate: [IsTeacherGuard]\r\n      ,component: AddPartipantComponent }\r\n    ]\r\n    )\r\n  ],\r\n  exports: [\r\n    AddPartipantComponent\r\n  ]\r\n})\r\nexport class AddPartipantModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { IPartipant,ICourseNameData,ICourseNameSubdata } from './partipant';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\n\r\nimport {Observable, throwError} from 'rxjs';\r\nimport {catchError, tap, map} from 'rxjs/operators';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class PartipantService{\r\n\r\n    public Choosed: IPartipant[] = [];\r\n\r\n    public CourseId: string=\"\";\r\n    private token: string=\"\";\r\n\r\n    constructor(private http: HttpClient,  private AuthService:AuthService) \r\n    {\r\n        this.AuthService.token.subscribe( i => this.token=i);\r\n    }\r\n     \r\n\r\n\r\n    public GetStudentsOff(): Observable<IPartipant[] | undefined>\r\n    {\r\n        let url:string=\"https://localhost:44396/CourseUsers/GetusersOff\";  \r\n        let parmas={\"CourseId\":this.CourseId}; \r\n        return this.http.post<IPartipant[]>(url,parmas,\r\n            {headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token }) \r\n    } )\r\n        .pipe(\r\n            tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n        );    \r\n    }\r\n\r\n    public GetCourseName(): Observable<ICourseNameData| undefined>\r\n    {\r\n        let url:string=\"https://localhost:44396/CourseUsers/GetCourseName\";  \r\n        let parmas={\"CourseId\":this.CourseId}; \r\n        return this.http.post<ICourseNameData>(url,parmas\r\n            ,{headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token }) \r\n        })\r\n        .pipe(\r\n            tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n        ); \r\n\r\n     }\r\n    public GetStudentsOn(): Observable<IPartipant[] | undefined>\r\n    {\r\n        let url:string=\"https://localhost:44396/CourseUsers/GetusersOn\";  \r\n        let parmas={\"CourseId\":this.CourseId};   \r\n        return this.http.post<IPartipant[]>(url,parmas\r\n            ,{headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token }) \r\n    })\r\n        .pipe(\r\n           /* map(\r\n            (response:IPartipant[])=>\r\n        {this.Choosed=response;\r\n        }\r\n        ),*/\r\n            tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n        );  \r\n    }\r\n\r\n    public SaveStudents()\r\n    {\r\n        let url:string=\"https://localhost:44396/CourseUsers/AddStudentsToCourse\";  \r\n        let Userids: string[] =[];\r\n        for(const part of this.Choosed )\r\n        {\r\n            Userids.push(part.userid);\r\n        }\r\n        //let parmas={\"CourseId\":this.CourseId,Userids};    \r\n        return this.http.post(url,{\"CourseId\":this.CourseId,Userids},\r\n        {headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token }) \r\n    })\r\n        .pipe(tap(data => console.log('All: ' + JSON.stringify(data))),\r\n        catchError(this.handleError));\r\n\r\n    } \r\n\r\n    public AddStudent(user: IPartipant ):void\r\n    {\r\n        let item: IPartipant = this.Choosed.find(i => i.userid == user.userid  );\r\n        \r\n        if (!item) \r\n        {\r\n            this.Choosed.push(user);\r\n        }\r\n    \r\n    }\r\n\r\n    public RemoveStudent(user: IPartipant):void\r\n    {\r\n        let item: IPartipant = this.Choosed.find(i => i.userid == user.userid  );\r\n        let index = this.Choosed.indexOf(item);\r\n        if(item)\r\n        {\r\n            \r\n            this.Choosed.splice(index,1);\r\n        }\r\n    }\r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n          // A client-side or network error occurred. Handle it accordingly.\r\n          errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n          // The backend returned an unsuccessful response code.\r\n          // The response body may contain clues as to what went wrong,\r\n          errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n      }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0NvdXJzZXMvY291cnNlLWRlbGV0ZS9jb3Vyc2UtZGVsZXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>Delete</h1>\\r\\n\\r\\n<h3>Are you sure you want to delete this?</h3>\\r\\n<div>\\r\\n    <h4>Course</h4>\\r\\n    <hr />\\r\\n    <dl class=\\\"row\\\">\\r\\n        <dt class=\\\"col-sm-2\\\">\\r\\n            Course\\r\\n        </dt>\\r\\n        <dd class=\\\"col-sm-10\\\">\\r\\n            {{course.name}}\\r\\n        </dd>\\r\\n        <dt class=\\\"col-sm-2\\\">\\r\\n            Start Date\\r\\n        </dt>\\r\\n        <dd class=\\\"col-sm-10\\\">\\r\\n            {{course.startDate |date: 'yyyy-MM-dd'}}\\r\\n        </dd>\\r\\n        <dt class=\\\"col-sm-2\\\">\\r\\n            Description\\r\\n        </dt>\\r\\n        <dd class=\\\"col-sm-10\\\">\\r\\n            {{course.description}}\\r\\n        </dd>\\r\\n    </dl>\\r\\n\\r\\n    <form #mycourse=\\\"ngForm\\\" (ngSubmit)=\\\"ConfirmedDelete()\\\">\\r\\n        <input type=\\\"hidden\\\" />\\r\\n        <input type=\\\"submit\\\" value=\\\"Delete\\\" class=\\\"btn btn-danger\\\" /> |\\r\\n        <a [routerLink]=\\\"['/courses']\\\" >Back to List</a>\\r\\n    </form>\\r\\n</div>\\r\\n<h4>NOTICE! All documents and activities connected to this course will be deleted.</h4>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ICourse } from '../course';\r\nimport { CourseService } from '../course.service';\r\n\r\n@Component({\r\n  selector: 'app-course-delete',\r\n  templateUrl: './course-delete.component.html',\r\n  styleUrls: ['./course-delete.component.css']\r\n})\r\nexport class CourseDeleteComponent implements OnInit {\r\n\r\n    course: ICourse;\r\n    errorMsg: string;\r\n\r\n    constructor(private route: ActivatedRoute, private CourseService: CourseService, private router: Router) { }\r\n\r\n    ngOnInit() {\r\n        let id = this.route.snapshot.paramMap.get(\"id\");\r\n        this.CourseService.getCourseById(id).subscribe(\r\n            tcourse => { this.course = tcourse },\r\n            error => { this.errorMsg = <any>error; });\r\n    }\r\n\r\n    ConfirmedDelete() {\r\n        this.CourseService.DeleteCourse(this.course.id).subscribe();\r\n        this.router.navigate(['/courses']);\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0NvdXJzZXMvY291cnNlLWRldGFpbC9jb3Vyc2UtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"course\\\">\\r\\n<div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <div class=\\\"card\\\" style=\\\"width: 19rem;\\\">\\r\\n            <img class=\\\"card-img-top\\\" [src]=\\\"course.courseImgPath\\\" alt=\\\"Card image cap\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n                <h3 class=\\\"card-title\\\">{{course.name}}</h3>\\r\\n                <h5 class=\\\"card-title\\\">{{course.startDate |date: 'yyyy-MM-dd'}}</h5>\\r\\n                <p class=\\\"card-text\\\"> {{course.description}}</p>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <app-partipant-list [courseid]='course.id'></app-partipant-list>\\r\\n\\r\\n     \\r\\n                <div class=\\\"card-body\\\" *ngIf=\\\"isTeacher\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-6\\\">\\r\\n                  <!-- <a [routerLink]=\\\"['/Modules/AddModuleWithCourseId', course.id]\\\">Add Module</a> -->\\r\\n                  <a asp-controller=\\\"Modules\\\" asp-action=\\\"CreateWithCourseid\\\" asp-route-id=\\\"@Model.Id\\\" class=\\\"card-link\\\">Add Module</a>\\r\\n                </div>\\r\\n                <div class=\\\"col-6\\\">\\r\\n                    <a [routerLink]=\\\"['/AddPartipant', course.id]\\\">Add Participant</a>\\r\\n                </div>\\r\\n                </div>\\r\\n                </div>\\r\\n          \\r\\n        </div>\\r\\n\\r\\n\\r\\n            <div>\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n         <detail_list [courseid]=\\\"course.id\\\"></detail_list>\\r\\n    </div>\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n\\r\\n        </div>\\r\\n    </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICourse, course } from '../course';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CourseService } from '../course.service';\r\nimport { Guid } from 'guid-typescript';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\n\r\n@Component({\r\n \r\n  templateUrl: './course-detail.component.html',\r\n  styleUrls: ['./course-detail.component.css']\r\n})\r\nexport class CourseDetailComponent implements OnInit {\r\n\r\n    course: ICourse;\r\n    errorMessage: string;\r\n    isTeacher: boolean;\r\n    constructor(private route: ActivatedRoute, private CourseService: CourseService, private AuthService : AuthService) { }\r\n\r\n    ngOnInit(): void {\r\n        this.AuthService.isTeacher.subscribe( i => this.isTeacher=i);\r\n        let id: string = this.route.snapshot.paramMap.get('id');\r\n        this.CourseService.getCourseAndModulebyId(id).subscribe(\r\n                course => {\r\n                    this.course = course;\r\n                },\r\n                error => this.errorMessage = <any>error\r\n            );\r\n\r\n\r\n\r\n        \r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0NvdXJzZXMvY291cnNlLWVkaXQvY291cnNlLWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Edit</h1>\\r\\n\\r\\n<h4>Course</h4>\\r\\n<hr />\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <form #mycourse=\\\"ngForm\\\" (ngSubmit)=\\\"UpdateCourse(mycourse.value)\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Name\\\" class=\\\"control-label\\\">Course Name</label>\\r\\n                <input (ngModel)=\\\"Name\\\" name=\\\"Name\\\" class=\\\"form-control\\\" value=\\\"{{editCourse.name}}\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"StartDate\\\" class=\\\"control-label\\\">Start Date</label>\\r\\n                <input type=\\\"datetime-local\\\" (ngModel)=\\\"StartDate\\\" name=\\\"StartDate\\\" class=\\\"form-control\\\" date=\\\"{{editCourse.startdate}}\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Description\\\" class=\\\"control-label\\\">Description</label>\\r\\n                <textarea (ngModel)=\\\"Description\\\" name=\\\"Description\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"5\\\">{{editCourse.description}}</textarea>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"fileData\\\" class=\\\"control-label\\\">File</label>\\r\\n                <input type=\\\"file\\\" #fileInput (ngModel)=\\\"fileData\\\" name=\\\"fileData\\\" class=\\\"form-control\\\" />\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"submit\\\" value=\\\"Save\\\" class=\\\"btn btn-primary\\\" />\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n    <a [routerLink]=\\\"['/courses']\\\">Back to List</a>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { course } from '../course';\r\nimport { CourseService } from '../course.service';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-course-edit',\r\n  templateUrl: './course-edit.component.html',\r\n  styleUrls: ['./course-edit.component.css']\r\n})\r\nexport class CourseEditComponent implements OnInit {\r\n    editCourse: course;\r\n    errorMsg: string;\r\n    @ViewChild(\"fileInput\") fileInputVariable: any;\r\n    isTeacher: boolean;\r\n\r\n    constructor(private route: ActivatedRoute, private router: Router, private CourseService: CourseService, private AuthService: AuthService) { }\r\n\r\n    ngOnInit() {\r\n        let id = this.route.snapshot.paramMap.get(\"id\");\r\n        this.CourseService.getCourseById(id).subscribe(\r\n            tcourse => { this.editCourse = tcourse },\r\n            error => { this.errorMsg = <any>error; });\r\n    }\r\n\r\n    UpdateCourse(myCourseValues) {\r\n        let fileToUpload = this.fileInputVariable.nativeElement.files[0];\r\n        let formData = new FormData();\r\n\r\n        formData.append('id', this.editCourse.id.toString());\r\n        formData.append('Name', myCourseValues.name);\r\n        formData.append('StartDate', myCourseValues.startDate);\r\n        formData.append('Description', myCourseValues.description);\r\n        formData.append('FileData', fileToUpload);\r\n\r\n        this.CourseService.EditCourse(formData).subscribe();\r\n        this.router.navigate(['/courses']);\r\n    }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0NvdXJzZXMvY291cnNlLWxpc3QvY291cnNlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n<div class=\\\"row\\\" style=\\\"margin-bottom:15px;\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <a class=\\\"btn btn-outline-primary\\\" [routerLink]=\\\"['/courses/create']\\\" *ngIf=\\\"isTeacher\\\"> Create Course</a>\\r\\n    </div>\\r\\n</div>\\r\\n    <div class=\\\"row\\\" *ngIf='courses && courses.length'>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\" *ngFor='let course of courses'>\\r\\n\\r\\n            <div class=\\\"card\\\" style=\\\"width: 19rem;\\\">\\r\\n\\r\\n\\r\\n                <a [routerLink]=\\\"['/courses', course.id]\\\">\\r\\n                    <img class=\\\"card-img-top\\\" width=\\\"80px\\\" height=\\\"300px\\\"  [src]=\\\"course.courseImgPath==null?'':course.courseImgPath\\\" alt=\\\"Card image cap\\\" />\\r\\n                    <div class=\\\"card-body\\\">\\r\\n                        <h3 class=\\\"card-title\\\">{{course.name}}</h3>\\r\\n\\r\\n                        <h5 class=\\\"card-title\\\">{{course.startDate |date: 'yyyy-MM-dd'}}</h5>\\r\\n\\r\\n\\r\\n                    </div>\\r\\n                </a>\\r\\n                <div class=\\\"card-body\\\" *ngIf=\\\"isTeacher\\\">\\r\\n                    <a class=\\\"card-link\\\" [routerLink]=\\\"['/courses/edit', course.id]\\\">Edit Course</a>\\r\\n                    <a class=\\\"card-link\\\" [routerLink]=\\\"['/courses/delete', course.id]\\\">Delete Course</a>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Data } from '@angular/router';\r\nimport { ICourse } from '../course';\r\nimport { CourseService } from '../course.service';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\n\r\n@Component({\r\n    selector: 'course-list',\r\n    templateUrl: './course-list.component.html',\r\n    styleUrls: ['./course-list.component.css']\r\n})\r\nexport class CourseListComponent implements OnInit {\r\n\r\n    courses: ICourse[] = [];\r\n    errorMessage: string;\r\n    isTeacher: boolean;\r\n   // private userId: string;\r\n    constructor(private CourseService: CourseService, private AuthService : AuthService) {\r\n     //   this.AuthService.userid.subscribe( i => this.userId=i);\r\n    }\r\n\r\n     \r\n    ngOnInit(): void {\r\n        this.AuthService.isTeacher.subscribe( i => this.isTeacher=i);\r\n\r\n        this.CourseService.getCourses().subscribe(\r\n            courses => {\r\n                this.courses = courses;\r\n              \r\n            },\r\n            error => this.errorMessage = <any>error\r\n        );\r\n    \r\n           \r\n       \r\n  }\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\n\r\nimport { ICourse,course, IModule, IActivity2 } from './course';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\r\n\r\nimport { tap, catchError, map } from 'rxjs/operators';\r\nimport { Guid } from 'guid-typescript';\r\nimport { Data } from '@angular/router';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n\r\n@Injectable(\r\n    {\r\n        providedIn: 'root'\r\n    })\r\n\r\nexport class CourseService {\r\n    private courseUrl = \"https://localhost:44396/api/courses1\";\r\n    private token: string=\"\";\r\n\r\n    constructor(private http: HttpClient,  private AuthService:AuthService) {\r\n        this.AuthService.token.subscribe( i => this.token=i);\r\n    }\r\n    getCourses(): Observable<ICourse[]> {\r\n        return this.http.get<ICourse[]>(this.courseUrl+\"/foruser\",\r\n        {headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token }) \r\n}).pipe(\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n            );\r\n    }\r\n    getCourseById(id: string): Observable<ICourse> {\r\n        return this.http.get<ICourse>(this.courseUrl +\"/\"+id,\r\n        {headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token }) \r\n}).pipe(\r\n\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    getCourseAllById(id: string): Observable<ICourse> {\r\n        return this.http.get<ICourse>(this.courseUrl +\"/All?id=\" +id,\r\n        {headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token }) \r\n}).pipe(\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    getCourseAndModulebyId(courseid: string) : Observable<ICourse>\r\n    {\r\n        return this.http.get<ICourse>(this.courseUrl +\"/CAndM?id=\" +courseid,\r\n        {headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token }) \r\n}).pipe(\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n\r\n    }\r\n\r\n    getActivitybymodulId(Moduleid: string) : Observable<IActivity2[]>\r\n    {\r\n        return this.http.get<IActivity2[]>(this.courseUrl +\"/AfromMid?id=\" +Moduleid,\r\n        {headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token }) \r\n}).pipe(\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n\r\n    }\r\n    getModulAndActivitybyId(Moduleid: string) : Observable<IModule>\r\n    {\r\n        return this.http.get<IModule>(this.courseUrl +\"/MAndAfromMid?id=\" +Moduleid,\r\n        {headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token }) \r\n}).pipe(\r\n            tap(data => console.log('All:' + JSON.stringify(data))),\r\n            catchError(this.handleError)\r\n        );\r\n\r\n    }\r\n\r\n\r\n    createCourse(course: any) {\r\n\r\n        return this.http.post(this.courseUrl,  course,\r\n            {headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token }) \r\n    }).pipe(\r\n            tap(result => JSON.stringify(result)),\r\n            catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    //Delete a course by a given guid.\r\n    DeleteCourse(id: Guid) {\r\n        let urlString = this.courseUrl +\"/\"+ id;\r\n        return this.http.delete(urlString,\r\n            {headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token }) \r\n        })\r\n        .pipe(\r\n            tap(result=>JSON.stringify(result)),catchError(this.handleError)\r\n        );\r\n    }\r\n\r\n    //Edit a course with a given guid.\r\n    EditCourse(editCourse:any) {\r\n        return this.http.put(this.courseUrl, editCourse,\r\n            {\r\n                headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token })\r\n            })\r\n            .pipe(\r\n                tap(result => JSON.stringify(result)), catchError(this.handleError)\r\n            );\r\n    }\r\n\r\n    private handleError(err: HttpErrorResponse) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        let errorMessage = '';\r\n        if (err.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            errorMessage = `An error occurred: ${err.error.message}`;\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\r\n        }\r\n        console.error(errorMessage);\r\n        return throwError(errorMessage);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CourseListComponent } from './course-list/course-list.component';\r\nimport { CourseDetailComponent } from './course-detail/course-detail.component';\r\nimport { CreateCourseComponent } from './create-course/create-course.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { PartipantListComponent } from '../PartipantList/partipant-list.component';\r\nimport { detailList } from './detail_list/detail_list.component';\r\n\r\nimport { CourseDeleteComponent } from './course-delete/course-delete.component';\r\nimport { CourseEditComponent } from './course-edit/course-edit.component';\r\n\r\nimport { SharedModule } from '../Shared/shared.module';\r\nimport { IsAuthenticatedGuard } from '../Shared/is-authenticated.guard';\r\nimport { IsTeacherGuard } from '../Shared/is-teacher.guard';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CourseListComponent,\r\n        CourseDetailComponent,\r\n        CreateCourseComponent,\r\n        PartipantListComponent,\r\n        detailList,\r\n        CourseDeleteComponent,\r\n        CourseEditComponent\r\n    ],\r\n  imports: [\r\n      CommonModule,\r\n      FormsModule,\r\n      SharedModule,\r\n      RouterModule.forChild(\r\n          [{\r\n              path: 'courses' \r\n              ,canActivate: [IsAuthenticatedGuard]\r\n              ,component: CourseListComponent\r\n          },\r\n              {\r\n                  path: 'courses/create'\r\n                  ,canActivate: [IsTeacherGuard] \r\n                 , component: CreateCourseComponent\r\n              },\r\n              {\r\n\r\n                  path: 'courses/:id'\r\n                  ,canActivate: [IsAuthenticatedGuard]\r\n                  , component: CourseDetailComponent\r\n              },\r\n              {\r\n                  path: 'courses/delete/:id'\r\n                  ,canActivate: [IsTeacherGuard] \r\n                  , component: CourseDeleteComponent\r\n              },\r\n              {\r\n                  path: 'courses/edit/:id'\r\n                  ,canActivate: [IsTeacherGuard] \r\n                  , component: CourseEditComponent\r\n\r\n              }\r\n          ]\r\n      )\r\n  ]\r\n})\r\nexport class CoursesModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0NvdXJzZXMvY3JlYXRlLWNvdXJzZS9jcmVhdGUtY291cnNlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"showMsg\\\">\\r\\n    <div class=\\\"col-xs-12\\\">\\r\\n        <p class=\\\"alert alert-success\\\">\\r\\n            <strong>Registration Success!</strong> \\r\\n\\r\\n        </p>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n        <form #mycourse=\\\"ngForm\\\" (ngSubmit)=\\\"register(mycourse.value)\\\">\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"name\\\" class=\\\"control-label\\\">Name</label>\\r\\n                <input (ngModel)=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" />\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"startDate\\\" class=\\\"control-label\\\">StartDate</label>\\r\\n                <input type=\\\"date\\\" (ngModel)=\\\"startDate\\\"\\r\\n                       name=\\\"startDate\\\" class=\\\"form-control\\\" />\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"control-label\\\">Description</label>\\r\\n\\r\\n                <textarea (ngModel)=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\" cols=\\\"30\\\" rows=\\\"5\\\"></textarea>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"fileData\\\" class=\\\"control-label\\\">File</label>\\r\\n                <input type=\\\"file\\\" #fileInput (ngModel)=\\\"fileData\\\" name=\\\"fileData\\\" class=\\\"form-control\\\" />\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"submit\\\" value=\\\"Create\\\" class=\\\"btn btn-primary\\\" />\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ICourse } from '../course';\r\nimport { ActivatedRoute, Data, Router} from '@angular/router';\r\n\r\nimport { CourseService } from '../course.service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-create-course',\r\n  templateUrl: './create-course.component.html',\r\n  styleUrls: ['./create-course.component.css']\r\n})\r\nexport class CreateCourseComponent implements OnInit {\r\n    course: ICourse;\r\n    errorMessage: string;\r\n    courseForm: FormGroup;\r\n    @ViewChild(\"fileInput\") fileInputVariable: any;\r\n    showMsg: boolean = false;\r\n    constructor(private route: ActivatedRoute, private CourseService: CourseService, private router: Router,) { }\r\n\r\n  ngOnInit() {\r\n    }\r\n    \r\n    \r\n    \r\n\r\n    register(formValues) {\r\n\r\n       \r\n     \r\n        let fileToUpload = this.fileInputVariable.nativeElement.files[0];\r\n        let formData = new FormData();\r\n       \r\n        formData.append('Name', formValues.name);\r\n        formData.append('StartDate', formValues.startDate);\r\n        formData.append('Description', formValues.description);\r\n        formData.append('FileData', fileToUpload);\r\n        console.log(formData);\r\n        this.CourseService.createCourse(formData).subscribe(\r\n            (result) => {\r\n                this.showMsg = true;\r\n                this.router.navigate(['/courses'])\r\n                \r\n                console.log(result);\r\n                console.log(\"Created a Course\");\r\n            },\r\n            error => this.errorMessage = <any>error\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n","module.exports = \"<div *ngIf=\\\"course && course.modules && course.modules.length>0\\\">\\r\\n    <div id=\\\"accordion\\\" >\\r\\n\\r\\n        <!--string name = Regex.Replace(@module.Name, @\\\"[\\\\W_]+\\\", string.Empty);-->\\r\\n        <div class=\\\"card\\\" *ngFor=\\\"let module of course.modules\\\">\\r\\n            <div class=\\\"card-header\\\" [id]=\\\"module.id\\\">\\r\\n                <div class=\\\"row\\\">\\r\\n                \\r\\n                    <div class=\\\"btn btn-link collapsed col-6\\\"\\r\\n                        [attr.data-target]=\\\"'#'+ module.name2\\\"\\r\\n                        [attr.aria-controls]=\\\"module.name2\\\"\\r\\n                        data-toggle=\\\"collapse\\\"\\r\\n                        [attr.aria-expanded]=\\\"false\\\"\\r\\n                        (click)=\\\"TogggelCollapse(module.id)\\\"\\r\\n                        >\\r\\n                        <h5 class=\\\"mb-0\\\">  \\r\\n                          \\r\\n                            {{ module.name }}\\r\\n                        </h5>\\r\\n                        \\r\\n                     \\r\\n                    </div>\\r\\n                    \\r\\n                \\r\\n                <div class=\\\"col-6 somepadding\\\">\\r\\n                        <h5 class=\\\"mb-0\\\"> \\r\\n                        <a [routerLink]=\\\"['/Modules/', module.id]\\\">Details</a>\\r\\n                    </h5>\\r\\n                     </div>\\r\\n                    </div>\\r\\n            </div>\\r\\n\\r\\n            <div [id]=\\\"module.name2\\\" [class]=\\\"'collapse'+ module.isExpanded\\\" [attr.aria-labelledby]=\\\"module.id\\\" data-parent=\\\"#accordion\\\">\\r\\n                <div class=\\\"card-body\\\" *ngIf=\\\"module.activities && module.activities.length >0\\\">\\r\\n                    <h4>Activities</h4>\\r\\n                    <ul class=\\\"timeline\\\">\\r\\n\\r\\n                        <li *ngFor=\\\"let activity of module.activities\\\">\\r\\n                            <a asp-controller=\\\"LMSActivities\\\" asp-action=\\\"Details\\\" [attr.asp-route-id]=\\\"activity.id\\\">{{activity.name}}</a>\\r\\n                            <span class=\\\"float-right\\\"> {{activity.startDate |date: 'yyyy-MM-dd hh:mm:ss'}}</span>\\r\\n                            <p>{{activity.description}}\\r\\n                            <br>{{activity.activityType}}</p>\\r\\n                            <div *ngIf=\\\"isTeacher\\\">\\r\\n                                <a asp-controller=\\\"LMSActivities\\\" asp-action=\\\"Edit\\\" [attr.asp-route-id]=\\\"activity.id\\\">Edit Activity</a>&nbsp;|&nbsp;\\r\\n                                <a asp-controller=\\\"LMSActivities\\\" asp-action=\\\"Delete\\\" [attr.asp-route-id]=\\\"activity.id\\\">Delete Activity</a>\\r\\n                            </div>\\r\\n                        </li>\\r\\n\\r\\n                    </ul>\\r\\n                    <div *ngIf=\\\"isTeacher\\\">\\r\\n                        Add Activity\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n     </div>\\r\\n\\r\\n</div>\"","﻿import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { ICourse, course } from '../course';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CourseService } from '../course.service';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: \"detail_list\",\r\n    templateUrl: \"detail_list.component.html\",\r\n    styleUrls:[]\r\n})\r\n\r\nexport class detailList implements OnInit{\r\n\r\n     course: ICourse;\r\n     errorMessage: string;\r\n     @Input()   courseid: string;\r\n\r\n    savesubs: Array<[string,Subscription]>= new Array<[string,Subscription]>();\r\n     isTeacher: boolean;\r\n    constructor(private route: ActivatedRoute,\r\n        private CourseService: CourseService\r\n        , private AuthService : AuthService\r\n        ) \r\n        { }\r\n    \r\n    ngOnInit() {\r\n        this.AuthService.isTeacher.subscribe( i => this.isTeacher=i);\r\n\r\n\r\n        this.CourseService.getCourseAndModulebyId(this.courseid).subscribe(\r\n                course => {\r\n                    this.course = course;\r\n                },\r\n                error => this.errorMessage = <any>error\r\n            );\r\n    }\r\n\r\n    public TogggelCollapse(mid: string): void\r\n    {\r\n         if(this.course.modules.find(m => m.id.toString()==mid).isExpanded ==\" show\")\r\n        {\r\n              this.course.modules.find(m => m.id.toString()==mid).isExpanded=\"\";\r\n              if (this.savesubs.find( t => t[0]==mid))\r\n              {\r\n\r\n                  this.savesubs.find( t => t[0]==mid)[1].unsubscribe();\r\n                  this.savesubs.splice(this.savesubs.indexOf(this.savesubs.find( t => t[0]==mid)),1);\r\n              }\r\n\r\n        }\r\n         else\r\n        {\r\n           this.course.modules.find(m => m.id.toString()==mid).isExpanded=\" show\";\r\n           let temp=this.CourseService.getActivitybymodulId(mid).subscribe(\r\n                    activities=>\r\n                    {\r\n                        this.course.modules.find(m => m.id.toString()==mid).activities=activities;\r\n                    },\r\n                    error => this.errorMessage = <any>error\r\n                );\r\n            if (this.savesubs.find( t => t[0]==mid))\r\n            {\r\n                this.savesubs.find( t => t[0]==mid)[1]=temp;\r\n            }\r\n            else\r\n            {\r\n                this.savesubs.push([mid,temp])  ;\r\n            }\r\n        }\r\n    }\r\n\r\n   \r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0xvZ2luL0xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4 offset-md-4\\\">\\r\\n    <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n    <form (submit)=\\\"onLogin()\\\" #theForm=\\\"ngForm\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"user.username\\\">Username</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"user.userName\\\" #username=\\\"ngModel\\\" required />\\r\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"user.userName.touched && user.userName.invalid && user.userName.errors.required\\\" >Username is required!</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"user.password\\\">Password</label>\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"passWord\\\" [(ngModel)]=\\\"user.passWord\\\" required #password=\\\"ngModel\\\" />\\r\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"user.passWord.touched && user.passWord.invalid && user.passWord.errors.required\\\">Password is required!</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <div class=\\\"form-check\\\">\\r\\n          <input for=\\\"user.rememberMe\\\" type=\\\"checkbox\\\" name=\\\"rememberMe\\\" [(ngModel)]=\\\"user.rememberMe\\\" class=\\\"form-check-input\\\" />\\r\\n          <label for=\\\"user.rememberMe\\\" class=\\\"form-check-label\\\" >Remember Me?</label>\\r\\n        </div>\\r\\n        <span asp-validation-for=\\\"RememberMe\\\" class=\\\"text-warning\\\"></span>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"theForm.invalid\\\" />\\r\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { InnerSubscriber } from 'rxjs/internal/InnerSubscriber';\r\nimport { User } from '../login';\r\nimport { AuthService } from '../../auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n   user:User = new User();\r\n   errorMessage: string = \"\";\r\n\r\n  constructor(private db: AuthService\r\n    , private router: Router\r\n    ) { \r\n\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.user.userName=\"\";\r\n    this.user.passWord=\"\";\r\n    this.user.rememberMe=false;\r\n  }\r\n  onLogin() {\r\n    this.errorMessage = \"\";\r\n    this.db.login(this.user)\r\n      .subscribe(success => {\r\n        if (success) \r\n            this.router.navigate([\"courses\"]);  \r\n      },\r\n         err => this.errorMessage = \"Failed to login\");\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0xvZ2luL0xvZ2luUGFydGlhbC9sb2dpbnBhcnRpYWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<ul class=\\\"navbar-nav\\\">\\r\\n <div *ngIf=\\\"isAuthenticated; else LoggedOut\\\">\\r\\n      <li class=\\\"nav-item\\\" >\\r\\n          <a [routerLink]=\\\"['/Account/Manage']\\\">\\r\\n              Hello\\r\\n              \\r\\n                  <span>{{firstName}} {{lastName}}</span>\\r\\n              \\r\\n          </a>\\r\\n      </li>\\r\\n          <li class=\\\"nav-item\\\" *ngIf=\\\"isTeacher\\\">\\r\\n              <a [routerLink]=\\\"['/Account/Register']\\\">Register</a>\\r\\n          </li>\\r\\n      \\r\\n      <li class=\\\"nav-item\\\">\\r\\n            <button (click)=\\\"logout()\\\">Logout</button>\\r\\n\\r\\n      </li>\\r\\n    </div>\\r\\n\\r\\n<ng-template #LoggedOut>\\r\\n\\r\\n\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a [routerLink]=\\\"['/Account/Login']\\\">Login</a>\\r\\n      </li>\\r\\n\\r\\n</ng-template>\\r\\n</ul>\"","import { Component, OnInit} from '@angular/core';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'loginpartial',\r\n  templateUrl: './loginpartial.component.html',\r\n  styleUrls: ['./loginpartial.component.css']\r\n})\r\nexport class LoginpartialComponent implements OnInit {\r\n  \r\n  isAuthenticated: boolean\r\n  isTeacher: boolean\r\n  firstName: string;\r\n  lastName: string;\r\n  constructor(private AuthService:AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.AuthService.isAuthenticated.subscribe( i => this.isAuthenticated=i);\r\n    this.AuthService.isTeacher.subscribe(i => this.isTeacher=i);\r\n    this.AuthService.firstName.subscribe(fn => this.firstName=fn);\r\n    this.AuthService.lastName.subscribe(ln => this.lastName=ln);\r\n  }\r\n\r\n\r\n\r\n  public logout()\r\n  {\r\n    this.AuthService.logout();\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0xvZ2luL1JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4 offset-md-4\\\">\\r\\n        <h4>Create a new account.</h4>\\r\\n      <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-warning\\\">{{ errorMessage }}</div>\\r\\n      <form (submit)=\\\"onRegister()\\\" #theForm=\\\"ngForm\\\" novalidate>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"user.email\\\">Email</label>\\r\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" #email=\\\"ngModel\\\" required />\\r\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"user.email.touched && user.email.invalid && user.email.errors.required\\\" >Email is required!</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"user.firstName\\\">First Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"user.firstName\\\" #firstName=\\\"ngModel\\\" required />\\r\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"user.firstName.touched && user.firstName.invalid && user.firstName.errors.required\\\" >First Name is required!</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n                  <label for=\\\"user.lastName\\\">Last Name</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"user.lastName\\\" #lastName=\\\"ngModel\\\" required />\\r\\n                  <div class=\\\"text-danger\\\" *ngIf=\\\"user.lastName.touched && user.lastName.invalid && user.lastName.errors.required\\\" >Last Name is required!</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"user.password\\\">Password</label>\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" required #password=\\\"ngModel\\\" />\\r\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"user.password.touched && user.password.invalid && user.password.errors.required\\\">Password is required!</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"user.confirmpassword\\\">Confirm Password</label>\\r\\n              <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirmpassword\\\" [(ngModel)]=\\\"user.confirmpassword\\\" required #confirmpassword=\\\"ngModel\\\" />\\r\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"user.confirmpassword.touched && user.confirmpassword.invalid && user.confirmpassword.errors.required\\\">Confirm Password is required!</div>\\r\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"user.confirmpassword.touched && user.password.touched && user.confirmpassword!=user.password\\\">The password and the confirm password needs to be alike</div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">  \\r\\n              <label for=\\\"user.role\\\">Role</label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"role\\\" [(ngModel)]=\\\"user.role\\\" name=\\\"role\\\" required #role=\\\"ngModel\\\">\\r\\n                  <option value=\\\"Student\\\" selected>Student</option>\\r\\n                  <option value=\\\"Teacher\\\">Teacher</option>\\r\\n              </select>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n              <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Register\\\" [disabled]=\\\"theForm.invalid\\\" />\\r\\n              <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\r\\n          </div>    \\r\\n        </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IRegisterUser,RegisterUser } from './registeruser';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  user:RegisterUser= new RegisterUser();\r\n  errorMessage: string;\r\n  courseForm: FormGroup;\r\n  \r\n  constructor(private db: AuthService\r\n    , private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public onRegister()\r\n  {\r\n\r\n  }\r\n}\r\n","export interface IRegisterUser\r\n{\r\n    email: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    password: string,\r\n    confirmpassword: string,\r\n    role:string\r\n}\r\n\r\nexport class RegisterUser implements IRegisterUser\r\n{\r\n    email: string=\"\";    \r\n    firstName: string=\"\";\r\n    lastName: string=\"\";\r\n    password: string=\"\";\r\n    confirmpassword: string=\"\";\r\n    role: string=\"Student\";  \r\n}","import { NgModule } from '@angular/core';\r\nimport { FormsModule, NgForm } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport {LoginComponent} from './Login/login.component'\r\nimport { RouterModule } from '@angular/router';\r\nimport { LoginpartialComponent } from './LoginPartial/loginpartial.component';\r\nimport { IsTeacherGuard } from '../Shared/is-teacher.guard';\r\nimport { RegisterComponent } from './Register/register.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent\r\n  ,LoginpartialComponent\r\n  ,RegisterComponent\r\n],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(\r\n      [{\r\n          path: 'Account/Login', component: LoginComponent\r\n      },\r\n      {\r\n        path: 'Account/Register'\r\n        ,canActivate: [IsTeacherGuard] \r\n       , component: RegisterComponent\r\n      }\r\n      ]\r\n  )\r\n  ],\r\n  exports: [LoginpartialComponent]\r\n})\r\nexport class LoginModule { }\r\n","export class User\r\n{\r\n    userName: string;\r\n    passWord: string;\r\n    rememberMe: boolean;\r\n}\r\n","module.exports = \"<div *ngIf=\\\"module && module.activities && module.activities.length>0\\\">\\r\\n  <div id=\\\"accordion\\\" >\\r\\n\\r\\n      <!--string name = Regex.Replace(@module.Name, @\\\"[\\\\W_]+\\\", string.Empty);-->\\r\\n      <div class=\\\"card\\\" *ngFor=\\\"let activity of module.activities\\\">\\r\\n          <div class=\\\"card-header\\\" [id]=\\\"module.id\\\">\\r\\n              \\r\\n                  <div class=\\\"btn btn-link collapsed\\\"\\r\\n                      [attr.data-target]=\\\"'#'+ activity.name2\\\"\\r\\n                      [attr.aria-controls]=\\\"activity.name2\\\"\\r\\n                      data-toggle=\\\"collapse\\\"\\r\\n                      [attr.aria-expanded]=\\\"false\\\"\\r\\n                      (click)=\\\"TogggelCollapse(activity.id)\\\"\\r\\n                      >\\r\\n                      <h5 class=\\\"mb-0\\\"> \\r\\n                          {{ activity.name }}\\r\\n                        </h5>\\r\\n                  </div>\\r\\n              \\r\\n          </div>\\r\\n\\r\\n          <div [id]=\\\"activity.name2\\\" [class]=\\\"'collapse'+ activity.isExpanded\\\" [attr.aria-labelledby]=\\\"activity.id\\\" data-parent=\\\"#accordion\\\">\\r\\n              <div class=\\\"card-body\\\" *ngIf=\\\"module.activities && module.activities.length >0\\\">\\r\\n                    <span class=\\\"float-right\\\"> {{activity.startDate |date: 'yyyy-MM-dd HH:mm'}} -{{activity.endDate |date: 'yyyy-MM-dd HH:mm'}}</span>\\r\\n                    <p>{{activity.description}}\\r\\n                    <br>{{activity.activityType}}</p>\\r\\n                  <!-- Place for files under here-->\\r\\n                  <h4>Activities</h4>\\r\\n                  <ul class=\\\"timeline\\\">\\r\\n\\r\\n                      <li *ngFor=\\\"let activity of module.activities\\\">\\r\\n                            \\r\\n                          <a asp-controller=\\\"LMSActivities\\\" asp-action=\\\"Details\\\" [attr.asp-route-id]=\\\"activity.id\\\">{{activity.name}}</a>\\r\\n                          <span class=\\\"float-right\\\"> {{activity.startDate |date: 'yyyy-MM-dd hh:mm:ss'}}</span>\\r\\n                          <p>{{activity.description}}\\r\\n                          <br>{{activity.activityType.name}}</p>\\r\\n                          <div *ngIf=\\\"isTeacher\\\">\\r\\n                              <a asp-controller=\\\"LMSActivities\\\" asp-action=\\\"Edit\\\" [attr.asp-route-id]=\\\"activity.id\\\">Edit Activity</a>&nbsp;|&nbsp;\\r\\n                              <a asp-controller=\\\"LMSActivities\\\" asp-action=\\\"Delete\\\" [attr.asp-route-id]=\\\"activity.id\\\">Delete Activity</a>\\r\\n                          </div>\\r\\n                      </li>\\r\\n\\r\\n                  </ul>\\r\\n                  <div *ngIf=\\\"isTeacher\\\">\\r\\n                      Add Activity\\r\\n                  </div>\\r\\n              </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n   </div>\\r\\n\\r\\n</div>\"","import { IModule } from 'ClientApp/app/Courses/course';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CourseService } from 'ClientApp/app/Courses/course.service';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { OnInit, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: \"activity_list\",\r\n    templateUrl: \"actitity_list.component.html\",\r\n    styleUrls:[]\r\n})\r\n\r\nexport class ActitityListComponent implements OnInit {\r\n  module: IModule;\r\n  errorMessage: string;\r\n  @Input()   moduleid: string;\r\n\r\n\r\n  isTeacher: boolean=false;\r\n constructor(private route: ActivatedRoute,\r\n     private CourseService: CourseService\r\n     , private AuthService : AuthService\r\n     ) \r\n     { }\r\n \r\n ngOnInit() {\r\n     this.AuthService.isTeacher.subscribe( i => this.isTeacher=i);\r\n\r\n     //getModulAndActivitybyId(Moduleid: string) : Observable<IModule>\r\n     this.CourseService.getModulAndActivitybyId(this.moduleid).subscribe(\r\n      module => {\r\n                 this.module = module;\r\n             },\r\n             error => this.errorMessage = <any>error\r\n         );\r\n }\r\n\r\n public TogggelCollapse(aid: string): void\r\n {\r\n      if(this.module.activities.find(m => m.id.toString()==aid).isExpanded ==\" show\")\r\n     {\r\n           this.module.activities.find(m => m.id.toString()==aid).isExpanded=\"\";\r\n           // add here for filelist for activity\r\n         /*  if (this.savesubs.find( t => t[0]==mid))\r\n           {\r\n\r\n               this.savesubs.find( t => t[0]==mid)[1].unsubscribe();\r\n               this.savesubs.splice(this.savesubs.indexOf(this.savesubs.find( t => t[0]==mid)),1);\r\n           }\r\n*/\r\n     }\r\n      else\r\n     {\r\n        this.module.activities.find(m => m.id.toString()==aid).isExpanded=\" show\";\r\n       /* let temp=this.CourseService.getActivitybymodulId(mid).subscribe(\r\n                 activities=>\r\n                 {\r\n                     this.course.modules.find(m => m.id.toString()==mid).activities=activities;\r\n                 },\r\n                 error => this.errorMessage = <any>error\r\n             );\r\n         if (this.savesubs.find( t => t[0]==mid))\r\n         {\r\n             this.savesubs.find( t => t[0]==mid)[1]=temp;\r\n         }\r\n         else\r\n         {\r\n             this.savesubs.push([mid,temp])  ;\r\n         }\r\n         */\r\n     }\r\n }\r\n\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL01vZHVsZXMvQ3JlYXRlL2FkZC1tb2R1bGUtd2l0aC1jb3Vyc2UtaWQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Create</h1>\\t\\r\\n\\r\\n <h4>Module on {{courseID}}</h4>\\t\\r\\n<hr />\\t\\r\\n<div class=\\\"row\\\">\\t\\r\\n    <div class=\\\"col-md-4\\\">\\t\\r\\n\\r\\n         <form #createModule=\\\"ngForm\\\"  (ngSubmit)=\\\"Create(createModule.value)\\\">\\t\\r\\n\\r\\n             <input type=\\\"hidden\\\" (ngModel)=\\\"CourseId\\\" name=\\\"CourseId\\\" />\\t\\r\\n\\r\\n             <div class=\\\"form-group\\\">\\t\\r\\n                <label for=\\\"name\\\" class=\\\"control-label\\\">Name</label>\\t\\r\\n                <input (ngModel)=\\\"Module.name\\\" name=\\\"name\\\" id=\\\"name\\\" class=\\\"form-control\\\" />\\t\\r\\n\\r\\n             </div>\\t\\r\\n\\r\\n             <div class=\\\"form-group\\\">\\t\\r\\n                <label for=\\\"startDate\\\" class=\\\"control-label\\\">StartDate</label>\\t\\r\\n                <input  type =\\\"date\\\" (ngModel)=\\\"Module.startDate\\\" name=\\\"startDate\\\"  value=\\\"2018-07-22\\\"\\t\\r\\n                  min=\\\"2018-01-01\\\" max=\\\"2018-12-31\\\" id=\\\"startDate\\\" class=\\\"form-control\\\" />\\t\\r\\n\\r\\n             </div>\\t\\r\\n            <div class=\\\"form-group\\\">\\t\\r\\n                <label for=\\\"endDate\\\" class=\\\"control-label\\\">StartDate</label>\\t\\r\\n                <input  type =\\\"date\\\" (ngModel)=\\\"Module.endDate\\\" name=\\\"endDate\\\"  value=\\\"2018-07-22\\\"\\t\\r\\n                  min=\\\"2018-01-01\\\" max=\\\"2018-12-31\\\" id=\\\"endDate\\\" class=\\\"form-control\\\" />\\t\\r\\n\\r\\n             </div>\\t\\r\\n            <div class=\\\"form-group\\\">\\t\\r\\n                <label for=\\\"description\\\" class=\\\"control-label\\\">Description</label>\\t\\r\\n                <input (ngModel)=\\\"Module.description\\\" name=\\\"description\\\" id=\\\"description\\\" class=\\\"form-control\\\" />\\t\\r\\n\\r\\n             </div>\\t\\r\\n            <div class=\\\"form-group\\\">\\t\\r\\n                <input type=\\\"submit\\\" value=\\\"Create\\\" class=\\\"btn btn-primary\\\" />\\t\\r\\n            </div>\\t\\r\\n        </form>\\t\\r\\n\\r\\n\\r\\n     </div>\\t\\r\\n</div> \"","import { Component, OnInit } from '@angular/core';\r\nimport { IModule } from '../../courses/course';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n @Component({\t\r\n  selector: 'app-add-module-with-course-id',\t\r\n  templateUrl: './add-module-with-course-id.component.html',\t\r\n  styleUrls: ['./add-module-with-course-id.component.css']\t\r\n})\t\r\nexport class AddModuleWithCourseIdComponent implements OnInit {\t\r\n\r\n   Module: IModule;\t\r\n  CourseId: string =\"\";\t\r\n  constructor(private route: ActivatedRoute) { }\t\r\n\r\n   ngOnInit() {\t\r\n    this.CourseId = this.route.snapshot.paramMap.get('id');\t\r\n  }\t\r\n\r\n }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL01vZHVsZXMvRGV0YWlscy9kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"module\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n  \\r\\n      <div class=\\\"col-md-4\\\">\\r\\n          <div class=\\\"card\\\" style=\\\"width: 19rem;\\\">\\r\\n              <div class=\\\"card-body\\\">\\r\\n                  <h3 class=\\\"card-title\\\">{{module.name}}</h3>\\r\\n                  <h5 class=\\\"card-title\\\">{{module.startDate |date: 'yyyy-MM-dd'}} - {{module.endDate |date: 'yyyy-MM-dd'}}</h5>\\r\\n                  <p class=\\\"card-text\\\"> {{module.description}}</p>\\r\\n  \\r\\n              </div>\\r\\n  \\r\\n       \\r\\n                  <div class=\\\"card-body\\\" *ngIf=\\\"isTeacher\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-6\\\">\\r\\n                    <!-- <a [routerLink]=\\\"['/Modules/Edit', module.id]\\\">Activity/a> -->\\r\\n                    <a asp-controller=\\\"Modules\\\" asp-action=\\\"CreateWithCourseid\\\" asp-route-id=\\\"@Model.Id\\\" class=\\\"card-link\\\">Edit module</a>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                      <!--<a [routerLink]=\\\"['/Modules/Delete', module.id]\\\">Delete module</a> -->\\r\\n                      Delete module\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <!-- <a [routerLink]=\\\"['/Activites/AddActivityWithModuleId', .id]\\\">Activity/a> -->\\r\\n                    <a asp-controller=\\\"Modules\\\" asp-action=\\\"CreateWithCourseid\\\" asp-route-id=\\\"@Model.Id\\\" class=\\\"card-link\\\">Add Actitiy</a>\\r\\n                  </div>\\r\\n                  </div>\\r\\n                  </div>\\r\\n            \\r\\n          </div>\\r\\n        </div>\\r\\n  \\r\\n      <div class=\\\"col-md-6\\\">\\r\\n           <activity_list [moduleid]=\\\"module.id\\\"></activity_list>\\r\\n      </div>\\r\\n          <div class=\\\"col-md-2\\\">\\r\\n  \\r\\n          </div>\\r\\n      </div>\\r\\n  \"","import { Component, OnInit } from '@angular/core';\r\nimport { IModule } from 'ClientApp/app/Courses/course';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CourseService } from 'ClientApp/app/Courses/course.service';\r\nimport { AuthService } from 'ClientApp/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.css']\r\n})\r\nexport class ModulDetailsComponent implements OnInit {\r\n\r\n  module: IModule;\r\n  errorMessage: string;\r\n  isTeacher: boolean;\r\n  constructor(private route: ActivatedRoute, private CourseService: CourseService, private AuthService : AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n      this.AuthService.isTeacher.subscribe( i => this.isTeacher=i);\r\n      let Modulid: string = this.route.snapshot.paramMap.get('id');\r\n      this.CourseService.getModulAndActivitybyId(Modulid).subscribe(\r\n          modul=> {\r\n                  this.module = modul;\r\n              },\r\n              error => this.errorMessage = <any>error\r\n          );\r\n\r\n\r\n\r\n      \r\n}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddModuleWithCourseIdComponent } from './Create/add-module-with-course-id.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ActitityListComponent } from './Activity_list/actitity_list.component';\r\nimport { IsAuthenticatedGuard } from '../Shared/is-authenticated.guard';\r\nimport { ModulDetailsComponent } from './Details/details.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddModuleWithCourseIdComponent,\r\n    ActitityListComponent,\r\n    ModulDetailsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(\r\n        [\r\n            {\r\n                path: 'Modules/create', component: AddModuleWithCourseIdComponent\r\n            }  , \r\n          {\r\n              path: 'Modules/:id'\r\n              ,canActivate: [IsAuthenticatedGuard]\r\n              ,component: ModulDetailsComponent\r\n          }\r\n        ]\r\n    )\r\n  ]\r\n})\r\nexport class ModulesModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL05hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<header>\\r\\n  <nav class=\\\"navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n          <a class=\\\"navbar-brand\\\">LMS(Learning Management System)</a>\\r\\n          <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\" aria-controls=\\\"navbarSupportedContent\\\"\\r\\n                  aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n              <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n          </button>\\r\\n          <div class=\\\"navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse\\\">\\r\\n            <loginpartial></loginpartial>\\r\\n              <ul class=\\\"navbar-nav flex-grow-1\\\">\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                      <a class=\\\"nav-link text-dark\\\" >Home</a>\\r\\n                  </li>\\r\\n                  <li class=\\\"nav-item\\\">\\r\\n                      <a class=\\\"nav-link text-dark\\\">Privacy</a>\\r\\n                  </li>\\r\\n                  \\r\\n              </ul>\\r\\n          </div>\\r\\n      </div>\\r\\n  </nav>\\r\\n</header>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavbarComponent } from '../Navbar/navbar.component';\r\nimport { LoginModule } from '../Login/login.module';\r\n\r\n@NgModule({\r\n  declarations: [NavbarComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LoginModule\r\n  ],\r\n  exports: [NavbarComponent]\r\n})\r\nexport class NavbarModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL05vUm91dGUvbm8tcm91dGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    Welcome to {{ title }}!\\r\\n   Not route here.\\r\\n  </h1>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-no-route',\r\n  templateUrl: './no-route.component.html',\r\n  styleUrls: ['./no-route.component.css']\r\n})\r\nexport class NoRouteComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  title = 'Test';\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NoRouteComponent } from './no-route.component';\r\n\r\n@NgModule({\r\n  declarations: [NoRouteComponent],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class NoRouteModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL1BhcnRpcGFudExpc3QvcGFydGlwYW50LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div *ngIf=\\\"users && users.length>0\\\">\\r\\n  <ul  *ngFor=\\\"let user of users\\\">\\r\\n    <li>{{user.firstName}} {{user.lastName}}</li>\\r\\n  </ul>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IPartipant } from '../AddPartipant/partipant';\r\n\r\nimport { PartipantService } from '../AddPartipant/partipant.service';\r\n\r\n@Component({\r\n  selector: 'app-partipant-list',\r\n  templateUrl: './partipant-list.component.html',\r\n  styleUrls: ['./partipant-list.component.css']\r\n})\r\nexport class PartipantListComponent implements OnInit {\r\n\r\n   users: IPartipant[];\r\n   @Input()   courseid: string=\"\";\r\n\r\n  constructor(private route: ActivatedRoute, private  PartipantService: PartipantService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.PartipantService.CourseId=this.courseid;\r\n    this.PartipantService.GetStudentsOn().subscribe\r\n    (\r\n      user=>\r\n      { \r\n        this.users= user; \r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { CanActivate, CanLoad, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IsAuthenticatedGuard implements CanActivate, CanLoad {\r\n\r\n  canLoad(route: import(\"@angular/router\").Route, segments: import(\"@angular/router\").UrlSegment[]): boolean \r\n  {\r\n    if(!(this.auth.IsAuthenticated()))\r\n    {\r\n      this.router.navigate(['/Account/Login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n\r\n\r\n\r\n  constructor(private auth: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean   {\r\n   //  this.auth.isTeacher.subscribe((i:Boolean) => {return i});\r\n   \r\n    if(!(this.auth.IsAuthenticated()))\r\n    {\r\n      this.router.navigate(['/Account/Login']);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { Router, CanActivate, CanLoad } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IsTeacherGuard implements CanActivate , CanLoad {\r\n \r\n  canLoad(route: import(\"@angular/router\").Route, segments: import(\"@angular/router\").UrlSegment[]): boolean \r\n  {\r\n    if(!(this.auth.IsTeacher()))\r\n    {\r\n      this.router.navigate(['/Account/Login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  isTeacher: boolean= false;\r\n\r\n\r\n  constructor(public auth: AuthService, public router: Router) {}\r\n\r\n  canActivate(): boolean   {\r\n   //  this.auth.isTeacher.subscribe((i:Boolean) => {return i});\r\n   \r\n    if(!(this.auth.IsTeacher()))\r\n    {\r\n      this.router.navigate(['/Account/Login']);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n      CommonModule\r\n    ],\r\n    declarations: [\r\n    \r\n  \r\n    ],\r\n    exports: [\r\n      CommonModule,\r\n      FormsModule,\r\n \r\n    ]\r\n  })\r\n  export class SharedModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<navbar></navbar>\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Test';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppComponent } from './app.component';\r\nimport { AddPartipantModule } from './AddPartipant/add-partipant.module';\r\nimport { NoRouteModule } from './NoRoute/no-route.module';\r\nimport { NoRouteComponent } from './NoRoute/no-route.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CoursesModule } from './Courses/courses.module';\r\nimport { NavbarModule } from './Navbar/navbar.module';\r\nimport { LoginModule } from './Login/login.module';\r\nimport { ModulesModule } from './Modules/modules.module';\r\nimport { LoginpartialComponent } from './Login/LoginPartial/loginpartial.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n    \r\n  ],\r\n    imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    AddPartipantModule,\r\n    CoursesModule,\r\n    RouterModule.forRoot([\r\n        \r\n        {\r\n            path: '**', component: NoRouteComponent\r\n        }\r\n      \r\n    ], {\r\n      enableTracing: false // for debug\r\n    }),\r\n      NoRouteModule,\r\n      HttpClientModule,\r\n      NavbarModule,\r\n      LoginModule,\r\n      ModulesModule,\r\n     \r\n   \r\n  ],\r\n  providers: [],\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable, OnInit } from '@angular/core';\r\n//import { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { User } from '../Login/login';\r\nimport { tokenData } from './tokenData';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable(\r\n  {\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService  {\r\n\r\n  \r\n  // ...public jwtHelper: JwtHelperService,\r\n\r\n\r\n   private tokenData: tokenData=new tokenData();\r\n\r\nprivate tokenSource = new BehaviorSubject(' ');\r\ntoken = this.tokenSource.asObservable();\r\n\r\nprivate tokenExpirationSource = new BehaviorSubject(new Date());\r\ntokenExpiration = this.tokenExpirationSource.asObservable();\r\n\r\nprivate firstNameSource = new BehaviorSubject(' ');\r\nfirstName = this.firstNameSource.asObservable();\r\n\r\nprivate lastNameSource = new BehaviorSubject(' ');\r\nlastName = this.lastNameSource.asObservable();\r\n\r\n/*\r\nprivate useridSource = new BehaviorSubject(' ');\r\nuserid = this.useridSource.asObservable();\r\n*/\r\nprivate isAuthenticatedSource = new BehaviorSubject(false);\r\nisAuthenticated = this.isAuthenticatedSource.asObservable();\r\n\r\nprivate isTeacherSource = new BehaviorSubject(false);\r\nisTeacher = this.isTeacherSource.asObservable();\r\n\r\nRealisAuthenticated : boolean = false;\r\nRealisTeacher : boolean = false;\r\n\r\nconstructor(private http: HttpClient) {\r\n  this.isAuthenticated.subscribe( i => this.RealisAuthenticated=i);\r\n  this.isTeacher.subscribe(i => this.RealisTeacher=i);\r\n\r\n}\r\n/*\r\nngOnInit(): void {\r\n  this.isAuthenticated.subscribe( i => this.RealisAuthenticated=i);\r\n  this.isTeacher.subscribe(i => this.RealisTeacher=i);\r\n}*/\r\n\r\n/*\r\n  get token(): Observable<string> {\r\n    return this.tokenData.token\r\n  }\r\n  \r\n\r\n  get tokenExpiration():Date\r\n  {\r\n    return this.tokenData.tokenExpiration;\r\n  }\r\n\r\n\r\n  get FirstName():string\r\n  {\r\n    return this.tokenData.firstName;\r\n  }\r\n\r\n  get LastName():string\r\n  {\r\n    return this.tokenData.lastName;\r\n  }\r\n  get Userid():string\r\n  {\r\n    return this.tokenData.userid;\r\n  }\r\n  */\r\n private url:string=\"https://localhost:44396\";\r\n\r\n  private _isTeacher:string=\"\";\r\n\r\n  \r\n  public login(creds:User) : Observable<boolean> | undefined {\r\n    return this.http.post(this.url+\"/account/createtoken\", creds)\r\n      .pipe(\r\n        map((response: any) => {\r\n          let tokenInfo = response;\r\n         \r\n          this.tokenSource.next(tokenInfo.token==null?'':tokenInfo.token);\r\n          this.tokenExpirationSource.next(tokenInfo.tokenExpiration);\r\n          this.firstNameSource.next(tokenInfo.firstName);\r\n          this.lastNameSource.next(tokenInfo.lastName);\r\n      //    this.useridSource.next(tokenInfo.userid);\r\n          this.isAuthenticatedSource.next(this.checkisAuthenticated(tokenInfo.token,tokenInfo.tokenExpiration));\r\n          this.isTeacherSource.next(this.checkisAuthenticated(tokenInfo.token,tokenInfo.tokenExpiration)?this.checkIsTeacher(tokenInfo.isTeacher):false)\r\n\r\n\r\n          \r\n\r\n          this.tokenData.token = tokenInfo.token;\r\n          this.tokenData.tokenExpiration = tokenInfo.expiration;\r\n          this.tokenData.isTeacher=tokenInfo.isTeacher;\r\n          this.tokenData.firstName=tokenInfo.firstName;\r\n          this.tokenData.lastName=tokenInfo.lastName;\r\n          this.tokenData.userid=tokenInfo.userid;\r\n          return true;\r\n        })\r\n        \r\n        );\r\n  }\r\n\r\n     //  \r\n     public IsAuthenticated(): boolean\r\n     {\r\n       return this.RealisAuthenticated;\r\n     } \r\n\r\n     public IsTeacher(): boolean\r\n     {\r\n       return this.RealisTeacher;\r\n     } \r\n\r\n public logout()\r\n {\r\n    this.tokenData=new tokenData();\r\n }\r\n\r\n  private checkisAuthenticated(token : string, tokenExpiration : Date ) :boolean {\r\n    return !(token.length == 0 && tokenExpiration > new Date());\r\n  }\r\n\r\n  \r\n   private checkIsTeacher(isTeacher: string): boolean \r\n  {\r\n\r\n      if(isTeacher == \"Teacher\")\r\n          return true;\r\n        return false;\r\n\r\n  }\r\n  \r\n}","export class tokenData\r\n{\r\n    token: string = \"\";\r\n    tokenExpiration: Date = new Date();\r\n    isTeacher:string=\"\";\r\n    firstName:string=\"\";\r\n    lastName:string=\"\";\r\n    userid:string=\"\";\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}